
COTS.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001f96  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000005a  00800060  00001f96  0000202a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000699  008000ba  008000ba  00002084  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00002084  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000020b4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000538  00000000  00000000  000020f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000054fa  00000000  00000000  00002628  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000179a  00000000  00000000  00007b22  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00003173  00000000  00000000  000092bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000f04  00000000  00000000  0000c430  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00001913  00000000  00000000  0000d334  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000048cd  00000000  00000000  0000ec47  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000498  00000000  00000000  00013514  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 e2 03 	jmp	0x7c4	; 0x7c4 <__vector_1>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 b3 04 	jmp	0x966	; 0x966 <__vector_6>
      1c:	0c 94 3e 08 	jmp	0x107c	; 0x107c <__vector_7>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 8e 04 	jmp	0x91c	; 0x91c <__vector_9>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 4d 04 	jmp	0x89a	; 0x89a <__vector_11>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 63 05 	jmp	0xac6	; 0xac6 <__vector_13>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 8c 05 	jmp	0xb18	; 0xb18 <__vector_15>
      40:	0c 94 0b 04 	jmp	0x816	; 0x816 <__vector_16>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e6 e9       	ldi	r30, 0x96	; 150
      68:	ff e1       	ldi	r31, 0x1F	; 31
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	aa 3b       	cpi	r26, 0xBA	; 186
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
      76:	27 e0       	ldi	r18, 0x07	; 7
      78:	aa eb       	ldi	r26, 0xBA	; 186
      7a:	b0 e0       	ldi	r27, 0x00	; 0
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a3 35       	cpi	r26, 0x53	; 83
      82:	b2 07       	cpc	r27, r18
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 4f 01 	call	0x29e	; 0x29e <main>
      8a:	0c 94 c9 0f 	jmp	0x1f92	; 0x1f92 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <Task_1>:
void Task_1(void* p)
{
	
	while(1)
	{
		PORT_Init();
      92:	0e 94 a0 05 	call	0xb40	; 0xb40 <PORT_Init>
		LCD_Init();
      96:	0e 94 42 02 	call	0x484	; 0x484 <LCD_Init>
		KeyPad_Init();
      9a:	0e 94 85 01 	call	0x30a	; 0x30a <KeyPad_Init>
		/*SEMA_1_HANDEL = xSemaphoreCreateBinary();
		xSemaphoreTake(SEMA_1_HANDEL , (TickType_t)0);*/
		xQueue =xQueueCreate(QUEUE_LENGTH , ITEM_SIZE);
      9e:	40 e0       	ldi	r20, 0x00	; 0
      a0:	64 e0       	ldi	r22, 0x04	; 4
      a2:	8a e0       	ldi	r24, 0x0A	; 10
      a4:	0e 94 4c 09 	call	0x1298	; 0x1298 <xQueueGenericCreate>
      a8:	90 93 bb 00 	sts	0x00BB, r25	; 0x8000bb <__data_end+0x1>
      ac:	80 93 ba 00 	sts	0x00BA, r24	; 0x8000ba <__data_end>
		vTaskSuspend( Task_1_Handle );
      b0:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <Task_1_Handle>
      b4:	90 91 c1 00 	lds	r25, 0x00C1	; 0x8000c1 <Task_1_Handle+0x1>
      b8:	0e 94 62 0e 	call	0x1cc4	; 0x1cc4 <vTaskSuspend>
      bc:	ea cf       	rjmp	.-44     	; 0x92 <Task_1>

000000be <Task_2>:
	}
}

*/
void Task_2(void* p)
{
      be:	cf 93       	push	r28
      c0:	df 93       	push	r29
      c2:	1f 92       	push	r1
      c4:	cd b7       	in	r28, 0x3d	; 61
      c6:	de b7       	in	r29, 0x3e	; 62
	uint8 var = 0 ;
      c8:	19 82       	std	Y+1, r1	; 0x01
	
	while(1)
	{
		var = KeyPad_GetValue() ;
      ca:	0e 94 97 01 	call	0x32e	; 0x32e <KeyPad_GetValue>
      ce:	89 83       	std	Y+1, r24	; 0x01
		
		if( var != 0 )
      d0:	88 23       	and	r24, r24
      d2:	61 f0       	breq	.+24     	; 0xec <Task_2+0x2e>
		{
			
			xQueueSend(xQueue , (void *) &var , (TickType_t) 10);
      d4:	20 e0       	ldi	r18, 0x00	; 0
      d6:	4a e0       	ldi	r20, 0x0A	; 10
      d8:	50 e0       	ldi	r21, 0x00	; 0
      da:	be 01       	movw	r22, r28
      dc:	6f 5f       	subi	r22, 0xFF	; 255
      de:	7f 4f       	sbci	r23, 0xFF	; 255
      e0:	80 91 ba 00 	lds	r24, 0x00BA	; 0x8000ba <__data_end>
      e4:	90 91 bb 00 	lds	r25, 0x00BB	; 0x8000bb <__data_end+0x1>
      e8:	0e 94 76 09 	call	0x12ec	; 0x12ec <xQueueGenericSend>
			
		}
		vTaskDelay( 100 );
      ec:	84 e6       	ldi	r24, 0x64	; 100
      ee:	90 e0       	ldi	r25, 0x00	; 0
      f0:	0e 94 f8 0d 	call	0x1bf0	; 0x1bf0 <vTaskDelay>
	}
      f4:	ea cf       	rjmp	.-44     	; 0xca <Task_2+0xc>

000000f6 <Task_3>:
}

void Task_3(void* p)
{
      f6:	cf 93       	push	r28
      f8:	df 93       	push	r29
      fa:	cd b7       	in	r28, 0x3d	; 61
      fc:	de b7       	in	r29, 0x3e	; 62
      fe:	60 97       	sbiw	r28, 0x10	; 16
     100:	0f b6       	in	r0, 0x3f	; 63
     102:	f8 94       	cli
     104:	de bf       	out	0x3e, r29	; 62
     106:	0f be       	out	0x3f, r0	; 63
     108:	cd bf       	out	0x3d, r28	; 61
	uint8 Keyval = 0 , flag = 0, op_cnt=0 , num_cnt=0;
     10a:	19 82       	std	Y+1, r1	; 0x01
	uint8 result = 0;
	uint8 Inserted_values[10] = {0};
     10c:	fe 01       	movw	r30, r28
     10e:	32 96       	adiw	r30, 0x02	; 2
     110:	8a e0       	ldi	r24, 0x0A	; 10
     112:	df 01       	movw	r26, r30
     114:	1d 92       	st	X+, r1
     116:	8a 95       	dec	r24
     118:	e9 f7       	brne	.-6      	; 0x114 <Task_3+0x1e>
	uint8 Operators[5] = {0};
     11a:	3a 96       	adiw	r30, 0x0a	; 10
     11c:	85 e0       	ldi	r24, 0x05	; 5
     11e:	df 01       	movw	r26, r30
     120:	1d 92       	st	X+, r1
     122:	8a 95       	dec	r24
     124:	e9 f7       	brne	.-6      	; 0x120 <Task_3+0x2a>
	}
}

void Task_3(void* p)
{
	uint8 Keyval = 0 , flag = 0, op_cnt=0 , num_cnt=0;
     126:	00 e0       	ldi	r16, 0x00	; 0
     128:	10 e0       	ldi	r17, 0x00	; 0
	uint8 Inserted_values[10] = {0};
	uint8 Operators[5] = {0};
	
	while(1)
	{
		xQueueReceive(xQueue , &Keyval , 10);
     12a:	4a e0       	ldi	r20, 0x0A	; 10
     12c:	50 e0       	ldi	r21, 0x00	; 0
     12e:	be 01       	movw	r22, r28
     130:	6f 5f       	subi	r22, 0xFF	; 255
     132:	7f 4f       	sbci	r23, 0xFF	; 255
     134:	80 91 ba 00 	lds	r24, 0x00BA	; 0x8000ba <__data_end>
     138:	90 91 bb 00 	lds	r25, 0x00BB	; 0x8000bb <__data_end+0x1>
     13c:	0e 94 08 0a 	call	0x1410	; 0x1410 <xQueueReceive>
		
		if(Keyval != 0)
     140:	89 81       	ldd	r24, Y+1	; 0x01
     142:	88 23       	and	r24, r24
     144:	09 f4       	brne	.+2      	; 0x148 <Task_3+0x52>
     146:	a6 c0       	rjmp	.+332    	; 0x294 <Task_3+0x19e>
		{
			LCD_WriteChar(Keyval);
     148:	0e 94 58 02 	call	0x4b0	; 0x4b0 <LCD_WriteChar>
			
			if(Keyval == '-' || Keyval == '+' || Keyval == '/' || Keyval== '*')
     14c:	89 81       	ldd	r24, Y+1	; 0x01
     14e:	8d 32       	cpi	r24, 0x2D	; 45
     150:	31 f0       	breq	.+12     	; 0x15e <Task_3+0x68>
     152:	8b 32       	cpi	r24, 0x2B	; 43
     154:	21 f0       	breq	.+8      	; 0x15e <Task_3+0x68>
     156:	8f 32       	cpi	r24, 0x2F	; 47
     158:	11 f0       	breq	.+4      	; 0x15e <Task_3+0x68>
     15a:	8a 32       	cpi	r24, 0x2A	; 42
     15c:	51 f4       	brne	.+20     	; 0x172 <Task_3+0x7c>
			{
				Operators[op_cnt] = Keyval;
     15e:	ec e0       	ldi	r30, 0x0C	; 12
     160:	f0 e0       	ldi	r31, 0x00	; 0
     162:	ec 0f       	add	r30, r28
     164:	fd 1f       	adc	r31, r29
     166:	e1 0f       	add	r30, r17
     168:	f1 1d       	adc	r31, r1
     16a:	80 83       	st	Z, r24
				op_cnt++;
     16c:	1f 5f       	subi	r17, 0xFF	; 255
				num_cnt++;
     16e:	0f 5f       	subi	r16, 0xFF	; 255
     170:	90 c0       	rjmp	.+288    	; 0x292 <Task_3+0x19c>
			}
			else if(Keyval >= 48 && Keyval < 57)
     172:	90 ed       	ldi	r25, 0xD0	; 208
     174:	98 0f       	add	r25, r24
     176:	99 30       	cpi	r25, 0x09	; 9
     178:	80 f4       	brcc	.+32     	; 0x19a <Task_3+0xa4>
			{
				Inserted_values[num_cnt] *= 10;
     17a:	e2 e0       	ldi	r30, 0x02	; 2
     17c:	f0 e0       	ldi	r31, 0x00	; 0
     17e:	ec 0f       	add	r30, r28
     180:	fd 1f       	adc	r31, r29
     182:	e0 0f       	add	r30, r16
     184:	f1 1d       	adc	r31, r1
     186:	90 81       	ld	r25, Z
     188:	99 0f       	add	r25, r25
     18a:	29 2f       	mov	r18, r25
     18c:	22 0f       	add	r18, r18
     18e:	22 0f       	add	r18, r18
     190:	92 0f       	add	r25, r18
				Inserted_values[num_cnt] += (Keyval - 48);
     192:	89 0f       	add	r24, r25
     194:	80 53       	subi	r24, 0x30	; 48
     196:	80 83       	st	Z, r24
     198:	7c c0       	rjmp	.+248    	; 0x292 <Task_3+0x19c>
			}
			else if(Keyval == '=')
     19a:	8d 33       	cpi	r24, 0x3D	; 61
     19c:	09 f0       	breq	.+2      	; 0x1a0 <Task_3+0xaa>
     19e:	79 c0       	rjmp	.+242    	; 0x292 <Task_3+0x19c>
     1a0:	61 c0       	rjmp	.+194    	; 0x264 <Task_3+0x16e>
				op_cnt = 0;
				num_cnt = 0;
				while(Operators[op_cnt] != 0)
				{
					
					switch(Operators[op_cnt])
     1a2:	8b 32       	cpi	r24, 0x2B	; 43
     1a4:	51 f0       	breq	.+20     	; 0x1ba <Task_3+0xc4>
     1a6:	18 f4       	brcc	.+6      	; 0x1ae <Task_3+0xb8>
     1a8:	8a 32       	cpi	r24, 0x2A	; 42
     1aa:	79 f1       	breq	.+94     	; 0x20a <Task_3+0x114>
     1ac:	58 c0       	rjmp	.+176    	; 0x25e <Task_3+0x168>
     1ae:	8d 32       	cpi	r24, 0x2D	; 45
     1b0:	c1 f0       	breq	.+48     	; 0x1e2 <Task_3+0xec>
     1b2:	8f 32       	cpi	r24, 0x2F	; 47
     1b4:	09 f4       	brne	.+2      	; 0x1b8 <Task_3+0xc2>
     1b6:	3f c0       	rjmp	.+126    	; 0x236 <Task_3+0x140>
     1b8:	52 c0       	rjmp	.+164    	; 0x25e <Task_3+0x168>
					{
						case '+' :
						Inserted_values[num_cnt+1] =(Inserted_values[num_cnt] + Inserted_values[num_cnt+1]);
     1ba:	e0 2f       	mov	r30, r16
     1bc:	f0 e0       	ldi	r31, 0x00	; 0
     1be:	a2 e0       	ldi	r26, 0x02	; 2
     1c0:	b0 e0       	ldi	r27, 0x00	; 0
     1c2:	ac 0f       	add	r26, r28
     1c4:	bd 1f       	adc	r27, r29
     1c6:	ae 0f       	add	r26, r30
     1c8:	bf 1f       	adc	r27, r31
     1ca:	9c 91       	ld	r25, X
     1cc:	31 96       	adiw	r30, 0x01	; 1
     1ce:	22 e0       	ldi	r18, 0x02	; 2
     1d0:	30 e0       	ldi	r19, 0x00	; 0
     1d2:	2c 0f       	add	r18, r28
     1d4:	3d 1f       	adc	r19, r29
     1d6:	e2 0f       	add	r30, r18
     1d8:	f3 1f       	adc	r31, r19
     1da:	80 81       	ld	r24, Z
     1dc:	89 0f       	add	r24, r25
     1de:	80 83       	st	Z, r24
						break;
     1e0:	3e c0       	rjmp	.+124    	; 0x25e <Task_3+0x168>
						case '-' :
						Inserted_values[num_cnt+1] = Inserted_values[num_cnt] - Inserted_values[num_cnt+1];
     1e2:	e0 2f       	mov	r30, r16
     1e4:	f0 e0       	ldi	r31, 0x00	; 0
     1e6:	a2 e0       	ldi	r26, 0x02	; 2
     1e8:	b0 e0       	ldi	r27, 0x00	; 0
     1ea:	ac 0f       	add	r26, r28
     1ec:	bd 1f       	adc	r27, r29
     1ee:	ae 0f       	add	r26, r30
     1f0:	bf 1f       	adc	r27, r31
     1f2:	8c 91       	ld	r24, X
     1f4:	31 96       	adiw	r30, 0x01	; 1
     1f6:	a2 e0       	ldi	r26, 0x02	; 2
     1f8:	b0 e0       	ldi	r27, 0x00	; 0
     1fa:	ac 0f       	add	r26, r28
     1fc:	bd 1f       	adc	r27, r29
     1fe:	ea 0f       	add	r30, r26
     200:	fb 1f       	adc	r31, r27
     202:	90 81       	ld	r25, Z
     204:	89 1b       	sub	r24, r25
     206:	80 83       	st	Z, r24
						break;
     208:	2a c0       	rjmp	.+84     	; 0x25e <Task_3+0x168>
						case '*' :
						Inserted_values[num_cnt+1] = Inserted_values[num_cnt] * Inserted_values[num_cnt+1];
     20a:	e0 2f       	mov	r30, r16
     20c:	f0 e0       	ldi	r31, 0x00	; 0
     20e:	a2 e0       	ldi	r26, 0x02	; 2
     210:	b0 e0       	ldi	r27, 0x00	; 0
     212:	ac 0f       	add	r26, r28
     214:	bd 1f       	adc	r27, r29
     216:	ae 0f       	add	r26, r30
     218:	bf 1f       	adc	r27, r31
     21a:	8c 91       	ld	r24, X
     21c:	31 96       	adiw	r30, 0x01	; 1
     21e:	22 e0       	ldi	r18, 0x02	; 2
     220:	30 e0       	ldi	r19, 0x00	; 0
     222:	2c 0f       	add	r18, r28
     224:	3d 1f       	adc	r19, r29
     226:	e2 0f       	add	r30, r18
     228:	f3 1f       	adc	r31, r19
     22a:	90 81       	ld	r25, Z
     22c:	89 9f       	mul	r24, r25
     22e:	80 2d       	mov	r24, r0
     230:	11 24       	eor	r1, r1
     232:	80 83       	st	Z, r24
						break;
     234:	14 c0       	rjmp	.+40     	; 0x25e <Task_3+0x168>
						case '/' :
						Inserted_values[num_cnt+1] = Inserted_values[num_cnt] / Inserted_values[num_cnt+1];
     236:	e0 2f       	mov	r30, r16
     238:	f0 e0       	ldi	r31, 0x00	; 0
     23a:	a2 e0       	ldi	r26, 0x02	; 2
     23c:	b0 e0       	ldi	r27, 0x00	; 0
     23e:	ac 0f       	add	r26, r28
     240:	bd 1f       	adc	r27, r29
     242:	ae 0f       	add	r26, r30
     244:	bf 1f       	adc	r27, r31
     246:	8c 91       	ld	r24, X
     248:	31 96       	adiw	r30, 0x01	; 1
     24a:	a2 e0       	ldi	r26, 0x02	; 2
     24c:	b0 e0       	ldi	r27, 0x00	; 0
     24e:	ac 0f       	add	r26, r28
     250:	bd 1f       	adc	r27, r29
     252:	ea 0f       	add	r30, r26
     254:	fb 1f       	adc	r31, r27
     256:	60 81       	ld	r22, Z
     258:	0e 94 59 0f 	call	0x1eb2	; 0x1eb2 <__udivmodqi4>
     25c:	80 83       	st	Z, r24
						break;
					}
					num_cnt++;
     25e:	0f 5f       	subi	r16, 0xFF	; 255
					op_cnt++;
     260:	1f 5f       	subi	r17, 0xFF	; 255
     262:	02 c0       	rjmp	.+4      	; 0x268 <Task_3+0x172>
     264:	00 e0       	ldi	r16, 0x00	; 0
     266:	10 e0       	ldi	r17, 0x00	; 0
			}
			else if(Keyval == '=')
			{
				op_cnt = 0;
				num_cnt = 0;
				while(Operators[op_cnt] != 0)
     268:	ec e0       	ldi	r30, 0x0C	; 12
     26a:	f0 e0       	ldi	r31, 0x00	; 0
     26c:	ec 0f       	add	r30, r28
     26e:	fd 1f       	adc	r31, r29
     270:	e1 0f       	add	r30, r17
     272:	f1 1d       	adc	r31, r1
     274:	80 81       	ld	r24, Z
     276:	81 11       	cpse	r24, r1
     278:	94 cf       	rjmp	.-216    	; 0x1a2 <Task_3+0xac>
						break;
					}
					num_cnt++;
					op_cnt++;
				}
				LCD_WriteInteger(Inserted_values[num_cnt]);
     27a:	e2 e0       	ldi	r30, 0x02	; 2
     27c:	f0 e0       	ldi	r31, 0x00	; 0
     27e:	ec 0f       	add	r30, r28
     280:	fd 1f       	adc	r31, r29
     282:	e0 0f       	add	r30, r16
     284:	f1 1d       	adc	r31, r1
     286:	60 81       	ld	r22, Z
     288:	70 e0       	ldi	r23, 0x00	; 0
     28a:	80 e0       	ldi	r24, 0x00	; 0
     28c:	90 e0       	ldi	r25, 0x00	; 0
     28e:	0e 94 b6 02 	call	0x56c	; 0x56c <LCD_WriteInteger>
			}

			Keyval = 0 ;
     292:	19 82       	std	Y+1, r1	; 0x01
			
		}
		
		vTaskDelay( 50 );
     294:	82 e3       	ldi	r24, 0x32	; 50
     296:	90 e0       	ldi	r25, 0x00	; 0
     298:	0e 94 f8 0d 	call	0x1bf0	; 0x1bf0 <vTaskDelay>
	}
     29c:	46 cf       	rjmp	.-372    	; 0x12a <Task_3+0x34>

0000029e <main>:


int main(void)
{

     xTaskCreate( Task_1 ,
     29e:	0f 2e       	mov	r0, r31
     2a0:	f0 ec       	ldi	r31, 0xC0	; 192
     2a2:	ef 2e       	mov	r14, r31
     2a4:	f0 e0       	ldi	r31, 0x00	; 0
     2a6:	ff 2e       	mov	r15, r31
     2a8:	f0 2d       	mov	r31, r0
     2aa:	03 e0       	ldi	r16, 0x03	; 3
     2ac:	20 e0       	ldi	r18, 0x00	; 0
     2ae:	30 e0       	ldi	r19, 0x00	; 0
     2b0:	44 e6       	ldi	r20, 0x64	; 100
     2b2:	50 e0       	ldi	r21, 0x00	; 0
     2b4:	60 e9       	ldi	r22, 0x90	; 144
     2b6:	70 e0       	ldi	r23, 0x00	; 0
     2b8:	89 e4       	ldi	r24, 0x49	; 73
     2ba:	90 e0       	ldi	r25, 0x00	; 0
     2bc:	0e 94 48 0c 	call	0x1890	; 0x1890 <xTaskCreate>
     NULL,
     3,
     &Task_1_Handle
     );
	  
	 xTaskCreate(   Task_2 ,
     2c0:	0f 2e       	mov	r0, r31
     2c2:	fe eb       	ldi	r31, 0xBE	; 190
     2c4:	ef 2e       	mov	r14, r31
     2c6:	f0 e0       	ldi	r31, 0x00	; 0
     2c8:	ff 2e       	mov	r15, r31
     2ca:	f0 2d       	mov	r31, r0
     2cc:	01 e0       	ldi	r16, 0x01	; 1
     2ce:	20 e0       	ldi	r18, 0x00	; 0
     2d0:	30 e0       	ldi	r19, 0x00	; 0
     2d2:	44 e6       	ldi	r20, 0x64	; 100
     2d4:	50 e0       	ldi	r21, 0x00	; 0
     2d6:	6a e9       	ldi	r22, 0x9A	; 154
     2d8:	70 e0       	ldi	r23, 0x00	; 0
     2da:	8f e5       	ldi	r24, 0x5F	; 95
     2dc:	90 e0       	ldi	r25, 0x00	; 0
     2de:	0e 94 48 0c 	call	0x1890	; 0x1890 <xTaskCreate>
     NULL,
     1,
	 &Task_2_Handle
	 );
	 
	 xTaskCreate( Task_3 ,
     2e2:	0f 2e       	mov	r0, r31
     2e4:	fc eb       	ldi	r31, 0xBC	; 188
     2e6:	ef 2e       	mov	r14, r31
     2e8:	f0 e0       	ldi	r31, 0x00	; 0
     2ea:	ff 2e       	mov	r15, r31
     2ec:	f0 2d       	mov	r31, r0
     2ee:	02 e0       	ldi	r16, 0x02	; 2
     2f0:	20 e0       	ldi	r18, 0x00	; 0
     2f2:	30 e0       	ldi	r19, 0x00	; 0
     2f4:	44 e6       	ldi	r20, 0x64	; 100
     2f6:	50 e0       	ldi	r21, 0x00	; 0
     2f8:	61 ea       	ldi	r22, 0xA1	; 161
     2fa:	70 e0       	ldi	r23, 0x00	; 0
     2fc:	8b e7       	ldi	r24, 0x7B	; 123
     2fe:	90 e0       	ldi	r25, 0x00	; 0
     300:	0e 94 48 0c 	call	0x1890	; 0x1890 <xTaskCreate>
	 &Task_3_Handle
	 );


    /* Start Scheduler */
    vTaskStartScheduler();
     304:	0e 94 9c 0c 	call	0x1938	; 0x1938 <vTaskStartScheduler>
     308:	ff cf       	rjmp	.-2      	; 0x308 <main+0x6a>

0000030a <KeyPad_Init>:
     30a:	61 e0       	ldi	r22, 0x01	; 1
     30c:	8c e0       	ldi	r24, 0x0C	; 12
     30e:	0e 94 1a 03 	call	0x634	; 0x634 <DIO_WriteChennel>
     312:	61 e0       	ldi	r22, 0x01	; 1
     314:	8d e0       	ldi	r24, 0x0D	; 13
     316:	0e 94 1a 03 	call	0x634	; 0x634 <DIO_WriteChennel>
     31a:	61 e0       	ldi	r22, 0x01	; 1
     31c:	8e e0       	ldi	r24, 0x0E	; 14
     31e:	0e 94 1a 03 	call	0x634	; 0x634 <DIO_WriteChennel>
     322:	61 e0       	ldi	r22, 0x01	; 1
     324:	8f e0       	ldi	r24, 0x0F	; 15
     326:	0e 94 1a 03 	call	0x634	; 0x634 <DIO_WriteChennel>
     32a:	81 e0       	ldi	r24, 0x01	; 1
     32c:	08 95       	ret

0000032e <KeyPad_GetValue>:
     32e:	ff 92       	push	r15
     330:	0f 93       	push	r16
     332:	1f 93       	push	r17
     334:	cf 93       	push	r28
     336:	df 93       	push	r29
     338:	1f 92       	push	r1
     33a:	cd b7       	in	r28, 0x3d	; 61
     33c:	de b7       	in	r29, 0x3e	; 62
     33e:	f1 2c       	mov	r15, r1
     340:	0c e0       	ldi	r16, 0x0C	; 12
     342:	38 c0       	rjmp	.+112    	; 0x3b4 <KeyPad_GetValue+0x86>
     344:	60 e0       	ldi	r22, 0x00	; 0
     346:	80 2f       	mov	r24, r16
     348:	0e 94 1a 03 	call	0x634	; 0x634 <DIO_WriteChennel>
     34c:	1a e1       	ldi	r17, 0x1A	; 26
     34e:	2b c0       	rjmp	.+86     	; 0x3a6 <KeyPad_GetValue+0x78>
     350:	be 01       	movw	r22, r28
     352:	6f 5f       	subi	r22, 0xFF	; 255
     354:	7f 4f       	sbci	r23, 0xFF	; 255
     356:	81 2f       	mov	r24, r17
     358:	0e 94 a1 03 	call	0x742	; 0x742 <DIO_ReadChennel>
     35c:	89 81       	ldd	r24, Y+1	; 0x01
     35e:	81 11       	cpse	r24, r1
     360:	21 c0       	rjmp	.+66     	; 0x3a4 <KeyPad_GetValue+0x76>
     362:	80 2f       	mov	r24, r16
     364:	90 e0       	ldi	r25, 0x00	; 0
     366:	0c 97       	sbiw	r24, 0x0c	; 12
     368:	21 2f       	mov	r18, r17
     36a:	30 e0       	ldi	r19, 0x00	; 0
     36c:	2a 51       	subi	r18, 0x1A	; 26
     36e:	31 09       	sbc	r19, r1
     370:	88 0f       	add	r24, r24
     372:	99 1f       	adc	r25, r25
     374:	88 0f       	add	r24, r24
     376:	99 1f       	adc	r25, r25
     378:	8b 55       	subi	r24, 0x5B	; 91
     37a:	9f 4f       	sbci	r25, 0xFF	; 255
     37c:	fc 01       	movw	r30, r24
     37e:	e2 0f       	add	r30, r18
     380:	f3 1f       	adc	r31, r19
     382:	f0 80       	ld	r15, Z
     384:	06 c0       	rjmp	.+12     	; 0x392 <KeyPad_GetValue+0x64>
     386:	be 01       	movw	r22, r28
     388:	6f 5f       	subi	r22, 0xFF	; 255
     38a:	7f 4f       	sbci	r23, 0xFF	; 255
     38c:	81 2f       	mov	r24, r17
     38e:	0e 94 a1 03 	call	0x742	; 0x742 <DIO_ReadChennel>
     392:	89 81       	ldd	r24, Y+1	; 0x01
     394:	88 23       	and	r24, r24
     396:	b9 f3       	breq	.-18     	; 0x386 <KeyPad_GetValue+0x58>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     398:	8f e3       	ldi	r24, 0x3F	; 63
     39a:	9c e9       	ldi	r25, 0x9C	; 156
     39c:	01 97       	sbiw	r24, 0x01	; 1
     39e:	f1 f7       	brne	.-4      	; 0x39c <KeyPad_GetValue+0x6e>
     3a0:	00 c0       	rjmp	.+0      	; 0x3a2 <KeyPad_GetValue+0x74>
     3a2:	00 00       	nop
     3a4:	1f 5f       	subi	r17, 0xFF	; 255
     3a6:	1e 31       	cpi	r17, 0x1E	; 30
     3a8:	98 f2       	brcs	.-90     	; 0x350 <KeyPad_GetValue+0x22>
     3aa:	61 e0       	ldi	r22, 0x01	; 1
     3ac:	80 2f       	mov	r24, r16
     3ae:	0e 94 1a 03 	call	0x634	; 0x634 <DIO_WriteChennel>
     3b2:	0f 5f       	subi	r16, 0xFF	; 255
     3b4:	00 31       	cpi	r16, 0x10	; 16
     3b6:	30 f2       	brcs	.-116    	; 0x344 <KeyPad_GetValue+0x16>
     3b8:	8f 2d       	mov	r24, r15
     3ba:	0f 90       	pop	r0
     3bc:	df 91       	pop	r29
     3be:	cf 91       	pop	r28
     3c0:	1f 91       	pop	r17
     3c2:	0f 91       	pop	r16
     3c4:	ff 90       	pop	r15
     3c6:	08 95       	ret

000003c8 <LCD_WriteCommand>:
     3c8:	cf 93       	push	r28
     3ca:	c8 2f       	mov	r28, r24
     3cc:	60 e0       	ldi	r22, 0x00	; 0
     3ce:	81 e0       	ldi	r24, 0x01	; 1
     3d0:	0e 94 1a 03 	call	0x634	; 0x634 <DIO_WriteChennel>
     3d4:	60 e0       	ldi	r22, 0x00	; 0
     3d6:	82 e0       	ldi	r24, 0x02	; 2
     3d8:	0e 94 1a 03 	call	0x634	; 0x634 <DIO_WriteChennel>
     3dc:	c4 fb       	bst	r28, 4
     3de:	66 27       	eor	r22, r22
     3e0:	60 f9       	bld	r22, 0
     3e2:	83 e0       	ldi	r24, 0x03	; 3
     3e4:	0e 94 1a 03 	call	0x634	; 0x634 <DIO_WriteChennel>
     3e8:	c5 fb       	bst	r28, 5
     3ea:	66 27       	eor	r22, r22
     3ec:	60 f9       	bld	r22, 0
     3ee:	84 e0       	ldi	r24, 0x04	; 4
     3f0:	0e 94 1a 03 	call	0x634	; 0x634 <DIO_WriteChennel>
     3f4:	c6 fb       	bst	r28, 6
     3f6:	66 27       	eor	r22, r22
     3f8:	60 f9       	bld	r22, 0
     3fa:	85 e0       	ldi	r24, 0x05	; 5
     3fc:	0e 94 1a 03 	call	0x634	; 0x634 <DIO_WriteChennel>
     400:	6c 2f       	mov	r22, r28
     402:	66 1f       	adc	r22, r22
     404:	66 27       	eor	r22, r22
     406:	66 1f       	adc	r22, r22
     408:	86 e0       	ldi	r24, 0x06	; 6
     40a:	0e 94 1a 03 	call	0x634	; 0x634 <DIO_WriteChennel>
     40e:	61 e0       	ldi	r22, 0x01	; 1
     410:	82 e0       	ldi	r24, 0x02	; 2
     412:	0e 94 1a 03 	call	0x634	; 0x634 <DIO_WriteChennel>
     416:	8f e9       	ldi	r24, 0x9F	; 159
     418:	9f e0       	ldi	r25, 0x0F	; 15
     41a:	01 97       	sbiw	r24, 0x01	; 1
     41c:	f1 f7       	brne	.-4      	; 0x41a <__EEPROM_REGION_LENGTH__+0x1a>
     41e:	00 c0       	rjmp	.+0      	; 0x420 <__EEPROM_REGION_LENGTH__+0x20>
     420:	00 00       	nop
     422:	60 e0       	ldi	r22, 0x00	; 0
     424:	82 e0       	ldi	r24, 0x02	; 2
     426:	0e 94 1a 03 	call	0x634	; 0x634 <DIO_WriteChennel>
     42a:	6c 2f       	mov	r22, r28
     42c:	61 70       	andi	r22, 0x01	; 1
     42e:	83 e0       	ldi	r24, 0x03	; 3
     430:	0e 94 1a 03 	call	0x634	; 0x634 <DIO_WriteChennel>
     434:	c1 fb       	bst	r28, 1
     436:	66 27       	eor	r22, r22
     438:	60 f9       	bld	r22, 0
     43a:	84 e0       	ldi	r24, 0x04	; 4
     43c:	0e 94 1a 03 	call	0x634	; 0x634 <DIO_WriteChennel>
     440:	c2 fb       	bst	r28, 2
     442:	66 27       	eor	r22, r22
     444:	60 f9       	bld	r22, 0
     446:	85 e0       	ldi	r24, 0x05	; 5
     448:	0e 94 1a 03 	call	0x634	; 0x634 <DIO_WriteChennel>
     44c:	c3 fb       	bst	r28, 3
     44e:	66 27       	eor	r22, r22
     450:	60 f9       	bld	r22, 0
     452:	86 e0       	ldi	r24, 0x06	; 6
     454:	0e 94 1a 03 	call	0x634	; 0x634 <DIO_WriteChennel>
     458:	61 e0       	ldi	r22, 0x01	; 1
     45a:	82 e0       	ldi	r24, 0x02	; 2
     45c:	0e 94 1a 03 	call	0x634	; 0x634 <DIO_WriteChennel>
     460:	8f e9       	ldi	r24, 0x9F	; 159
     462:	9f e0       	ldi	r25, 0x0F	; 15
     464:	01 97       	sbiw	r24, 0x01	; 1
     466:	f1 f7       	brne	.-4      	; 0x464 <__EEPROM_REGION_LENGTH__+0x64>
     468:	00 c0       	rjmp	.+0      	; 0x46a <__EEPROM_REGION_LENGTH__+0x6a>
     46a:	00 00       	nop
     46c:	60 e0       	ldi	r22, 0x00	; 0
     46e:	82 e0       	ldi	r24, 0x02	; 2
     470:	0e 94 1a 03 	call	0x634	; 0x634 <DIO_WriteChennel>
     474:	8f e1       	ldi	r24, 0x1F	; 31
     476:	9e e4       	ldi	r25, 0x4E	; 78
     478:	01 97       	sbiw	r24, 0x01	; 1
     47a:	f1 f7       	brne	.-4      	; 0x478 <__EEPROM_REGION_LENGTH__+0x78>
     47c:	00 c0       	rjmp	.+0      	; 0x47e <__EEPROM_REGION_LENGTH__+0x7e>
     47e:	00 00       	nop
     480:	cf 91       	pop	r28
     482:	08 95       	ret

00000484 <LCD_Init>:
     484:	83 e3       	ldi	r24, 0x33	; 51
     486:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <LCD_WriteCommand>
     48a:	82 e3       	ldi	r24, 0x32	; 50
     48c:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <LCD_WriteCommand>
     490:	88 e2       	ldi	r24, 0x28	; 40
     492:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <LCD_WriteCommand>
     496:	8c e0       	ldi	r24, 0x0C	; 12
     498:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <LCD_WriteCommand>
     49c:	81 e0       	ldi	r24, 0x01	; 1
     49e:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <LCD_WriteCommand>
     4a2:	86 e0       	ldi	r24, 0x06	; 6
     4a4:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <LCD_WriteCommand>
     4a8:	82 e0       	ldi	r24, 0x02	; 2
     4aa:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <LCD_WriteCommand>
     4ae:	08 95       	ret

000004b0 <LCD_WriteChar>:
     4b0:	cf 93       	push	r28
     4b2:	c8 2f       	mov	r28, r24
     4b4:	61 e0       	ldi	r22, 0x01	; 1
     4b6:	81 e0       	ldi	r24, 0x01	; 1
     4b8:	0e 94 1a 03 	call	0x634	; 0x634 <DIO_WriteChennel>
     4bc:	60 e0       	ldi	r22, 0x00	; 0
     4be:	82 e0       	ldi	r24, 0x02	; 2
     4c0:	0e 94 1a 03 	call	0x634	; 0x634 <DIO_WriteChennel>
     4c4:	c4 fb       	bst	r28, 4
     4c6:	66 27       	eor	r22, r22
     4c8:	60 f9       	bld	r22, 0
     4ca:	83 e0       	ldi	r24, 0x03	; 3
     4cc:	0e 94 1a 03 	call	0x634	; 0x634 <DIO_WriteChennel>
     4d0:	c5 fb       	bst	r28, 5
     4d2:	66 27       	eor	r22, r22
     4d4:	60 f9       	bld	r22, 0
     4d6:	84 e0       	ldi	r24, 0x04	; 4
     4d8:	0e 94 1a 03 	call	0x634	; 0x634 <DIO_WriteChennel>
     4dc:	c6 fb       	bst	r28, 6
     4de:	66 27       	eor	r22, r22
     4e0:	60 f9       	bld	r22, 0
     4e2:	85 e0       	ldi	r24, 0x05	; 5
     4e4:	0e 94 1a 03 	call	0x634	; 0x634 <DIO_WriteChennel>
     4e8:	6c 2f       	mov	r22, r28
     4ea:	66 1f       	adc	r22, r22
     4ec:	66 27       	eor	r22, r22
     4ee:	66 1f       	adc	r22, r22
     4f0:	86 e0       	ldi	r24, 0x06	; 6
     4f2:	0e 94 1a 03 	call	0x634	; 0x634 <DIO_WriteChennel>
     4f6:	61 e0       	ldi	r22, 0x01	; 1
     4f8:	82 e0       	ldi	r24, 0x02	; 2
     4fa:	0e 94 1a 03 	call	0x634	; 0x634 <DIO_WriteChennel>
     4fe:	8f e9       	ldi	r24, 0x9F	; 159
     500:	9f e0       	ldi	r25, 0x0F	; 15
     502:	01 97       	sbiw	r24, 0x01	; 1
     504:	f1 f7       	brne	.-4      	; 0x502 <LCD_WriteChar+0x52>
     506:	00 c0       	rjmp	.+0      	; 0x508 <LCD_WriteChar+0x58>
     508:	00 00       	nop
     50a:	60 e0       	ldi	r22, 0x00	; 0
     50c:	82 e0       	ldi	r24, 0x02	; 2
     50e:	0e 94 1a 03 	call	0x634	; 0x634 <DIO_WriteChennel>
     512:	6c 2f       	mov	r22, r28
     514:	61 70       	andi	r22, 0x01	; 1
     516:	83 e0       	ldi	r24, 0x03	; 3
     518:	0e 94 1a 03 	call	0x634	; 0x634 <DIO_WriteChennel>
     51c:	c1 fb       	bst	r28, 1
     51e:	66 27       	eor	r22, r22
     520:	60 f9       	bld	r22, 0
     522:	84 e0       	ldi	r24, 0x04	; 4
     524:	0e 94 1a 03 	call	0x634	; 0x634 <DIO_WriteChennel>
     528:	c2 fb       	bst	r28, 2
     52a:	66 27       	eor	r22, r22
     52c:	60 f9       	bld	r22, 0
     52e:	85 e0       	ldi	r24, 0x05	; 5
     530:	0e 94 1a 03 	call	0x634	; 0x634 <DIO_WriteChennel>
     534:	c3 fb       	bst	r28, 3
     536:	66 27       	eor	r22, r22
     538:	60 f9       	bld	r22, 0
     53a:	86 e0       	ldi	r24, 0x06	; 6
     53c:	0e 94 1a 03 	call	0x634	; 0x634 <DIO_WriteChennel>
     540:	61 e0       	ldi	r22, 0x01	; 1
     542:	82 e0       	ldi	r24, 0x02	; 2
     544:	0e 94 1a 03 	call	0x634	; 0x634 <DIO_WriteChennel>
     548:	8f e9       	ldi	r24, 0x9F	; 159
     54a:	9f e0       	ldi	r25, 0x0F	; 15
     54c:	01 97       	sbiw	r24, 0x01	; 1
     54e:	f1 f7       	brne	.-4      	; 0x54c <LCD_WriteChar+0x9c>
     550:	00 c0       	rjmp	.+0      	; 0x552 <LCD_WriteChar+0xa2>
     552:	00 00       	nop
     554:	60 e0       	ldi	r22, 0x00	; 0
     556:	82 e0       	ldi	r24, 0x02	; 2
     558:	0e 94 1a 03 	call	0x634	; 0x634 <DIO_WriteChennel>
     55c:	8f e1       	ldi	r24, 0x1F	; 31
     55e:	9e e4       	ldi	r25, 0x4E	; 78
     560:	01 97       	sbiw	r24, 0x01	; 1
     562:	f1 f7       	brne	.-4      	; 0x560 <LCD_WriteChar+0xb0>
     564:	00 c0       	rjmp	.+0      	; 0x566 <LCD_WriteChar+0xb6>
     566:	00 00       	nop
     568:	cf 91       	pop	r28
     56a:	08 95       	ret

0000056c <LCD_WriteInteger>:
     56c:	cf 92       	push	r12
     56e:	df 92       	push	r13
     570:	ef 92       	push	r14
     572:	ff 92       	push	r15
     574:	0f 93       	push	r16
     576:	1f 93       	push	r17
     578:	8b 01       	movw	r16, r22
     57a:	9c 01       	movw	r18, r24
     57c:	61 15       	cp	r22, r1
     57e:	71 05       	cpc	r23, r1
     580:	81 05       	cpc	r24, r1
     582:	91 05       	cpc	r25, r1
     584:	21 f4       	brne	.+8      	; 0x58e <LCD_WriteInteger+0x22>
     586:	80 e3       	ldi	r24, 0x30	; 48
     588:	0e 94 58 02 	call	0x4b0	; 0x4b0 <LCD_WriteChar>
     58c:	4c c0       	rjmp	.+152    	; 0x626 <LCD_WriteInteger+0xba>
     58e:	99 23       	and	r25, r25
     590:	4c f5       	brge	.+82     	; 0x5e4 <LCD_WriteInteger+0x78>
     592:	8d e2       	ldi	r24, 0x2D	; 45
     594:	0e 94 58 02 	call	0x4b0	; 0x4b0 <LCD_WriteChar>
     598:	46 c0       	rjmp	.+140    	; 0x626 <LCD_WriteInteger+0xba>
     59a:	dc 01       	movw	r26, r24
     59c:	cb 01       	movw	r24, r22
     59e:	88 0f       	add	r24, r24
     5a0:	99 1f       	adc	r25, r25
     5a2:	aa 1f       	adc	r26, r26
     5a4:	bb 1f       	adc	r27, r27
     5a6:	6c 01       	movw	r12, r24
     5a8:	7d 01       	movw	r14, r26
     5aa:	cc 0c       	add	r12, r12
     5ac:	dd 1c       	adc	r13, r13
     5ae:	ee 1c       	adc	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	cc 0c       	add	r12, r12
     5b4:	dd 1c       	adc	r13, r13
     5b6:	ee 1c       	adc	r14, r14
     5b8:	ff 1c       	adc	r15, r15
     5ba:	c8 0e       	add	r12, r24
     5bc:	d9 1e       	adc	r13, r25
     5be:	ea 1e       	adc	r14, r26
     5c0:	fb 1e       	adc	r15, r27
     5c2:	c9 01       	movw	r24, r18
     5c4:	b8 01       	movw	r22, r16
     5c6:	2a e0       	ldi	r18, 0x0A	; 10
     5c8:	30 e0       	ldi	r19, 0x00	; 0
     5ca:	40 e0       	ldi	r20, 0x00	; 0
     5cc:	50 e0       	ldi	r21, 0x00	; 0
     5ce:	0e 94 87 0f 	call	0x1f0e	; 0x1f0e <__divmodsi4>
     5d2:	6c 0d       	add	r22, r12
     5d4:	7d 1d       	adc	r23, r13
     5d6:	8e 1d       	adc	r24, r14
     5d8:	9f 1d       	adc	r25, r15
     5da:	02 2f       	mov	r16, r18
     5dc:	13 2f       	mov	r17, r19
     5de:	24 2f       	mov	r18, r20
     5e0:	35 2f       	mov	r19, r21
     5e2:	04 c0       	rjmp	.+8      	; 0x5ec <LCD_WriteInteger+0x80>
     5e4:	61 e0       	ldi	r22, 0x01	; 1
     5e6:	70 e0       	ldi	r23, 0x00	; 0
     5e8:	80 e0       	ldi	r24, 0x00	; 0
     5ea:	90 e0       	ldi	r25, 0x00	; 0
     5ec:	10 16       	cp	r1, r16
     5ee:	11 06       	cpc	r1, r17
     5f0:	12 06       	cpc	r1, r18
     5f2:	13 06       	cpc	r1, r19
     5f4:	94 f2       	brlt	.-92     	; 0x59a <LCD_WriteInteger+0x2e>
     5f6:	12 c0       	rjmp	.+36     	; 0x61c <LCD_WriteInteger+0xb0>
     5f8:	2a e0       	ldi	r18, 0x0A	; 10
     5fa:	30 e0       	ldi	r19, 0x00	; 0
     5fc:	40 e0       	ldi	r20, 0x00	; 0
     5fe:	50 e0       	ldi	r21, 0x00	; 0
     600:	0e 94 87 0f 	call	0x1f0e	; 0x1f0e <__divmodsi4>
     604:	e2 2e       	mov	r14, r18
     606:	f3 2e       	mov	r15, r19
     608:	04 2f       	mov	r16, r20
     60a:	15 2f       	mov	r17, r21
     60c:	80 e3       	ldi	r24, 0x30	; 48
     60e:	86 0f       	add	r24, r22
     610:	0e 94 58 02 	call	0x4b0	; 0x4b0 <LCD_WriteChar>
     614:	6e 2d       	mov	r22, r14
     616:	7f 2d       	mov	r23, r15
     618:	80 2f       	mov	r24, r16
     61a:	91 2f       	mov	r25, r17
     61c:	62 30       	cpi	r22, 0x02	; 2
     61e:	71 05       	cpc	r23, r1
     620:	81 05       	cpc	r24, r1
     622:	91 05       	cpc	r25, r1
     624:	4c f7       	brge	.-46     	; 0x5f8 <LCD_WriteInteger+0x8c>
     626:	1f 91       	pop	r17
     628:	0f 91       	pop	r16
     62a:	ff 90       	pop	r15
     62c:	ef 90       	pop	r14
     62e:	df 90       	pop	r13
     630:	cf 90       	pop	r12
     632:	08 95       	ret

00000634 <DIO_WriteChennel>:
     634:	98 2f       	mov	r25, r24
     636:	96 95       	lsr	r25
     638:	96 95       	lsr	r25
     63a:	96 95       	lsr	r25
     63c:	87 70       	andi	r24, 0x07	; 7
     63e:	66 23       	and	r22, r22
     640:	09 f4       	brne	.+2      	; 0x644 <DIO_WriteChennel+0x10>
     642:	3f c0       	rjmp	.+126    	; 0x6c2 <DIO_WriteChennel+0x8e>
     644:	61 30       	cpi	r22, 0x01	; 1
     646:	09 f0       	breq	.+2      	; 0x64a <DIO_WriteChennel+0x16>
     648:	7b c0       	rjmp	.+246    	; 0x740 <DIO_WriteChennel+0x10c>
     64a:	91 30       	cpi	r25, 0x01	; 1
     64c:	99 f0       	breq	.+38     	; 0x674 <DIO_WriteChennel+0x40>
     64e:	28 f0       	brcs	.+10     	; 0x65a <DIO_WriteChennel+0x26>
     650:	92 30       	cpi	r25, 0x02	; 2
     652:	e9 f0       	breq	.+58     	; 0x68e <DIO_WriteChennel+0x5a>
     654:	93 30       	cpi	r25, 0x03	; 3
     656:	41 f1       	breq	.+80     	; 0x6a8 <DIO_WriteChennel+0x74>
     658:	08 95       	ret
     65a:	4b b3       	in	r20, 0x1b	; 27
     65c:	21 e0       	ldi	r18, 0x01	; 1
     65e:	30 e0       	ldi	r19, 0x00	; 0
     660:	b9 01       	movw	r22, r18
     662:	02 c0       	rjmp	.+4      	; 0x668 <DIO_WriteChennel+0x34>
     664:	66 0f       	add	r22, r22
     666:	77 1f       	adc	r23, r23
     668:	8a 95       	dec	r24
     66a:	e2 f7       	brpl	.-8      	; 0x664 <DIO_WriteChennel+0x30>
     66c:	cb 01       	movw	r24, r22
     66e:	84 2b       	or	r24, r20
     670:	8b bb       	out	0x1b, r24	; 27
     672:	08 95       	ret
     674:	48 b3       	in	r20, 0x18	; 24
     676:	21 e0       	ldi	r18, 0x01	; 1
     678:	30 e0       	ldi	r19, 0x00	; 0
     67a:	b9 01       	movw	r22, r18
     67c:	02 c0       	rjmp	.+4      	; 0x682 <DIO_WriteChennel+0x4e>
     67e:	66 0f       	add	r22, r22
     680:	77 1f       	adc	r23, r23
     682:	8a 95       	dec	r24
     684:	e2 f7       	brpl	.-8      	; 0x67e <DIO_WriteChennel+0x4a>
     686:	cb 01       	movw	r24, r22
     688:	84 2b       	or	r24, r20
     68a:	88 bb       	out	0x18, r24	; 24
     68c:	08 95       	ret
     68e:	45 b3       	in	r20, 0x15	; 21
     690:	21 e0       	ldi	r18, 0x01	; 1
     692:	30 e0       	ldi	r19, 0x00	; 0
     694:	b9 01       	movw	r22, r18
     696:	02 c0       	rjmp	.+4      	; 0x69c <DIO_WriteChennel+0x68>
     698:	66 0f       	add	r22, r22
     69a:	77 1f       	adc	r23, r23
     69c:	8a 95       	dec	r24
     69e:	e2 f7       	brpl	.-8      	; 0x698 <DIO_WriteChennel+0x64>
     6a0:	cb 01       	movw	r24, r22
     6a2:	84 2b       	or	r24, r20
     6a4:	85 bb       	out	0x15, r24	; 21
     6a6:	08 95       	ret
     6a8:	42 b3       	in	r20, 0x12	; 18
     6aa:	21 e0       	ldi	r18, 0x01	; 1
     6ac:	30 e0       	ldi	r19, 0x00	; 0
     6ae:	b9 01       	movw	r22, r18
     6b0:	02 c0       	rjmp	.+4      	; 0x6b6 <DIO_WriteChennel+0x82>
     6b2:	66 0f       	add	r22, r22
     6b4:	77 1f       	adc	r23, r23
     6b6:	8a 95       	dec	r24
     6b8:	e2 f7       	brpl	.-8      	; 0x6b2 <DIO_WriteChennel+0x7e>
     6ba:	cb 01       	movw	r24, r22
     6bc:	84 2b       	or	r24, r20
     6be:	82 bb       	out	0x12, r24	; 18
     6c0:	08 95       	ret
     6c2:	91 30       	cpi	r25, 0x01	; 1
     6c4:	a1 f0       	breq	.+40     	; 0x6ee <DIO_WriteChennel+0xba>
     6c6:	28 f0       	brcs	.+10     	; 0x6d2 <DIO_WriteChennel+0x9e>
     6c8:	92 30       	cpi	r25, 0x02	; 2
     6ca:	f9 f0       	breq	.+62     	; 0x70a <DIO_WriteChennel+0xd6>
     6cc:	93 30       	cpi	r25, 0x03	; 3
     6ce:	59 f1       	breq	.+86     	; 0x726 <DIO_WriteChennel+0xf2>
     6d0:	08 95       	ret
     6d2:	4b b3       	in	r20, 0x1b	; 27
     6d4:	21 e0       	ldi	r18, 0x01	; 1
     6d6:	30 e0       	ldi	r19, 0x00	; 0
     6d8:	b9 01       	movw	r22, r18
     6da:	02 c0       	rjmp	.+4      	; 0x6e0 <DIO_WriteChennel+0xac>
     6dc:	66 0f       	add	r22, r22
     6de:	77 1f       	adc	r23, r23
     6e0:	8a 95       	dec	r24
     6e2:	e2 f7       	brpl	.-8      	; 0x6dc <DIO_WriteChennel+0xa8>
     6e4:	cb 01       	movw	r24, r22
     6e6:	80 95       	com	r24
     6e8:	84 23       	and	r24, r20
     6ea:	8b bb       	out	0x1b, r24	; 27
     6ec:	08 95       	ret
     6ee:	48 b3       	in	r20, 0x18	; 24
     6f0:	21 e0       	ldi	r18, 0x01	; 1
     6f2:	30 e0       	ldi	r19, 0x00	; 0
     6f4:	b9 01       	movw	r22, r18
     6f6:	02 c0       	rjmp	.+4      	; 0x6fc <DIO_WriteChennel+0xc8>
     6f8:	66 0f       	add	r22, r22
     6fa:	77 1f       	adc	r23, r23
     6fc:	8a 95       	dec	r24
     6fe:	e2 f7       	brpl	.-8      	; 0x6f8 <DIO_WriteChennel+0xc4>
     700:	cb 01       	movw	r24, r22
     702:	80 95       	com	r24
     704:	84 23       	and	r24, r20
     706:	88 bb       	out	0x18, r24	; 24
     708:	08 95       	ret
     70a:	45 b3       	in	r20, 0x15	; 21
     70c:	21 e0       	ldi	r18, 0x01	; 1
     70e:	30 e0       	ldi	r19, 0x00	; 0
     710:	b9 01       	movw	r22, r18
     712:	02 c0       	rjmp	.+4      	; 0x718 <DIO_WriteChennel+0xe4>
     714:	66 0f       	add	r22, r22
     716:	77 1f       	adc	r23, r23
     718:	8a 95       	dec	r24
     71a:	e2 f7       	brpl	.-8      	; 0x714 <DIO_WriteChennel+0xe0>
     71c:	cb 01       	movw	r24, r22
     71e:	80 95       	com	r24
     720:	84 23       	and	r24, r20
     722:	85 bb       	out	0x15, r24	; 21
     724:	08 95       	ret
     726:	42 b3       	in	r20, 0x12	; 18
     728:	21 e0       	ldi	r18, 0x01	; 1
     72a:	30 e0       	ldi	r19, 0x00	; 0
     72c:	b9 01       	movw	r22, r18
     72e:	02 c0       	rjmp	.+4      	; 0x734 <DIO_WriteChennel+0x100>
     730:	66 0f       	add	r22, r22
     732:	77 1f       	adc	r23, r23
     734:	8a 95       	dec	r24
     736:	e2 f7       	brpl	.-8      	; 0x730 <DIO_WriteChennel+0xfc>
     738:	cb 01       	movw	r24, r22
     73a:	80 95       	com	r24
     73c:	84 23       	and	r24, r20
     73e:	82 bb       	out	0x12, r24	; 18
     740:	08 95       	ret

00000742 <DIO_ReadChennel>:
     742:	98 2f       	mov	r25, r24
     744:	96 95       	lsr	r25
     746:	96 95       	lsr	r25
     748:	96 95       	lsr	r25
     74a:	87 70       	andi	r24, 0x07	; 7
     74c:	91 30       	cpi	r25, 0x01	; 1
     74e:	99 f0       	breq	.+38     	; 0x776 <DIO_ReadChennel+0x34>
     750:	28 f0       	brcs	.+10     	; 0x75c <DIO_ReadChennel+0x1a>
     752:	92 30       	cpi	r25, 0x02	; 2
     754:	e9 f0       	breq	.+58     	; 0x790 <DIO_ReadChennel+0x4e>
     756:	93 30       	cpi	r25, 0x03	; 3
     758:	41 f1       	breq	.+80     	; 0x7aa <DIO_ReadChennel+0x68>
     75a:	08 95       	ret
     75c:	29 b3       	in	r18, 0x19	; 25
     75e:	30 e0       	ldi	r19, 0x00	; 0
     760:	a9 01       	movw	r20, r18
     762:	02 c0       	rjmp	.+4      	; 0x768 <DIO_ReadChennel+0x26>
     764:	55 95       	asr	r21
     766:	47 95       	ror	r20
     768:	8a 95       	dec	r24
     76a:	e2 f7       	brpl	.-8      	; 0x764 <DIO_ReadChennel+0x22>
     76c:	ca 01       	movw	r24, r20
     76e:	81 70       	andi	r24, 0x01	; 1
     770:	fb 01       	movw	r30, r22
     772:	80 83       	st	Z, r24
     774:	08 95       	ret
     776:	26 b3       	in	r18, 0x16	; 22
     778:	30 e0       	ldi	r19, 0x00	; 0
     77a:	a9 01       	movw	r20, r18
     77c:	02 c0       	rjmp	.+4      	; 0x782 <DIO_ReadChennel+0x40>
     77e:	55 95       	asr	r21
     780:	47 95       	ror	r20
     782:	8a 95       	dec	r24
     784:	e2 f7       	brpl	.-8      	; 0x77e <DIO_ReadChennel+0x3c>
     786:	ca 01       	movw	r24, r20
     788:	81 70       	andi	r24, 0x01	; 1
     78a:	fb 01       	movw	r30, r22
     78c:	80 83       	st	Z, r24
     78e:	08 95       	ret
     790:	23 b3       	in	r18, 0x13	; 19
     792:	30 e0       	ldi	r19, 0x00	; 0
     794:	a9 01       	movw	r20, r18
     796:	02 c0       	rjmp	.+4      	; 0x79c <DIO_ReadChennel+0x5a>
     798:	55 95       	asr	r21
     79a:	47 95       	ror	r20
     79c:	8a 95       	dec	r24
     79e:	e2 f7       	brpl	.-8      	; 0x798 <DIO_ReadChennel+0x56>
     7a0:	ca 01       	movw	r24, r20
     7a2:	81 70       	andi	r24, 0x01	; 1
     7a4:	fb 01       	movw	r30, r22
     7a6:	80 83       	st	Z, r24
     7a8:	08 95       	ret
     7aa:	20 b3       	in	r18, 0x10	; 16
     7ac:	30 e0       	ldi	r19, 0x00	; 0
     7ae:	a9 01       	movw	r20, r18
     7b0:	02 c0       	rjmp	.+4      	; 0x7b6 <DIO_ReadChennel+0x74>
     7b2:	55 95       	asr	r21
     7b4:	47 95       	ror	r20
     7b6:	8a 95       	dec	r24
     7b8:	e2 f7       	brpl	.-8      	; 0x7b2 <DIO_ReadChennel+0x70>
     7ba:	ca 01       	movw	r24, r20
     7bc:	81 70       	andi	r24, 0x01	; 1
     7be:	fb 01       	movw	r30, r22
     7c0:	80 83       	st	Z, r24
     7c2:	08 95       	ret

000007c4 <__vector_1>:
     7c4:	1f 92       	push	r1
     7c6:	0f 92       	push	r0
     7c8:	0f b6       	in	r0, 0x3f	; 63
     7ca:	0f 92       	push	r0
     7cc:	11 24       	eor	r1, r1
     7ce:	2f 93       	push	r18
     7d0:	3f 93       	push	r19
     7d2:	4f 93       	push	r20
     7d4:	5f 93       	push	r21
     7d6:	6f 93       	push	r22
     7d8:	7f 93       	push	r23
     7da:	8f 93       	push	r24
     7dc:	9f 93       	push	r25
     7de:	af 93       	push	r26
     7e0:	bf 93       	push	r27
     7e2:	ef 93       	push	r30
     7e4:	ff 93       	push	r31
     7e6:	e0 91 e3 00 	lds	r30, 0x00E3	; 0x8000e3 <CallBack_PtrFunc>
     7ea:	f0 91 e4 00 	lds	r31, 0x00E4	; 0x8000e4 <CallBack_PtrFunc+0x1>
     7ee:	30 97       	sbiw	r30, 0x00	; 0
     7f0:	09 f0       	breq	.+2      	; 0x7f4 <__vector_1+0x30>
     7f2:	09 95       	icall
     7f4:	ff 91       	pop	r31
     7f6:	ef 91       	pop	r30
     7f8:	bf 91       	pop	r27
     7fa:	af 91       	pop	r26
     7fc:	9f 91       	pop	r25
     7fe:	8f 91       	pop	r24
     800:	7f 91       	pop	r23
     802:	6f 91       	pop	r22
     804:	5f 91       	pop	r21
     806:	4f 91       	pop	r20
     808:	3f 91       	pop	r19
     80a:	2f 91       	pop	r18
     80c:	0f 90       	pop	r0
     80e:	0f be       	out	0x3f, r0	; 63
     810:	0f 90       	pop	r0
     812:	1f 90       	pop	r1
     814:	18 95       	reti

00000816 <__vector_16>:
     816:	1f 92       	push	r1
     818:	0f 92       	push	r0
     81a:	0f b6       	in	r0, 0x3f	; 63
     81c:	0f 92       	push	r0
     81e:	11 24       	eor	r1, r1
     820:	2f 93       	push	r18
     822:	3f 93       	push	r19
     824:	4f 93       	push	r20
     826:	5f 93       	push	r21
     828:	6f 93       	push	r22
     82a:	7f 93       	push	r23
     82c:	8f 93       	push	r24
     82e:	9f 93       	push	r25
     830:	af 93       	push	r26
     832:	bf 93       	push	r27
     834:	cf 93       	push	r28
     836:	df 93       	push	r29
     838:	ef 93       	push	r30
     83a:	ff 93       	push	r31
     83c:	c0 91 01 01 	lds	r28, 0x0101	; 0x800101 <CallBack_PtrFunc+0x1e>
     840:	d0 91 02 01 	lds	r29, 0x0102	; 0x800102 <CallBack_PtrFunc+0x1f>
     844:	20 97       	sbiw	r28, 0x00	; 0
     846:	b1 f0       	breq	.+44     	; 0x874 <__stack+0x15>
     848:	24 b1       	in	r18, 0x04	; 4
     84a:	35 b1       	in	r19, 0x05	; 5
     84c:	a8 e8       	ldi	r26, 0x88	; 136
     84e:	b3 e1       	ldi	r27, 0x13	; 19
     850:	0e 94 a6 0f 	call	0x1f4c	; 0x1f4c <__umulhisi3>
     854:	2f ef       	ldi	r18, 0xFF	; 255
     856:	33 e0       	ldi	r19, 0x03	; 3
     858:	40 e0       	ldi	r20, 0x00	; 0
     85a:	50 e0       	ldi	r21, 0x00	; 0
     85c:	0e 94 65 0f 	call	0x1eca	; 0x1eca <__udivmodsi4>
     860:	20 93 c2 00 	sts	0x00C2, r18	; 0x8000c2 <ADC_Vin_Value_mv>
     864:	30 93 c3 00 	sts	0x00C3, r19	; 0x8000c3 <ADC_Vin_Value_mv+0x1>
     868:	40 93 c4 00 	sts	0x00C4, r20	; 0x8000c4 <ADC_Vin_Value_mv+0x2>
     86c:	50 93 c5 00 	sts	0x00C5, r21	; 0x8000c5 <ADC_Vin_Value_mv+0x3>
     870:	fe 01       	movw	r30, r28
     872:	09 95       	icall
     874:	ff 91       	pop	r31
     876:	ef 91       	pop	r30
     878:	df 91       	pop	r29
     87a:	cf 91       	pop	r28
     87c:	bf 91       	pop	r27
     87e:	af 91       	pop	r26
     880:	9f 91       	pop	r25
     882:	8f 91       	pop	r24
     884:	7f 91       	pop	r23
     886:	6f 91       	pop	r22
     888:	5f 91       	pop	r21
     88a:	4f 91       	pop	r20
     88c:	3f 91       	pop	r19
     88e:	2f 91       	pop	r18
     890:	0f 90       	pop	r0
     892:	0f be       	out	0x3f, r0	; 63
     894:	0f 90       	pop	r0
     896:	1f 90       	pop	r1
     898:	18 95       	reti

0000089a <__vector_11>:
     89a:	1f 92       	push	r1
     89c:	0f 92       	push	r0
     89e:	0f b6       	in	r0, 0x3f	; 63
     8a0:	0f 92       	push	r0
     8a2:	11 24       	eor	r1, r1
     8a4:	2f 93       	push	r18
     8a6:	3f 93       	push	r19
     8a8:	4f 93       	push	r20
     8aa:	5f 93       	push	r21
     8ac:	6f 93       	push	r22
     8ae:	7f 93       	push	r23
     8b0:	8f 93       	push	r24
     8b2:	9f 93       	push	r25
     8b4:	af 93       	push	r26
     8b6:	bf 93       	push	r27
     8b8:	ef 93       	push	r30
     8ba:	ff 93       	push	r31
     8bc:	80 91 de 00 	lds	r24, 0x00DE	; 0x8000de <INT_CNT_l.1668>
     8c0:	8f 5f       	subi	r24, 0xFF	; 255
     8c2:	80 93 de 00 	sts	0x00DE, r24	; 0x8000de <INT_CNT_l.1668>
     8c6:	90 e0       	ldi	r25, 0x00	; 0
     8c8:	a0 e0       	ldi	r26, 0x00	; 0
     8ca:	b0 e0       	ldi	r27, 0x00	; 0
     8cc:	40 91 ca 00 	lds	r20, 0x00CA	; 0x8000ca <TIMER0_Number_OVRflows_g>
     8d0:	50 91 cb 00 	lds	r21, 0x00CB	; 0x8000cb <TIMER0_Number_OVRflows_g+0x1>
     8d4:	60 91 cc 00 	lds	r22, 0x00CC	; 0x8000cc <TIMER0_Number_OVRflows_g+0x2>
     8d8:	70 91 cd 00 	lds	r23, 0x00CD	; 0x8000cd <TIMER0_Number_OVRflows_g+0x3>
     8dc:	84 17       	cp	r24, r20
     8de:	95 07       	cpc	r25, r21
     8e0:	a6 07       	cpc	r26, r22
     8e2:	b7 07       	cpc	r27, r23
     8e4:	51 f4       	brne	.+20     	; 0x8fa <__vector_11+0x60>
     8e6:	e0 91 f7 00 	lds	r30, 0x00F7	; 0x8000f7 <CallBack_PtrFunc+0x14>
     8ea:	f0 91 f8 00 	lds	r31, 0x00F8	; 0x8000f8 <CallBack_PtrFunc+0x15>
     8ee:	09 95       	icall
     8f0:	10 92 de 00 	sts	0x00DE, r1	; 0x8000de <INT_CNT_l.1668>
     8f4:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <TIMER0_Init_Value_g>
     8f8:	82 bf       	out	0x32, r24	; 50
     8fa:	ff 91       	pop	r31
     8fc:	ef 91       	pop	r30
     8fe:	bf 91       	pop	r27
     900:	af 91       	pop	r26
     902:	9f 91       	pop	r25
     904:	8f 91       	pop	r24
     906:	7f 91       	pop	r23
     908:	6f 91       	pop	r22
     90a:	5f 91       	pop	r21
     90c:	4f 91       	pop	r20
     90e:	3f 91       	pop	r19
     910:	2f 91       	pop	r18
     912:	0f 90       	pop	r0
     914:	0f be       	out	0x3f, r0	; 63
     916:	0f 90       	pop	r0
     918:	1f 90       	pop	r1
     91a:	18 95       	reti

0000091c <__vector_9>:
     91c:	1f 92       	push	r1
     91e:	0f 92       	push	r0
     920:	0f b6       	in	r0, 0x3f	; 63
     922:	0f 92       	push	r0
     924:	11 24       	eor	r1, r1
     926:	8f 93       	push	r24
     928:	9f 93       	push	r25
     92a:	af 93       	push	r26
     92c:	bf 93       	push	r27
     92e:	80 91 df 00 	lds	r24, 0x00DF	; 0x8000df <TIMER1_Number_OVRflows_g>
     932:	90 91 e0 00 	lds	r25, 0x00E0	; 0x8000e0 <TIMER1_Number_OVRflows_g+0x1>
     936:	a0 91 e1 00 	lds	r26, 0x00E1	; 0x8000e1 <TIMER1_Number_OVRflows_g+0x2>
     93a:	b0 91 e2 00 	lds	r27, 0x00E2	; 0x8000e2 <TIMER1_Number_OVRflows_g+0x3>
     93e:	01 96       	adiw	r24, 0x01	; 1
     940:	a1 1d       	adc	r26, r1
     942:	b1 1d       	adc	r27, r1
     944:	80 93 df 00 	sts	0x00DF, r24	; 0x8000df <TIMER1_Number_OVRflows_g>
     948:	90 93 e0 00 	sts	0x00E0, r25	; 0x8000e0 <TIMER1_Number_OVRflows_g+0x1>
     94c:	a0 93 e1 00 	sts	0x00E1, r26	; 0x8000e1 <TIMER1_Number_OVRflows_g+0x2>
     950:	b0 93 e2 00 	sts	0x00E2, r27	; 0x8000e2 <TIMER1_Number_OVRflows_g+0x3>
     954:	bf 91       	pop	r27
     956:	af 91       	pop	r26
     958:	9f 91       	pop	r25
     95a:	8f 91       	pop	r24
     95c:	0f 90       	pop	r0
     95e:	0f be       	out	0x3f, r0	; 63
     960:	0f 90       	pop	r0
     962:	1f 90       	pop	r1
     964:	18 95       	reti

00000966 <__vector_6>:
     966:	1f 92       	push	r1
     968:	0f 92       	push	r0
     96a:	0f b6       	in	r0, 0x3f	; 63
     96c:	0f 92       	push	r0
     96e:	11 24       	eor	r1, r1
     970:	2f 93       	push	r18
     972:	3f 93       	push	r19
     974:	4f 93       	push	r20
     976:	5f 93       	push	r21
     978:	6f 93       	push	r22
     97a:	7f 93       	push	r23
     97c:	8f 93       	push	r24
     97e:	9f 93       	push	r25
     980:	af 93       	push	r26
     982:	bf 93       	push	r27
     984:	ef 93       	push	r30
     986:	ff 93       	push	r31
     988:	80 91 ce 00 	lds	r24, 0x00CE	; 0x8000ce <Capture_Flag>
     98c:	90 91 cf 00 	lds	r25, 0x00CF	; 0x8000cf <Capture_Flag+0x1>
     990:	a0 91 d0 00 	lds	r26, 0x00D0	; 0x8000d0 <Capture_Flag+0x2>
     994:	b0 91 d1 00 	lds	r27, 0x00D1	; 0x8000d1 <Capture_Flag+0x3>
     998:	01 96       	adiw	r24, 0x01	; 1
     99a:	a1 1d       	adc	r26, r1
     99c:	b1 1d       	adc	r27, r1
     99e:	80 93 ce 00 	sts	0x00CE, r24	; 0x8000ce <Capture_Flag>
     9a2:	90 93 cf 00 	sts	0x00CF, r25	; 0x8000cf <Capture_Flag+0x1>
     9a6:	a0 93 d0 00 	sts	0x00D0, r26	; 0x8000d0 <Capture_Flag+0x2>
     9aa:	b0 93 d1 00 	sts	0x00D1, r27	; 0x8000d1 <Capture_Flag+0x3>
     9ae:	80 91 ce 00 	lds	r24, 0x00CE	; 0x8000ce <Capture_Flag>
     9b2:	90 91 cf 00 	lds	r25, 0x00CF	; 0x8000cf <Capture_Flag+0x1>
     9b6:	a0 91 d0 00 	lds	r26, 0x00D0	; 0x8000d0 <Capture_Flag+0x2>
     9ba:	b0 91 d1 00 	lds	r27, 0x00D1	; 0x8000d1 <Capture_Flag+0x3>
     9be:	01 97       	sbiw	r24, 0x01	; 1
     9c0:	a1 05       	cpc	r26, r1
     9c2:	b1 05       	cpc	r27, r1
     9c4:	c1 f4       	brne	.+48     	; 0x9f6 <__vector_6+0x90>
     9c6:	86 b5       	in	r24, 0x26	; 38
     9c8:	97 b5       	in	r25, 0x27	; 39
     9ca:	a0 e0       	ldi	r26, 0x00	; 0
     9cc:	b0 e0       	ldi	r27, 0x00	; 0
     9ce:	80 93 da 00 	sts	0x00DA, r24	; 0x8000da <Captured_Readings_1>
     9d2:	90 93 db 00 	sts	0x00DB, r25	; 0x8000db <Captured_Readings_1+0x1>
     9d6:	a0 93 dc 00 	sts	0x00DC, r26	; 0x8000dc <Captured_Readings_1+0x2>
     9da:	b0 93 dd 00 	sts	0x00DD, r27	; 0x8000dd <Captured_Readings_1+0x3>
     9de:	10 92 df 00 	sts	0x00DF, r1	; 0x8000df <TIMER1_Number_OVRflows_g>
     9e2:	10 92 e0 00 	sts	0x00E0, r1	; 0x8000e0 <TIMER1_Number_OVRflows_g+0x1>
     9e6:	10 92 e1 00 	sts	0x00E1, r1	; 0x8000e1 <TIMER1_Number_OVRflows_g+0x2>
     9ea:	10 92 e2 00 	sts	0x00E2, r1	; 0x8000e2 <TIMER1_Number_OVRflows_g+0x3>
     9ee:	8e b5       	in	r24, 0x2e	; 46
     9f0:	8f 7b       	andi	r24, 0xBF	; 191
     9f2:	8e bd       	out	0x2e, r24	; 46
     9f4:	57 c0       	rjmp	.+174    	; 0xaa4 <__vector_6+0x13e>
     9f6:	80 91 ce 00 	lds	r24, 0x00CE	; 0x8000ce <Capture_Flag>
     9fa:	90 91 cf 00 	lds	r25, 0x00CF	; 0x8000cf <Capture_Flag+0x1>
     9fe:	a0 91 d0 00 	lds	r26, 0x00D0	; 0x8000d0 <Capture_Flag+0x2>
     a02:	b0 91 d1 00 	lds	r27, 0x00D1	; 0x8000d1 <Capture_Flag+0x3>
     a06:	02 97       	sbiw	r24, 0x02	; 2
     a08:	a1 05       	cpc	r26, r1
     a0a:	b1 05       	cpc	r27, r1
     a0c:	01 f5       	brne	.+64     	; 0xa4e <__vector_6+0xe8>
     a0e:	e6 b5       	in	r30, 0x26	; 38
     a10:	f7 b5       	in	r31, 0x27	; 39
     a12:	20 91 df 00 	lds	r18, 0x00DF	; 0x8000df <TIMER1_Number_OVRflows_g>
     a16:	30 91 e0 00 	lds	r19, 0x00E0	; 0x8000e0 <TIMER1_Number_OVRflows_g+0x1>
     a1a:	40 91 e1 00 	lds	r20, 0x00E1	; 0x8000e1 <TIMER1_Number_OVRflows_g+0x2>
     a1e:	50 91 e2 00 	lds	r21, 0x00E2	; 0x8000e2 <TIMER1_Number_OVRflows_g+0x3>
     a22:	af ef       	ldi	r26, 0xFF	; 255
     a24:	bf ef       	ldi	r27, 0xFF	; 255
     a26:	0e 94 b5 0f 	call	0x1f6a	; 0x1f6a <__muluhisi3>
     a2a:	dc 01       	movw	r26, r24
     a2c:	cb 01       	movw	r24, r22
     a2e:	8e 0f       	add	r24, r30
     a30:	9f 1f       	adc	r25, r31
     a32:	a1 1d       	adc	r26, r1
     a34:	b1 1d       	adc	r27, r1
     a36:	80 93 d6 00 	sts	0x00D6, r24	; 0x8000d6 <Captured_Readings_2>
     a3a:	90 93 d7 00 	sts	0x00D7, r25	; 0x8000d7 <Captured_Readings_2+0x1>
     a3e:	a0 93 d8 00 	sts	0x00D8, r26	; 0x8000d8 <Captured_Readings_2+0x2>
     a42:	b0 93 d9 00 	sts	0x00D9, r27	; 0x8000d9 <Captured_Readings_2+0x3>
     a46:	8e b5       	in	r24, 0x2e	; 46
     a48:	80 64       	ori	r24, 0x40	; 64
     a4a:	8e bd       	out	0x2e, r24	; 46
     a4c:	2b c0       	rjmp	.+86     	; 0xaa4 <__vector_6+0x13e>
     a4e:	80 91 ce 00 	lds	r24, 0x00CE	; 0x8000ce <Capture_Flag>
     a52:	90 91 cf 00 	lds	r25, 0x00CF	; 0x8000cf <Capture_Flag+0x1>
     a56:	a0 91 d0 00 	lds	r26, 0x00D0	; 0x8000d0 <Capture_Flag+0x2>
     a5a:	b0 91 d1 00 	lds	r27, 0x00D1	; 0x8000d1 <Capture_Flag+0x3>
     a5e:	03 97       	sbiw	r24, 0x03	; 3
     a60:	a1 05       	cpc	r26, r1
     a62:	b1 05       	cpc	r27, r1
     a64:	f9 f4       	brne	.+62     	; 0xaa4 <__vector_6+0x13e>
     a66:	e6 b5       	in	r30, 0x26	; 38
     a68:	f7 b5       	in	r31, 0x27	; 39
     a6a:	20 91 df 00 	lds	r18, 0x00DF	; 0x8000df <TIMER1_Number_OVRflows_g>
     a6e:	30 91 e0 00 	lds	r19, 0x00E0	; 0x8000e0 <TIMER1_Number_OVRflows_g+0x1>
     a72:	40 91 e1 00 	lds	r20, 0x00E1	; 0x8000e1 <TIMER1_Number_OVRflows_g+0x2>
     a76:	50 91 e2 00 	lds	r21, 0x00E2	; 0x8000e2 <TIMER1_Number_OVRflows_g+0x3>
     a7a:	af ef       	ldi	r26, 0xFF	; 255
     a7c:	bf ef       	ldi	r27, 0xFF	; 255
     a7e:	0e 94 b5 0f 	call	0x1f6a	; 0x1f6a <__muluhisi3>
     a82:	dc 01       	movw	r26, r24
     a84:	cb 01       	movw	r24, r22
     a86:	8e 0f       	add	r24, r30
     a88:	9f 1f       	adc	r25, r31
     a8a:	a1 1d       	adc	r26, r1
     a8c:	b1 1d       	adc	r27, r1
     a8e:	80 93 d2 00 	sts	0x00D2, r24	; 0x8000d2 <Captured_Readings_3>
     a92:	90 93 d3 00 	sts	0x00D3, r25	; 0x8000d3 <Captured_Readings_3+0x1>
     a96:	a0 93 d4 00 	sts	0x00D4, r26	; 0x8000d4 <Captured_Readings_3+0x2>
     a9a:	b0 93 d5 00 	sts	0x00D5, r27	; 0x8000d5 <Captured_Readings_3+0x3>
     a9e:	89 b7       	in	r24, 0x39	; 57
     aa0:	8f 7d       	andi	r24, 0xDF	; 223
     aa2:	89 bf       	out	0x39, r24	; 57
     aa4:	ff 91       	pop	r31
     aa6:	ef 91       	pop	r30
     aa8:	bf 91       	pop	r27
     aaa:	af 91       	pop	r26
     aac:	9f 91       	pop	r25
     aae:	8f 91       	pop	r24
     ab0:	7f 91       	pop	r23
     ab2:	6f 91       	pop	r22
     ab4:	5f 91       	pop	r21
     ab6:	4f 91       	pop	r20
     ab8:	3f 91       	pop	r19
     aba:	2f 91       	pop	r18
     abc:	0f 90       	pop	r0
     abe:	0f be       	out	0x3f, r0	; 63
     ac0:	0f 90       	pop	r0
     ac2:	1f 90       	pop	r1
     ac4:	18 95       	reti

00000ac6 <__vector_13>:
     ac6:	1f 92       	push	r1
     ac8:	0f 92       	push	r0
     aca:	0f b6       	in	r0, 0x3f	; 63
     acc:	0f 92       	push	r0
     ace:	11 24       	eor	r1, r1
     ad0:	2f 93       	push	r18
     ad2:	3f 93       	push	r19
     ad4:	4f 93       	push	r20
     ad6:	5f 93       	push	r21
     ad8:	6f 93       	push	r22
     ada:	7f 93       	push	r23
     adc:	8f 93       	push	r24
     ade:	9f 93       	push	r25
     ae0:	af 93       	push	r26
     ae2:	bf 93       	push	r27
     ae4:	ef 93       	push	r30
     ae6:	ff 93       	push	r31
     ae8:	e0 91 fb 00 	lds	r30, 0x00FB	; 0x8000fb <CallBack_PtrFunc+0x18>
     aec:	f0 91 fc 00 	lds	r31, 0x00FC	; 0x8000fc <CallBack_PtrFunc+0x19>
     af0:	30 97       	sbiw	r30, 0x00	; 0
     af2:	09 f0       	breq	.+2      	; 0xaf6 <__vector_13+0x30>
     af4:	09 95       	icall
     af6:	ff 91       	pop	r31
     af8:	ef 91       	pop	r30
     afa:	bf 91       	pop	r27
     afc:	af 91       	pop	r26
     afe:	9f 91       	pop	r25
     b00:	8f 91       	pop	r24
     b02:	7f 91       	pop	r23
     b04:	6f 91       	pop	r22
     b06:	5f 91       	pop	r21
     b08:	4f 91       	pop	r20
     b0a:	3f 91       	pop	r19
     b0c:	2f 91       	pop	r18
     b0e:	0f 90       	pop	r0
     b10:	0f be       	out	0x3f, r0	; 63
     b12:	0f 90       	pop	r0
     b14:	1f 90       	pop	r1
     b16:	18 95       	reti

00000b18 <__vector_15>:
     b18:	1f 92       	push	r1
     b1a:	0f 92       	push	r0
     b1c:	0f b6       	in	r0, 0x3f	; 63
     b1e:	0f 92       	push	r0
     b20:	11 24       	eor	r1, r1
     b22:	8f 93       	push	r24
     b24:	81 e0       	ldi	r24, 0x01	; 1
     b26:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <TX_STATUS_FLAG>
     b2a:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <TX_Cnt>
     b2e:	8f 5f       	subi	r24, 0xFF	; 255
     b30:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <TX_Cnt>
     b34:	8f 91       	pop	r24
     b36:	0f 90       	pop	r0
     b38:	0f be       	out	0x3f, r0	; 63
     b3a:	0f 90       	pop	r0
     b3c:	1f 90       	pop	r1
     b3e:	18 95       	reti

00000b40 <PORT_Init>:
*******************************************************************************/
void PORT_Init(void)
{
	uint8 Cnt = 0 , Port = 0 , Pin = 0 , Dir = 0 ;
	
	for(Cnt = 0 ; Cnt < DEFINED_PINS ; Cnt++)
     b40:	90 e0       	ldi	r25, 0x00	; 0
     b42:	7e c0       	rjmp	.+252    	; 0xc40 <PORT_Init+0x100>
	{
		Port = PORT_Initialization[Cnt].PIN_NUM / NUMBER_OF_EACH_PORT_PINS ;
     b44:	e9 2f       	mov	r30, r25
     b46:	f0 e0       	ldi	r31, 0x00	; 0
     b48:	ee 0f       	add	r30, r30
     b4a:	ff 1f       	adc	r31, r31
     b4c:	e0 5a       	subi	r30, 0xA0	; 160
     b4e:	ff 4f       	sbci	r31, 0xFF	; 255
     b50:	80 81       	ld	r24, Z
     b52:	28 2f       	mov	r18, r24
     b54:	26 95       	lsr	r18
     b56:	26 95       	lsr	r18
     b58:	26 95       	lsr	r18
		Pin = PORT_Initialization[Cnt].PIN_NUM % NUMBER_OF_EACH_PORT_PINS  ;
     b5a:	87 70       	andi	r24, 0x07	; 7
		Dir = PORT_Initialization[Cnt].PIN_DIR ;
     b5c:	31 81       	ldd	r19, Z+1	; 0x01
		
		switch(Dir)
     b5e:	33 23       	and	r19, r19
     b60:	b9 f1       	breq	.+110    	; 0xbd0 <PORT_Init+0x90>
     b62:	31 30       	cpi	r19, 0x01	; 1
     b64:	09 f0       	breq	.+2      	; 0xb68 <PORT_Init+0x28>
     b66:	6b c0       	rjmp	.+214    	; 0xc3e <PORT_Init+0xfe>
		{
			case PIN_OUTPUT :
			
			switch(Port)
     b68:	21 30       	cpi	r18, 0x01	; 1
     b6a:	89 f0       	breq	.+34     	; 0xb8e <PORT_Init+0x4e>
     b6c:	28 f0       	brcs	.+10     	; 0xb78 <PORT_Init+0x38>
     b6e:	22 30       	cpi	r18, 0x02	; 2
     b70:	c9 f0       	breq	.+50     	; 0xba4 <PORT_Init+0x64>
     b72:	23 30       	cpi	r18, 0x03	; 3
     b74:	11 f1       	breq	.+68     	; 0xbba <PORT_Init+0x7a>
     b76:	63 c0       	rjmp	.+198    	; 0xc3e <PORT_Init+0xfe>
			{
				case 0:
				SET_BIT(PHYSICAL_GPIO_ACCESS(GPIOA_BASE_ADDRRESS + GPIO_DIRCETION_REGISTER_DDR) ,Pin );
     b78:	4a b3       	in	r20, 0x1a	; 26
     b7a:	21 e0       	ldi	r18, 0x01	; 1
     b7c:	30 e0       	ldi	r19, 0x00	; 0
     b7e:	02 c0       	rjmp	.+4      	; 0xb84 <PORT_Init+0x44>
     b80:	22 0f       	add	r18, r18
     b82:	33 1f       	adc	r19, r19
     b84:	8a 95       	dec	r24
     b86:	e2 f7       	brpl	.-8      	; 0xb80 <PORT_Init+0x40>
     b88:	24 2b       	or	r18, r20
     b8a:	2a bb       	out	0x1a, r18	; 26

				break;
     b8c:	58 c0       	rjmp	.+176    	; 0xc3e <PORT_Init+0xfe>
				
				case 1:
				SET_BIT(PHYSICAL_GPIO_ACCESS(GPIOB_BASE_ADDRRESS + GPIO_DIRCETION_REGISTER_DDR) ,Pin );
     b8e:	47 b3       	in	r20, 0x17	; 23
     b90:	21 e0       	ldi	r18, 0x01	; 1
     b92:	30 e0       	ldi	r19, 0x00	; 0
     b94:	02 c0       	rjmp	.+4      	; 0xb9a <PORT_Init+0x5a>
     b96:	22 0f       	add	r18, r18
     b98:	33 1f       	adc	r19, r19
     b9a:	8a 95       	dec	r24
     b9c:	e2 f7       	brpl	.-8      	; 0xb96 <PORT_Init+0x56>
     b9e:	24 2b       	or	r18, r20
     ba0:	27 bb       	out	0x17, r18	; 23
				
				break;
     ba2:	4d c0       	rjmp	.+154    	; 0xc3e <PORT_Init+0xfe>
				
				case 2:
				SET_BIT(PHYSICAL_GPIO_ACCESS(GPIOC_BASE_ADDRRESS + GPIO_DIRCETION_REGISTER_DDR) ,Pin );
     ba4:	44 b3       	in	r20, 0x14	; 20
     ba6:	21 e0       	ldi	r18, 0x01	; 1
     ba8:	30 e0       	ldi	r19, 0x00	; 0
     baa:	02 c0       	rjmp	.+4      	; 0xbb0 <PORT_Init+0x70>
     bac:	22 0f       	add	r18, r18
     bae:	33 1f       	adc	r19, r19
     bb0:	8a 95       	dec	r24
     bb2:	e2 f7       	brpl	.-8      	; 0xbac <PORT_Init+0x6c>
     bb4:	24 2b       	or	r18, r20
     bb6:	24 bb       	out	0x14, r18	; 20
				
				break;
     bb8:	42 c0       	rjmp	.+132    	; 0xc3e <PORT_Init+0xfe>
				
				case 3:
				SET_BIT(PHYSICAL_GPIO_ACCESS(GPIOD_BASE_ADDRRESS + GPIO_DIRCETION_REGISTER_DDR) ,Pin );
     bba:	41 b3       	in	r20, 0x11	; 17
     bbc:	21 e0       	ldi	r18, 0x01	; 1
     bbe:	30 e0       	ldi	r19, 0x00	; 0
     bc0:	02 c0       	rjmp	.+4      	; 0xbc6 <PORT_Init+0x86>
     bc2:	22 0f       	add	r18, r18
     bc4:	33 1f       	adc	r19, r19
     bc6:	8a 95       	dec	r24
     bc8:	e2 f7       	brpl	.-8      	; 0xbc2 <PORT_Init+0x82>
     bca:	24 2b       	or	r18, r20
     bcc:	21 bb       	out	0x11, r18	; 17
				
				break;
     bce:	37 c0       	rjmp	.+110    	; 0xc3e <PORT_Init+0xfe>
				break;
			}
			break;
			
			case PIN_INPUT :
			switch(Port)
     bd0:	21 30       	cpi	r18, 0x01	; 1
     bd2:	91 f0       	breq	.+36     	; 0xbf8 <PORT_Init+0xb8>
     bd4:	28 f0       	brcs	.+10     	; 0xbe0 <PORT_Init+0xa0>
     bd6:	22 30       	cpi	r18, 0x02	; 2
     bd8:	d9 f0       	breq	.+54     	; 0xc10 <PORT_Init+0xd0>
     bda:	23 30       	cpi	r18, 0x03	; 3
     bdc:	29 f1       	breq	.+74     	; 0xc28 <PORT_Init+0xe8>
     bde:	2f c0       	rjmp	.+94     	; 0xc3e <PORT_Init+0xfe>
			{
				case 0:
				CLR_BIT(PHYSICAL_GPIO_ACCESS(GPIOA_BASE_ADDRRESS + GPIO_DIRCETION_REGISTER_DDR) ,Pin );
     be0:	4a b3       	in	r20, 0x1a	; 26
     be2:	21 e0       	ldi	r18, 0x01	; 1
     be4:	30 e0       	ldi	r19, 0x00	; 0
     be6:	02 c0       	rjmp	.+4      	; 0xbec <PORT_Init+0xac>
     be8:	22 0f       	add	r18, r18
     bea:	33 1f       	adc	r19, r19
     bec:	8a 95       	dec	r24
     bee:	e2 f7       	brpl	.-8      	; 0xbe8 <PORT_Init+0xa8>
     bf0:	20 95       	com	r18
     bf2:	24 23       	and	r18, r20
     bf4:	2a bb       	out	0x1a, r18	; 26

				break;
     bf6:	23 c0       	rjmp	.+70     	; 0xc3e <PORT_Init+0xfe>
				
				case 1:
				CLR_BIT(PHYSICAL_GPIO_ACCESS(GPIOB_BASE_ADDRRESS + GPIO_DIRCETION_REGISTER_DDR) ,Pin );
     bf8:	47 b3       	in	r20, 0x17	; 23
     bfa:	21 e0       	ldi	r18, 0x01	; 1
     bfc:	30 e0       	ldi	r19, 0x00	; 0
     bfe:	02 c0       	rjmp	.+4      	; 0xc04 <PORT_Init+0xc4>
     c00:	22 0f       	add	r18, r18
     c02:	33 1f       	adc	r19, r19
     c04:	8a 95       	dec	r24
     c06:	e2 f7       	brpl	.-8      	; 0xc00 <PORT_Init+0xc0>
     c08:	20 95       	com	r18
     c0a:	24 23       	and	r18, r20
     c0c:	27 bb       	out	0x17, r18	; 23
				
				break;
     c0e:	17 c0       	rjmp	.+46     	; 0xc3e <PORT_Init+0xfe>
				
				case 2:
				CLR_BIT(PHYSICAL_GPIO_ACCESS(GPIOC_BASE_ADDRRESS + GPIO_DIRCETION_REGISTER_DDR) ,Pin );
     c10:	44 b3       	in	r20, 0x14	; 20
     c12:	21 e0       	ldi	r18, 0x01	; 1
     c14:	30 e0       	ldi	r19, 0x00	; 0
     c16:	02 c0       	rjmp	.+4      	; 0xc1c <PORT_Init+0xdc>
     c18:	22 0f       	add	r18, r18
     c1a:	33 1f       	adc	r19, r19
     c1c:	8a 95       	dec	r24
     c1e:	e2 f7       	brpl	.-8      	; 0xc18 <PORT_Init+0xd8>
     c20:	20 95       	com	r18
     c22:	24 23       	and	r18, r20
     c24:	24 bb       	out	0x14, r18	; 20
				
				break;
     c26:	0b c0       	rjmp	.+22     	; 0xc3e <PORT_Init+0xfe>
				
				case 3:
				CLR_BIT(PHYSICAL_GPIO_ACCESS(GPIOD_BASE_ADDRRESS + GPIO_DIRCETION_REGISTER_DDR) ,Pin );
     c28:	41 b3       	in	r20, 0x11	; 17
     c2a:	21 e0       	ldi	r18, 0x01	; 1
     c2c:	30 e0       	ldi	r19, 0x00	; 0
     c2e:	02 c0       	rjmp	.+4      	; 0xc34 <PORT_Init+0xf4>
     c30:	22 0f       	add	r18, r18
     c32:	33 1f       	adc	r19, r19
     c34:	8a 95       	dec	r24
     c36:	e2 f7       	brpl	.-8      	; 0xc30 <PORT_Init+0xf0>
     c38:	20 95       	com	r18
     c3a:	24 23       	and	r18, r20
     c3c:	21 bb       	out	0x11, r18	; 17
*******************************************************************************/
void PORT_Init(void)
{
	uint8 Cnt = 0 , Port = 0 , Pin = 0 , Dir = 0 ;
	
	for(Cnt = 0 ; Cnt < DEFINED_PINS ; Cnt++)
     c3e:	9f 5f       	subi	r25, 0xFF	; 255
     c40:	98 31       	cpi	r25, 0x18	; 24
     c42:	08 f4       	brcc	.+2      	; 0xc46 <PORT_Init+0x106>
     c44:	7f cf       	rjmp	.-258    	; 0xb44 <PORT_Init+0x4>
			
			default:
			break;
		}
	}
}
     c46:	08 95       	ret

00000c48 <pvPortMalloc>:
     c48:	cf 93       	push	r28
     c4a:	df 93       	push	r29
     c4c:	ec 01       	movw	r28, r24
     c4e:	0e 94 c6 0c 	call	0x198c	; 0x198c <vTaskSuspendAll>
     c52:	80 91 0d 01 	lds	r24, 0x010D	; 0x80010d <pucAlignedHeap.2084>
     c56:	90 91 0e 01 	lds	r25, 0x010E	; 0x80010e <pucAlignedHeap.2084+0x1>
     c5a:	89 2b       	or	r24, r25
     c5c:	31 f4       	brne	.+12     	; 0xc6a <pvPortMalloc+0x22>
     c5e:	82 e1       	ldi	r24, 0x12	; 18
     c60:	91 e0       	ldi	r25, 0x01	; 1
     c62:	90 93 0e 01 	sts	0x010E, r25	; 0x80010e <pucAlignedHeap.2084+0x1>
     c66:	80 93 0d 01 	sts	0x010D, r24	; 0x80010d <pucAlignedHeap.2084>
     c6a:	20 91 0f 01 	lds	r18, 0x010F	; 0x80010f <xNextFreeByte>
     c6e:	30 91 10 01 	lds	r19, 0x0110	; 0x800110 <xNextFreeByte+0x1>
     c72:	c9 01       	movw	r24, r18
     c74:	8c 0f       	add	r24, r28
     c76:	9d 1f       	adc	r25, r29
     c78:	8b 3d       	cpi	r24, 0xDB	; 219
     c7a:	45 e0       	ldi	r20, 0x05	; 5
     c7c:	94 07       	cpc	r25, r20
     c7e:	70 f4       	brcc	.+28     	; 0xc9c <pvPortMalloc+0x54>
     c80:	28 17       	cp	r18, r24
     c82:	39 07       	cpc	r19, r25
     c84:	70 f4       	brcc	.+28     	; 0xca2 <pvPortMalloc+0x5a>
     c86:	c0 91 0d 01 	lds	r28, 0x010D	; 0x80010d <pucAlignedHeap.2084>
     c8a:	d0 91 0e 01 	lds	r29, 0x010E	; 0x80010e <pucAlignedHeap.2084+0x1>
     c8e:	c2 0f       	add	r28, r18
     c90:	d3 1f       	adc	r29, r19
     c92:	90 93 10 01 	sts	0x0110, r25	; 0x800110 <xNextFreeByte+0x1>
     c96:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <xNextFreeByte>
     c9a:	05 c0       	rjmp	.+10     	; 0xca6 <pvPortMalloc+0x5e>
     c9c:	c0 e0       	ldi	r28, 0x00	; 0
     c9e:	d0 e0       	ldi	r29, 0x00	; 0
     ca0:	02 c0       	rjmp	.+4      	; 0xca6 <pvPortMalloc+0x5e>
     ca2:	c0 e0       	ldi	r28, 0x00	; 0
     ca4:	d0 e0       	ldi	r29, 0x00	; 0
     ca6:	0e 94 86 0d 	call	0x1b0c	; 0x1b0c <xTaskResumeAll>
     caa:	ce 01       	movw	r24, r28
     cac:	df 91       	pop	r29
     cae:	cf 91       	pop	r28
     cb0:	08 95       	ret

00000cb2 <vPortFree>:
     cb2:	08 95       	ret

00000cb4 <vListInitialise>:
     cb4:	fc 01       	movw	r30, r24
     cb6:	03 96       	adiw	r24, 0x03	; 3
     cb8:	92 83       	std	Z+2, r25	; 0x02
     cba:	81 83       	std	Z+1, r24	; 0x01
     cbc:	2f ef       	ldi	r18, 0xFF	; 255
     cbe:	3f ef       	ldi	r19, 0xFF	; 255
     cc0:	34 83       	std	Z+4, r19	; 0x04
     cc2:	23 83       	std	Z+3, r18	; 0x03
     cc4:	96 83       	std	Z+6, r25	; 0x06
     cc6:	85 83       	std	Z+5, r24	; 0x05
     cc8:	90 87       	std	Z+8, r25	; 0x08
     cca:	87 83       	std	Z+7, r24	; 0x07
     ccc:	10 82       	st	Z, r1
     cce:	08 95       	ret

00000cd0 <vListInitialiseItem>:
     cd0:	fc 01       	movw	r30, r24
     cd2:	11 86       	std	Z+9, r1	; 0x09
     cd4:	10 86       	std	Z+8, r1	; 0x08
     cd6:	08 95       	ret

00000cd8 <vListInsertEnd>:
     cd8:	cf 93       	push	r28
     cda:	df 93       	push	r29
     cdc:	9c 01       	movw	r18, r24
     cde:	fb 01       	movw	r30, r22
     ce0:	dc 01       	movw	r26, r24
     ce2:	11 96       	adiw	r26, 0x01	; 1
     ce4:	cd 91       	ld	r28, X+
     ce6:	dc 91       	ld	r29, X
     ce8:	12 97       	sbiw	r26, 0x02	; 2
     cea:	d3 83       	std	Z+3, r29	; 0x03
     cec:	c2 83       	std	Z+2, r28	; 0x02
     cee:	8c 81       	ldd	r24, Y+4	; 0x04
     cf0:	9d 81       	ldd	r25, Y+5	; 0x05
     cf2:	95 83       	std	Z+5, r25	; 0x05
     cf4:	84 83       	std	Z+4, r24	; 0x04
     cf6:	8c 81       	ldd	r24, Y+4	; 0x04
     cf8:	9d 81       	ldd	r25, Y+5	; 0x05
     cfa:	dc 01       	movw	r26, r24
     cfc:	13 96       	adiw	r26, 0x03	; 3
     cfe:	7c 93       	st	X, r23
     d00:	6e 93       	st	-X, r22
     d02:	12 97       	sbiw	r26, 0x02	; 2
     d04:	7d 83       	std	Y+5, r23	; 0x05
     d06:	6c 83       	std	Y+4, r22	; 0x04
     d08:	31 87       	std	Z+9, r19	; 0x09
     d0a:	20 87       	std	Z+8, r18	; 0x08
     d0c:	f9 01       	movw	r30, r18
     d0e:	80 81       	ld	r24, Z
     d10:	8f 5f       	subi	r24, 0xFF	; 255
     d12:	80 83       	st	Z, r24
     d14:	df 91       	pop	r29
     d16:	cf 91       	pop	r28
     d18:	08 95       	ret

00000d1a <vListInsert>:
     d1a:	cf 93       	push	r28
     d1c:	df 93       	push	r29
     d1e:	eb 01       	movw	r28, r22
     d20:	48 81       	ld	r20, Y
     d22:	59 81       	ldd	r21, Y+1	; 0x01
     d24:	4f 3f       	cpi	r20, 0xFF	; 255
     d26:	2f ef       	ldi	r18, 0xFF	; 255
     d28:	52 07       	cpc	r21, r18
     d2a:	21 f4       	brne	.+8      	; 0xd34 <vListInsert+0x1a>
     d2c:	fc 01       	movw	r30, r24
     d2e:	a7 81       	ldd	r26, Z+7	; 0x07
     d30:	b0 85       	ldd	r27, Z+8	; 0x08
     d32:	0d c0       	rjmp	.+26     	; 0xd4e <vListInsert+0x34>
     d34:	dc 01       	movw	r26, r24
     d36:	13 96       	adiw	r26, 0x03	; 3
     d38:	01 c0       	rjmp	.+2      	; 0xd3c <vListInsert+0x22>
     d3a:	df 01       	movw	r26, r30
     d3c:	12 96       	adiw	r26, 0x02	; 2
     d3e:	ed 91       	ld	r30, X+
     d40:	fc 91       	ld	r31, X
     d42:	13 97       	sbiw	r26, 0x03	; 3
     d44:	20 81       	ld	r18, Z
     d46:	31 81       	ldd	r19, Z+1	; 0x01
     d48:	42 17       	cp	r20, r18
     d4a:	53 07       	cpc	r21, r19
     d4c:	b0 f7       	brcc	.-20     	; 0xd3a <vListInsert+0x20>
     d4e:	12 96       	adiw	r26, 0x02	; 2
     d50:	ed 91       	ld	r30, X+
     d52:	fc 91       	ld	r31, X
     d54:	13 97       	sbiw	r26, 0x03	; 3
     d56:	fb 83       	std	Y+3, r31	; 0x03
     d58:	ea 83       	std	Y+2, r30	; 0x02
     d5a:	d5 83       	std	Z+5, r29	; 0x05
     d5c:	c4 83       	std	Z+4, r28	; 0x04
     d5e:	bd 83       	std	Y+5, r27	; 0x05
     d60:	ac 83       	std	Y+4, r26	; 0x04
     d62:	13 96       	adiw	r26, 0x03	; 3
     d64:	dc 93       	st	X, r29
     d66:	ce 93       	st	-X, r28
     d68:	12 97       	sbiw	r26, 0x02	; 2
     d6a:	99 87       	std	Y+9, r25	; 0x09
     d6c:	88 87       	std	Y+8, r24	; 0x08
     d6e:	fc 01       	movw	r30, r24
     d70:	20 81       	ld	r18, Z
     d72:	2f 5f       	subi	r18, 0xFF	; 255
     d74:	20 83       	st	Z, r18
     d76:	df 91       	pop	r29
     d78:	cf 91       	pop	r28
     d7a:	08 95       	ret

00000d7c <uxListRemove>:
     d7c:	cf 93       	push	r28
     d7e:	df 93       	push	r29
     d80:	fc 01       	movw	r30, r24
     d82:	a0 85       	ldd	r26, Z+8	; 0x08
     d84:	b1 85       	ldd	r27, Z+9	; 0x09
     d86:	c2 81       	ldd	r28, Z+2	; 0x02
     d88:	d3 81       	ldd	r29, Z+3	; 0x03
     d8a:	84 81       	ldd	r24, Z+4	; 0x04
     d8c:	95 81       	ldd	r25, Z+5	; 0x05
     d8e:	9d 83       	std	Y+5, r25	; 0x05
     d90:	8c 83       	std	Y+4, r24	; 0x04
     d92:	c4 81       	ldd	r28, Z+4	; 0x04
     d94:	d5 81       	ldd	r29, Z+5	; 0x05
     d96:	82 81       	ldd	r24, Z+2	; 0x02
     d98:	93 81       	ldd	r25, Z+3	; 0x03
     d9a:	9b 83       	std	Y+3, r25	; 0x03
     d9c:	8a 83       	std	Y+2, r24	; 0x02
     d9e:	11 96       	adiw	r26, 0x01	; 1
     da0:	8d 91       	ld	r24, X+
     da2:	9c 91       	ld	r25, X
     da4:	12 97       	sbiw	r26, 0x02	; 2
     da6:	e8 17       	cp	r30, r24
     da8:	f9 07       	cpc	r31, r25
     daa:	31 f4       	brne	.+12     	; 0xdb8 <uxListRemove+0x3c>
     dac:	84 81       	ldd	r24, Z+4	; 0x04
     dae:	95 81       	ldd	r25, Z+5	; 0x05
     db0:	12 96       	adiw	r26, 0x02	; 2
     db2:	9c 93       	st	X, r25
     db4:	8e 93       	st	-X, r24
     db6:	11 97       	sbiw	r26, 0x01	; 1
     db8:	11 86       	std	Z+9, r1	; 0x09
     dba:	10 86       	std	Z+8, r1	; 0x08
     dbc:	8c 91       	ld	r24, X
     dbe:	81 50       	subi	r24, 0x01	; 1
     dc0:	8c 93       	st	X, r24
     dc2:	8c 91       	ld	r24, X
     dc4:	df 91       	pop	r29
     dc6:	cf 91       	pop	r28
     dc8:	08 95       	ret

00000dca <prvSetupTimerInterrupt>:
     dca:	1b bc       	out	0x2b, r1	; 43
     dcc:	89 ef       	ldi	r24, 0xF9	; 249
     dce:	8a bd       	out	0x2a, r24	; 42
     dd0:	8b e0       	ldi	r24, 0x0B	; 11
     dd2:	8e bd       	out	0x2e, r24	; 46
     dd4:	89 b7       	in	r24, 0x39	; 57
     dd6:	80 61       	ori	r24, 0x10	; 16
     dd8:	89 bf       	out	0x39, r24	; 57
     dda:	08 95       	ret

00000ddc <pxPortInitialiseStack>:
     ddc:	31 e1       	ldi	r19, 0x11	; 17
     dde:	fc 01       	movw	r30, r24
     de0:	30 83       	st	Z, r19
     de2:	31 97       	sbiw	r30, 0x01	; 1
     de4:	22 e2       	ldi	r18, 0x22	; 34
     de6:	20 83       	st	Z, r18
     de8:	31 97       	sbiw	r30, 0x01	; 1
     dea:	a3 e3       	ldi	r26, 0x33	; 51
     dec:	a0 83       	st	Z, r26
     dee:	31 97       	sbiw	r30, 0x01	; 1
     df0:	60 83       	st	Z, r22
     df2:	31 97       	sbiw	r30, 0x01	; 1
     df4:	70 83       	st	Z, r23
     df6:	31 97       	sbiw	r30, 0x01	; 1
     df8:	10 82       	st	Z, r1
     dfa:	31 97       	sbiw	r30, 0x01	; 1
     dfc:	60 e8       	ldi	r22, 0x80	; 128
     dfe:	60 83       	st	Z, r22
     e00:	31 97       	sbiw	r30, 0x01	; 1
     e02:	10 82       	st	Z, r1
     e04:	31 97       	sbiw	r30, 0x01	; 1
     e06:	62 e0       	ldi	r22, 0x02	; 2
     e08:	60 83       	st	Z, r22
     e0a:	31 97       	sbiw	r30, 0x01	; 1
     e0c:	63 e0       	ldi	r22, 0x03	; 3
     e0e:	60 83       	st	Z, r22
     e10:	31 97       	sbiw	r30, 0x01	; 1
     e12:	64 e0       	ldi	r22, 0x04	; 4
     e14:	60 83       	st	Z, r22
     e16:	31 97       	sbiw	r30, 0x01	; 1
     e18:	65 e0       	ldi	r22, 0x05	; 5
     e1a:	60 83       	st	Z, r22
     e1c:	31 97       	sbiw	r30, 0x01	; 1
     e1e:	66 e0       	ldi	r22, 0x06	; 6
     e20:	60 83       	st	Z, r22
     e22:	31 97       	sbiw	r30, 0x01	; 1
     e24:	67 e0       	ldi	r22, 0x07	; 7
     e26:	60 83       	st	Z, r22
     e28:	31 97       	sbiw	r30, 0x01	; 1
     e2a:	68 e0       	ldi	r22, 0x08	; 8
     e2c:	60 83       	st	Z, r22
     e2e:	31 97       	sbiw	r30, 0x01	; 1
     e30:	69 e0       	ldi	r22, 0x09	; 9
     e32:	60 83       	st	Z, r22
     e34:	31 97       	sbiw	r30, 0x01	; 1
     e36:	60 e1       	ldi	r22, 0x10	; 16
     e38:	60 83       	st	Z, r22
     e3a:	31 97       	sbiw	r30, 0x01	; 1
     e3c:	30 83       	st	Z, r19
     e3e:	31 97       	sbiw	r30, 0x01	; 1
     e40:	32 e1       	ldi	r19, 0x12	; 18
     e42:	30 83       	st	Z, r19
     e44:	31 97       	sbiw	r30, 0x01	; 1
     e46:	33 e1       	ldi	r19, 0x13	; 19
     e48:	30 83       	st	Z, r19
     e4a:	31 97       	sbiw	r30, 0x01	; 1
     e4c:	34 e1       	ldi	r19, 0x14	; 20
     e4e:	30 83       	st	Z, r19
     e50:	31 97       	sbiw	r30, 0x01	; 1
     e52:	35 e1       	ldi	r19, 0x15	; 21
     e54:	30 83       	st	Z, r19
     e56:	31 97       	sbiw	r30, 0x01	; 1
     e58:	36 e1       	ldi	r19, 0x16	; 22
     e5a:	30 83       	st	Z, r19
     e5c:	31 97       	sbiw	r30, 0x01	; 1
     e5e:	37 e1       	ldi	r19, 0x17	; 23
     e60:	30 83       	st	Z, r19
     e62:	31 97       	sbiw	r30, 0x01	; 1
     e64:	38 e1       	ldi	r19, 0x18	; 24
     e66:	30 83       	st	Z, r19
     e68:	31 97       	sbiw	r30, 0x01	; 1
     e6a:	39 e1       	ldi	r19, 0x19	; 25
     e6c:	30 83       	st	Z, r19
     e6e:	31 97       	sbiw	r30, 0x01	; 1
     e70:	30 e2       	ldi	r19, 0x20	; 32
     e72:	30 83       	st	Z, r19
     e74:	31 97       	sbiw	r30, 0x01	; 1
     e76:	31 e2       	ldi	r19, 0x21	; 33
     e78:	30 83       	st	Z, r19
     e7a:	31 97       	sbiw	r30, 0x01	; 1
     e7c:	20 83       	st	Z, r18
     e7e:	31 97       	sbiw	r30, 0x01	; 1
     e80:	23 e2       	ldi	r18, 0x23	; 35
     e82:	20 83       	st	Z, r18
     e84:	31 97       	sbiw	r30, 0x01	; 1
     e86:	40 83       	st	Z, r20
     e88:	31 97       	sbiw	r30, 0x01	; 1
     e8a:	50 83       	st	Z, r21
     e8c:	31 97       	sbiw	r30, 0x01	; 1
     e8e:	26 e2       	ldi	r18, 0x26	; 38
     e90:	20 83       	st	Z, r18
     e92:	31 97       	sbiw	r30, 0x01	; 1
     e94:	27 e2       	ldi	r18, 0x27	; 39
     e96:	20 83       	st	Z, r18
     e98:	31 97       	sbiw	r30, 0x01	; 1
     e9a:	28 e2       	ldi	r18, 0x28	; 40
     e9c:	20 83       	st	Z, r18
     e9e:	31 97       	sbiw	r30, 0x01	; 1
     ea0:	29 e2       	ldi	r18, 0x29	; 41
     ea2:	20 83       	st	Z, r18
     ea4:	31 97       	sbiw	r30, 0x01	; 1
     ea6:	20 e3       	ldi	r18, 0x30	; 48
     ea8:	20 83       	st	Z, r18
     eaa:	31 97       	sbiw	r30, 0x01	; 1
     eac:	21 e3       	ldi	r18, 0x31	; 49
     eae:	20 83       	st	Z, r18
     eb0:	86 97       	sbiw	r24, 0x26	; 38
     eb2:	08 95       	ret

00000eb4 <xPortStartScheduler>:
     eb4:	0e 94 e5 06 	call	0xdca	; 0xdca <prvSetupTimerInterrupt>
     eb8:	a0 91 51 07 	lds	r26, 0x0751	; 0x800751 <pxCurrentTCB>
     ebc:	b0 91 52 07 	lds	r27, 0x0752	; 0x800752 <pxCurrentTCB+0x1>
     ec0:	cd 91       	ld	r28, X+
     ec2:	cd bf       	out	0x3d, r28	; 61
     ec4:	dd 91       	ld	r29, X+
     ec6:	de bf       	out	0x3e, r29	; 62
     ec8:	ff 91       	pop	r31
     eca:	ef 91       	pop	r30
     ecc:	df 91       	pop	r29
     ece:	cf 91       	pop	r28
     ed0:	bf 91       	pop	r27
     ed2:	af 91       	pop	r26
     ed4:	9f 91       	pop	r25
     ed6:	8f 91       	pop	r24
     ed8:	7f 91       	pop	r23
     eda:	6f 91       	pop	r22
     edc:	5f 91       	pop	r21
     ede:	4f 91       	pop	r20
     ee0:	3f 91       	pop	r19
     ee2:	2f 91       	pop	r18
     ee4:	1f 91       	pop	r17
     ee6:	0f 91       	pop	r16
     ee8:	ff 90       	pop	r15
     eea:	ef 90       	pop	r14
     eec:	df 90       	pop	r13
     eee:	cf 90       	pop	r12
     ef0:	bf 90       	pop	r11
     ef2:	af 90       	pop	r10
     ef4:	9f 90       	pop	r9
     ef6:	8f 90       	pop	r8
     ef8:	7f 90       	pop	r7
     efa:	6f 90       	pop	r6
     efc:	5f 90       	pop	r5
     efe:	4f 90       	pop	r4
     f00:	3f 90       	pop	r3
     f02:	2f 90       	pop	r2
     f04:	1f 90       	pop	r1
     f06:	0f 90       	pop	r0
     f08:	0f be       	out	0x3f, r0	; 63
     f0a:	0f 90       	pop	r0
     f0c:	08 95       	ret
     f0e:	81 e0       	ldi	r24, 0x01	; 1
     f10:	08 95       	ret

00000f12 <vPortYield>:
     f12:	0f 92       	push	r0
     f14:	0f b6       	in	r0, 0x3f	; 63
     f16:	f8 94       	cli
     f18:	0f 92       	push	r0
     f1a:	1f 92       	push	r1
     f1c:	11 24       	eor	r1, r1
     f1e:	2f 92       	push	r2
     f20:	3f 92       	push	r3
     f22:	4f 92       	push	r4
     f24:	5f 92       	push	r5
     f26:	6f 92       	push	r6
     f28:	7f 92       	push	r7
     f2a:	8f 92       	push	r8
     f2c:	9f 92       	push	r9
     f2e:	af 92       	push	r10
     f30:	bf 92       	push	r11
     f32:	cf 92       	push	r12
     f34:	df 92       	push	r13
     f36:	ef 92       	push	r14
     f38:	ff 92       	push	r15
     f3a:	0f 93       	push	r16
     f3c:	1f 93       	push	r17
     f3e:	2f 93       	push	r18
     f40:	3f 93       	push	r19
     f42:	4f 93       	push	r20
     f44:	5f 93       	push	r21
     f46:	6f 93       	push	r22
     f48:	7f 93       	push	r23
     f4a:	8f 93       	push	r24
     f4c:	9f 93       	push	r25
     f4e:	af 93       	push	r26
     f50:	bf 93       	push	r27
     f52:	cf 93       	push	r28
     f54:	df 93       	push	r29
     f56:	ef 93       	push	r30
     f58:	ff 93       	push	r31
     f5a:	a0 91 51 07 	lds	r26, 0x0751	; 0x800751 <pxCurrentTCB>
     f5e:	b0 91 52 07 	lds	r27, 0x0752	; 0x800752 <pxCurrentTCB+0x1>
     f62:	0d b6       	in	r0, 0x3d	; 61
     f64:	0d 92       	st	X+, r0
     f66:	0e b6       	in	r0, 0x3e	; 62
     f68:	0d 92       	st	X+, r0
     f6a:	0e 94 0e 0e 	call	0x1c1c	; 0x1c1c <vTaskSwitchContext>
     f6e:	a0 91 51 07 	lds	r26, 0x0751	; 0x800751 <pxCurrentTCB>
     f72:	b0 91 52 07 	lds	r27, 0x0752	; 0x800752 <pxCurrentTCB+0x1>
     f76:	cd 91       	ld	r28, X+
     f78:	cd bf       	out	0x3d, r28	; 61
     f7a:	dd 91       	ld	r29, X+
     f7c:	de bf       	out	0x3e, r29	; 62
     f7e:	ff 91       	pop	r31
     f80:	ef 91       	pop	r30
     f82:	df 91       	pop	r29
     f84:	cf 91       	pop	r28
     f86:	bf 91       	pop	r27
     f88:	af 91       	pop	r26
     f8a:	9f 91       	pop	r25
     f8c:	8f 91       	pop	r24
     f8e:	7f 91       	pop	r23
     f90:	6f 91       	pop	r22
     f92:	5f 91       	pop	r21
     f94:	4f 91       	pop	r20
     f96:	3f 91       	pop	r19
     f98:	2f 91       	pop	r18
     f9a:	1f 91       	pop	r17
     f9c:	0f 91       	pop	r16
     f9e:	ff 90       	pop	r15
     fa0:	ef 90       	pop	r14
     fa2:	df 90       	pop	r13
     fa4:	cf 90       	pop	r12
     fa6:	bf 90       	pop	r11
     fa8:	af 90       	pop	r10
     faa:	9f 90       	pop	r9
     fac:	8f 90       	pop	r8
     fae:	7f 90       	pop	r7
     fb0:	6f 90       	pop	r6
     fb2:	5f 90       	pop	r5
     fb4:	4f 90       	pop	r4
     fb6:	3f 90       	pop	r3
     fb8:	2f 90       	pop	r2
     fba:	1f 90       	pop	r1
     fbc:	0f 90       	pop	r0
     fbe:	0f be       	out	0x3f, r0	; 63
     fc0:	0f 90       	pop	r0
     fc2:	08 95       	ret

00000fc4 <vPortYieldFromTick>:
     fc4:	0f 92       	push	r0
     fc6:	0f b6       	in	r0, 0x3f	; 63
     fc8:	f8 94       	cli
     fca:	0f 92       	push	r0
     fcc:	1f 92       	push	r1
     fce:	11 24       	eor	r1, r1
     fd0:	2f 92       	push	r2
     fd2:	3f 92       	push	r3
     fd4:	4f 92       	push	r4
     fd6:	5f 92       	push	r5
     fd8:	6f 92       	push	r6
     fda:	7f 92       	push	r7
     fdc:	8f 92       	push	r8
     fde:	9f 92       	push	r9
     fe0:	af 92       	push	r10
     fe2:	bf 92       	push	r11
     fe4:	cf 92       	push	r12
     fe6:	df 92       	push	r13
     fe8:	ef 92       	push	r14
     fea:	ff 92       	push	r15
     fec:	0f 93       	push	r16
     fee:	1f 93       	push	r17
     ff0:	2f 93       	push	r18
     ff2:	3f 93       	push	r19
     ff4:	4f 93       	push	r20
     ff6:	5f 93       	push	r21
     ff8:	6f 93       	push	r22
     ffa:	7f 93       	push	r23
     ffc:	8f 93       	push	r24
     ffe:	9f 93       	push	r25
    1000:	af 93       	push	r26
    1002:	bf 93       	push	r27
    1004:	cf 93       	push	r28
    1006:	df 93       	push	r29
    1008:	ef 93       	push	r30
    100a:	ff 93       	push	r31
    100c:	a0 91 51 07 	lds	r26, 0x0751	; 0x800751 <pxCurrentTCB>
    1010:	b0 91 52 07 	lds	r27, 0x0752	; 0x800752 <pxCurrentTCB+0x1>
    1014:	0d b6       	in	r0, 0x3d	; 61
    1016:	0d 92       	st	X+, r0
    1018:	0e b6       	in	r0, 0x3e	; 62
    101a:	0d 92       	st	X+, r0
    101c:	0e 94 cc 0c 	call	0x1998	; 0x1998 <xTaskIncrementTick>
    1020:	81 11       	cpse	r24, r1
    1022:	0e 94 0e 0e 	call	0x1c1c	; 0x1c1c <vTaskSwitchContext>
    1026:	a0 91 51 07 	lds	r26, 0x0751	; 0x800751 <pxCurrentTCB>
    102a:	b0 91 52 07 	lds	r27, 0x0752	; 0x800752 <pxCurrentTCB+0x1>
    102e:	cd 91       	ld	r28, X+
    1030:	cd bf       	out	0x3d, r28	; 61
    1032:	dd 91       	ld	r29, X+
    1034:	de bf       	out	0x3e, r29	; 62
    1036:	ff 91       	pop	r31
    1038:	ef 91       	pop	r30
    103a:	df 91       	pop	r29
    103c:	cf 91       	pop	r28
    103e:	bf 91       	pop	r27
    1040:	af 91       	pop	r26
    1042:	9f 91       	pop	r25
    1044:	8f 91       	pop	r24
    1046:	7f 91       	pop	r23
    1048:	6f 91       	pop	r22
    104a:	5f 91       	pop	r21
    104c:	4f 91       	pop	r20
    104e:	3f 91       	pop	r19
    1050:	2f 91       	pop	r18
    1052:	1f 91       	pop	r17
    1054:	0f 91       	pop	r16
    1056:	ff 90       	pop	r15
    1058:	ef 90       	pop	r14
    105a:	df 90       	pop	r13
    105c:	cf 90       	pop	r12
    105e:	bf 90       	pop	r11
    1060:	af 90       	pop	r10
    1062:	9f 90       	pop	r9
    1064:	8f 90       	pop	r8
    1066:	7f 90       	pop	r7
    1068:	6f 90       	pop	r6
    106a:	5f 90       	pop	r5
    106c:	4f 90       	pop	r4
    106e:	3f 90       	pop	r3
    1070:	2f 90       	pop	r2
    1072:	1f 90       	pop	r1
    1074:	0f 90       	pop	r0
    1076:	0f be       	out	0x3f, r0	; 63
    1078:	0f 90       	pop	r0
    107a:	08 95       	ret

0000107c <__vector_7>:
    107c:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <vPortYieldFromTick>
    1080:	18 95       	reti

00001082 <prvIsQueueEmpty>:
    1082:	0f b6       	in	r0, 0x3f	; 63
    1084:	f8 94       	cli
    1086:	0f 92       	push	r0
    1088:	fc 01       	movw	r30, r24
    108a:	82 8d       	ldd	r24, Z+26	; 0x1a
    108c:	81 11       	cpse	r24, r1
    108e:	02 c0       	rjmp	.+4      	; 0x1094 <prvIsQueueEmpty+0x12>
    1090:	81 e0       	ldi	r24, 0x01	; 1
    1092:	01 c0       	rjmp	.+2      	; 0x1096 <prvIsQueueEmpty+0x14>
    1094:	80 e0       	ldi	r24, 0x00	; 0
    1096:	0f 90       	pop	r0
    1098:	0f be       	out	0x3f, r0	; 63
    109a:	08 95       	ret

0000109c <prvIsQueueFull>:
    109c:	0f b6       	in	r0, 0x3f	; 63
    109e:	f8 94       	cli
    10a0:	0f 92       	push	r0
    10a2:	fc 01       	movw	r30, r24
    10a4:	22 8d       	ldd	r18, Z+26	; 0x1a
    10a6:	83 8d       	ldd	r24, Z+27	; 0x1b
    10a8:	28 13       	cpse	r18, r24
    10aa:	02 c0       	rjmp	.+4      	; 0x10b0 <prvIsQueueFull+0x14>
    10ac:	81 e0       	ldi	r24, 0x01	; 1
    10ae:	01 c0       	rjmp	.+2      	; 0x10b2 <prvIsQueueFull+0x16>
    10b0:	80 e0       	ldi	r24, 0x00	; 0
    10b2:	0f 90       	pop	r0
    10b4:	0f be       	out	0x3f, r0	; 63
    10b6:	08 95       	ret

000010b8 <prvCopyDataToQueue>:
    10b8:	0f 93       	push	r16
    10ba:	1f 93       	push	r17
    10bc:	cf 93       	push	r28
    10be:	df 93       	push	r29
    10c0:	ec 01       	movw	r28, r24
    10c2:	04 2f       	mov	r16, r20
    10c4:	1a 8d       	ldd	r17, Y+26	; 0x1a
    10c6:	4c 8d       	ldd	r20, Y+28	; 0x1c
    10c8:	44 23       	and	r20, r20
    10ca:	b9 f1       	breq	.+110    	; 0x113a <prvCopyDataToQueue+0x82>
    10cc:	01 11       	cpse	r16, r1
    10ce:	16 c0       	rjmp	.+44     	; 0x10fc <prvCopyDataToQueue+0x44>
    10d0:	50 e0       	ldi	r21, 0x00	; 0
    10d2:	8a 81       	ldd	r24, Y+2	; 0x02
    10d4:	9b 81       	ldd	r25, Y+3	; 0x03
    10d6:	0e 94 c0 0f 	call	0x1f80	; 0x1f80 <memcpy>
    10da:	2c 8d       	ldd	r18, Y+28	; 0x1c
    10dc:	8a 81       	ldd	r24, Y+2	; 0x02
    10de:	9b 81       	ldd	r25, Y+3	; 0x03
    10e0:	82 0f       	add	r24, r18
    10e2:	91 1d       	adc	r25, r1
    10e4:	9b 83       	std	Y+3, r25	; 0x03
    10e6:	8a 83       	std	Y+2, r24	; 0x02
    10e8:	2c 81       	ldd	r18, Y+4	; 0x04
    10ea:	3d 81       	ldd	r19, Y+5	; 0x05
    10ec:	82 17       	cp	r24, r18
    10ee:	93 07       	cpc	r25, r19
    10f0:	20 f1       	brcs	.+72     	; 0x113a <prvCopyDataToQueue+0x82>
    10f2:	88 81       	ld	r24, Y
    10f4:	99 81       	ldd	r25, Y+1	; 0x01
    10f6:	9b 83       	std	Y+3, r25	; 0x03
    10f8:	8a 83       	std	Y+2, r24	; 0x02
    10fa:	1f c0       	rjmp	.+62     	; 0x113a <prvCopyDataToQueue+0x82>
    10fc:	50 e0       	ldi	r21, 0x00	; 0
    10fe:	8e 81       	ldd	r24, Y+6	; 0x06
    1100:	9f 81       	ldd	r25, Y+7	; 0x07
    1102:	0e 94 c0 0f 	call	0x1f80	; 0x1f80 <memcpy>
    1106:	8c 8d       	ldd	r24, Y+28	; 0x1c
    1108:	90 e0       	ldi	r25, 0x00	; 0
    110a:	91 95       	neg	r25
    110c:	81 95       	neg	r24
    110e:	91 09       	sbc	r25, r1
    1110:	2e 81       	ldd	r18, Y+6	; 0x06
    1112:	3f 81       	ldd	r19, Y+7	; 0x07
    1114:	28 0f       	add	r18, r24
    1116:	39 1f       	adc	r19, r25
    1118:	3f 83       	std	Y+7, r19	; 0x07
    111a:	2e 83       	std	Y+6, r18	; 0x06
    111c:	48 81       	ld	r20, Y
    111e:	59 81       	ldd	r21, Y+1	; 0x01
    1120:	24 17       	cp	r18, r20
    1122:	35 07       	cpc	r19, r21
    1124:	30 f4       	brcc	.+12     	; 0x1132 <prvCopyDataToQueue+0x7a>
    1126:	2c 81       	ldd	r18, Y+4	; 0x04
    1128:	3d 81       	ldd	r19, Y+5	; 0x05
    112a:	82 0f       	add	r24, r18
    112c:	93 1f       	adc	r25, r19
    112e:	9f 83       	std	Y+7, r25	; 0x07
    1130:	8e 83       	std	Y+6, r24	; 0x06
    1132:	02 30       	cpi	r16, 0x02	; 2
    1134:	11 f4       	brne	.+4      	; 0x113a <prvCopyDataToQueue+0x82>
    1136:	11 11       	cpse	r17, r1
    1138:	11 50       	subi	r17, 0x01	; 1
    113a:	1f 5f       	subi	r17, 0xFF	; 255
    113c:	1a 8f       	std	Y+26, r17	; 0x1a
    113e:	80 e0       	ldi	r24, 0x00	; 0
    1140:	df 91       	pop	r29
    1142:	cf 91       	pop	r28
    1144:	1f 91       	pop	r17
    1146:	0f 91       	pop	r16
    1148:	08 95       	ret

0000114a <prvCopyDataFromQueue>:
    114a:	fc 01       	movw	r30, r24
    114c:	44 8d       	ldd	r20, Z+28	; 0x1c
    114e:	44 23       	and	r20, r20
    1150:	a9 f0       	breq	.+42     	; 0x117c <prvCopyDataFromQueue+0x32>
    1152:	50 e0       	ldi	r21, 0x00	; 0
    1154:	26 81       	ldd	r18, Z+6	; 0x06
    1156:	37 81       	ldd	r19, Z+7	; 0x07
    1158:	24 0f       	add	r18, r20
    115a:	35 1f       	adc	r19, r21
    115c:	37 83       	std	Z+7, r19	; 0x07
    115e:	26 83       	std	Z+6, r18	; 0x06
    1160:	84 81       	ldd	r24, Z+4	; 0x04
    1162:	95 81       	ldd	r25, Z+5	; 0x05
    1164:	28 17       	cp	r18, r24
    1166:	39 07       	cpc	r19, r25
    1168:	20 f0       	brcs	.+8      	; 0x1172 <prvCopyDataFromQueue+0x28>
    116a:	80 81       	ld	r24, Z
    116c:	91 81       	ldd	r25, Z+1	; 0x01
    116e:	97 83       	std	Z+7, r25	; 0x07
    1170:	86 83       	std	Z+6, r24	; 0x06
    1172:	cb 01       	movw	r24, r22
    1174:	66 81       	ldd	r22, Z+6	; 0x06
    1176:	77 81       	ldd	r23, Z+7	; 0x07
    1178:	0e 94 c0 0f 	call	0x1f80	; 0x1f80 <memcpy>
    117c:	08 95       	ret

0000117e <prvUnlockQueue>:
    117e:	1f 93       	push	r17
    1180:	cf 93       	push	r28
    1182:	df 93       	push	r29
    1184:	ec 01       	movw	r28, r24
    1186:	0f b6       	in	r0, 0x3f	; 63
    1188:	f8 94       	cli
    118a:	0f 92       	push	r0
    118c:	1e 8d       	ldd	r17, Y+30	; 0x1e
    118e:	0b c0       	rjmp	.+22     	; 0x11a6 <prvUnlockQueue+0x28>
    1190:	89 89       	ldd	r24, Y+17	; 0x11
    1192:	88 23       	and	r24, r24
    1194:	51 f0       	breq	.+20     	; 0x11aa <prvUnlockQueue+0x2c>
    1196:	ce 01       	movw	r24, r28
    1198:	41 96       	adiw	r24, 0x11	; 17
    119a:	0e 94 c6 0e 	call	0x1d8c	; 0x1d8c <xTaskRemoveFromEventList>
    119e:	81 11       	cpse	r24, r1
    11a0:	0e 94 55 0f 	call	0x1eaa	; 0x1eaa <vTaskMissedYield>
    11a4:	11 50       	subi	r17, 0x01	; 1
    11a6:	11 16       	cp	r1, r17
    11a8:	9c f3       	brlt	.-26     	; 0x1190 <prvUnlockQueue+0x12>
    11aa:	8f ef       	ldi	r24, 0xFF	; 255
    11ac:	8e 8f       	std	Y+30, r24	; 0x1e
    11ae:	0f 90       	pop	r0
    11b0:	0f be       	out	0x3f, r0	; 63
    11b2:	0f b6       	in	r0, 0x3f	; 63
    11b4:	f8 94       	cli
    11b6:	0f 92       	push	r0
    11b8:	1d 8d       	ldd	r17, Y+29	; 0x1d
    11ba:	0b c0       	rjmp	.+22     	; 0x11d2 <prvUnlockQueue+0x54>
    11bc:	88 85       	ldd	r24, Y+8	; 0x08
    11be:	88 23       	and	r24, r24
    11c0:	51 f0       	breq	.+20     	; 0x11d6 <prvUnlockQueue+0x58>
    11c2:	ce 01       	movw	r24, r28
    11c4:	08 96       	adiw	r24, 0x08	; 8
    11c6:	0e 94 c6 0e 	call	0x1d8c	; 0x1d8c <xTaskRemoveFromEventList>
    11ca:	81 11       	cpse	r24, r1
    11cc:	0e 94 55 0f 	call	0x1eaa	; 0x1eaa <vTaskMissedYield>
    11d0:	11 50       	subi	r17, 0x01	; 1
    11d2:	11 16       	cp	r1, r17
    11d4:	9c f3       	brlt	.-26     	; 0x11bc <prvUnlockQueue+0x3e>
    11d6:	8f ef       	ldi	r24, 0xFF	; 255
    11d8:	8d 8f       	std	Y+29, r24	; 0x1d
    11da:	0f 90       	pop	r0
    11dc:	0f be       	out	0x3f, r0	; 63
    11de:	df 91       	pop	r29
    11e0:	cf 91       	pop	r28
    11e2:	1f 91       	pop	r17
    11e4:	08 95       	ret

000011e6 <xQueueGenericReset>:
    11e6:	cf 93       	push	r28
    11e8:	df 93       	push	r29
    11ea:	ec 01       	movw	r28, r24
    11ec:	0f b6       	in	r0, 0x3f	; 63
    11ee:	f8 94       	cli
    11f0:	0f 92       	push	r0
    11f2:	e8 81       	ld	r30, Y
    11f4:	f9 81       	ldd	r31, Y+1	; 0x01
    11f6:	8b 8d       	ldd	r24, Y+27	; 0x1b
    11f8:	2c 8d       	ldd	r18, Y+28	; 0x1c
    11fa:	90 e0       	ldi	r25, 0x00	; 0
    11fc:	30 e0       	ldi	r19, 0x00	; 0
    11fe:	82 9f       	mul	r24, r18
    1200:	a0 01       	movw	r20, r0
    1202:	83 9f       	mul	r24, r19
    1204:	50 0d       	add	r21, r0
    1206:	92 9f       	mul	r25, r18
    1208:	50 0d       	add	r21, r0
    120a:	11 24       	eor	r1, r1
    120c:	4e 0f       	add	r20, r30
    120e:	5f 1f       	adc	r21, r31
    1210:	5d 83       	std	Y+5, r21	; 0x05
    1212:	4c 83       	std	Y+4, r20	; 0x04
    1214:	1a 8e       	std	Y+26, r1	; 0x1a
    1216:	fb 83       	std	Y+3, r31	; 0x03
    1218:	ea 83       	std	Y+2, r30	; 0x02
    121a:	01 97       	sbiw	r24, 0x01	; 1
    121c:	28 9f       	mul	r18, r24
    121e:	a0 01       	movw	r20, r0
    1220:	29 9f       	mul	r18, r25
    1222:	50 0d       	add	r21, r0
    1224:	38 9f       	mul	r19, r24
    1226:	50 0d       	add	r21, r0
    1228:	11 24       	eor	r1, r1
    122a:	cf 01       	movw	r24, r30
    122c:	84 0f       	add	r24, r20
    122e:	95 1f       	adc	r25, r21
    1230:	9f 83       	std	Y+7, r25	; 0x07
    1232:	8e 83       	std	Y+6, r24	; 0x06
    1234:	8f ef       	ldi	r24, 0xFF	; 255
    1236:	8d 8f       	std	Y+29, r24	; 0x1d
    1238:	8e 8f       	std	Y+30, r24	; 0x1e
    123a:	61 11       	cpse	r22, r1
    123c:	0c c0       	rjmp	.+24     	; 0x1256 <xQueueGenericReset+0x70>
    123e:	88 85       	ldd	r24, Y+8	; 0x08
    1240:	88 23       	and	r24, r24
    1242:	89 f0       	breq	.+34     	; 0x1266 <xQueueGenericReset+0x80>
    1244:	ce 01       	movw	r24, r28
    1246:	08 96       	adiw	r24, 0x08	; 8
    1248:	0e 94 c6 0e 	call	0x1d8c	; 0x1d8c <xTaskRemoveFromEventList>
    124c:	88 23       	and	r24, r24
    124e:	59 f0       	breq	.+22     	; 0x1266 <xQueueGenericReset+0x80>
    1250:	0e 94 89 07 	call	0xf12	; 0xf12 <vPortYield>
    1254:	08 c0       	rjmp	.+16     	; 0x1266 <xQueueGenericReset+0x80>
    1256:	ce 01       	movw	r24, r28
    1258:	08 96       	adiw	r24, 0x08	; 8
    125a:	0e 94 5a 06 	call	0xcb4	; 0xcb4 <vListInitialise>
    125e:	ce 01       	movw	r24, r28
    1260:	41 96       	adiw	r24, 0x11	; 17
    1262:	0e 94 5a 06 	call	0xcb4	; 0xcb4 <vListInitialise>
    1266:	0f 90       	pop	r0
    1268:	0f be       	out	0x3f, r0	; 63
    126a:	81 e0       	ldi	r24, 0x01	; 1
    126c:	df 91       	pop	r29
    126e:	cf 91       	pop	r28
    1270:	08 95       	ret

00001272 <prvInitialiseNewQueue>:
    1272:	0f 93       	push	r16
    1274:	1f 93       	push	r17
    1276:	f8 01       	movw	r30, r16
    1278:	61 11       	cpse	r22, r1
    127a:	03 c0       	rjmp	.+6      	; 0x1282 <prvInitialiseNewQueue+0x10>
    127c:	11 83       	std	Z+1, r17	; 0x01
    127e:	00 83       	st	Z, r16
    1280:	02 c0       	rjmp	.+4      	; 0x1286 <prvInitialiseNewQueue+0x14>
    1282:	51 83       	std	Z+1, r21	; 0x01
    1284:	40 83       	st	Z, r20
    1286:	83 8f       	std	Z+27, r24	; 0x1b
    1288:	64 8f       	std	Z+28, r22	; 0x1c
    128a:	61 e0       	ldi	r22, 0x01	; 1
    128c:	cf 01       	movw	r24, r30
    128e:	0e 94 f3 08 	call	0x11e6	; 0x11e6 <xQueueGenericReset>
    1292:	1f 91       	pop	r17
    1294:	0f 91       	pop	r16
    1296:	08 95       	ret

00001298 <xQueueGenericCreate>:
    1298:	df 92       	push	r13
    129a:	ef 92       	push	r14
    129c:	ff 92       	push	r15
    129e:	0f 93       	push	r16
    12a0:	1f 93       	push	r17
    12a2:	cf 93       	push	r28
    12a4:	df 93       	push	r29
    12a6:	e8 2e       	mov	r14, r24
    12a8:	f6 2e       	mov	r15, r22
    12aa:	d4 2e       	mov	r13, r20
    12ac:	66 23       	and	r22, r22
    12ae:	21 f0       	breq	.+8      	; 0x12b8 <xQueueGenericCreate+0x20>
    12b0:	86 9f       	mul	r24, r22
    12b2:	c0 01       	movw	r24, r0
    12b4:	11 24       	eor	r1, r1
    12b6:	02 c0       	rjmp	.+4      	; 0x12bc <xQueueGenericCreate+0x24>
    12b8:	80 e0       	ldi	r24, 0x00	; 0
    12ba:	90 e0       	ldi	r25, 0x00	; 0
    12bc:	4f 96       	adiw	r24, 0x1f	; 31
    12be:	0e 94 24 06 	call	0xc48	; 0xc48 <pvPortMalloc>
    12c2:	ec 01       	movw	r28, r24
    12c4:	00 97       	sbiw	r24, 0x00	; 0
    12c6:	49 f0       	breq	.+18     	; 0x12da <xQueueGenericCreate+0x42>
    12c8:	8c 01       	movw	r16, r24
    12ca:	2d 2d       	mov	r18, r13
    12cc:	ac 01       	movw	r20, r24
    12ce:	41 5e       	subi	r20, 0xE1	; 225
    12d0:	5f 4f       	sbci	r21, 0xFF	; 255
    12d2:	6f 2d       	mov	r22, r15
    12d4:	8e 2d       	mov	r24, r14
    12d6:	0e 94 39 09 	call	0x1272	; 0x1272 <prvInitialiseNewQueue>
    12da:	ce 01       	movw	r24, r28
    12dc:	df 91       	pop	r29
    12de:	cf 91       	pop	r28
    12e0:	1f 91       	pop	r17
    12e2:	0f 91       	pop	r16
    12e4:	ff 90       	pop	r15
    12e6:	ef 90       	pop	r14
    12e8:	df 90       	pop	r13
    12ea:	08 95       	ret

000012ec <xQueueGenericSend>:
    12ec:	cf 92       	push	r12
    12ee:	df 92       	push	r13
    12f0:	ef 92       	push	r14
    12f2:	ff 92       	push	r15
    12f4:	0f 93       	push	r16
    12f6:	1f 93       	push	r17
    12f8:	cf 93       	push	r28
    12fa:	df 93       	push	r29
    12fc:	00 d0       	rcall	.+0      	; 0x12fe <xQueueGenericSend+0x12>
    12fe:	00 d0       	rcall	.+0      	; 0x1300 <xQueueGenericSend+0x14>
    1300:	1f 92       	push	r1
    1302:	cd b7       	in	r28, 0x3d	; 61
    1304:	de b7       	in	r29, 0x3e	; 62
    1306:	8c 01       	movw	r16, r24
    1308:	7b 01       	movw	r14, r22
    130a:	5d 83       	std	Y+5, r21	; 0x05
    130c:	4c 83       	std	Y+4, r20	; 0x04
    130e:	c2 2e       	mov	r12, r18
    1310:	d1 2c       	mov	r13, r1
    1312:	0f b6       	in	r0, 0x3f	; 63
    1314:	f8 94       	cli
    1316:	0f 92       	push	r0
    1318:	f8 01       	movw	r30, r16
    131a:	92 8d       	ldd	r25, Z+26	; 0x1a
    131c:	83 8d       	ldd	r24, Z+27	; 0x1b
    131e:	98 17       	cp	r25, r24
    1320:	18 f0       	brcs	.+6      	; 0x1328 <xQueueGenericSend+0x3c>
    1322:	f2 e0       	ldi	r31, 0x02	; 2
    1324:	cf 12       	cpse	r12, r31
    1326:	19 c0       	rjmp	.+50     	; 0x135a <xQueueGenericSend+0x6e>
    1328:	4c 2d       	mov	r20, r12
    132a:	b7 01       	movw	r22, r14
    132c:	c8 01       	movw	r24, r16
    132e:	0e 94 5c 08 	call	0x10b8	; 0x10b8 <prvCopyDataToQueue>
    1332:	f8 01       	movw	r30, r16
    1334:	91 89       	ldd	r25, Z+17	; 0x11
    1336:	99 23       	and	r25, r25
    1338:	49 f0       	breq	.+18     	; 0x134c <xQueueGenericSend+0x60>
    133a:	c8 01       	movw	r24, r16
    133c:	41 96       	adiw	r24, 0x11	; 17
    133e:	0e 94 c6 0e 	call	0x1d8c	; 0x1d8c <xTaskRemoveFromEventList>
    1342:	88 23       	and	r24, r24
    1344:	31 f0       	breq	.+12     	; 0x1352 <xQueueGenericSend+0x66>
    1346:	0e 94 89 07 	call	0xf12	; 0xf12 <vPortYield>
    134a:	03 c0       	rjmp	.+6      	; 0x1352 <xQueueGenericSend+0x66>
    134c:	81 11       	cpse	r24, r1
    134e:	0e 94 89 07 	call	0xf12	; 0xf12 <vPortYield>
    1352:	0f 90       	pop	r0
    1354:	0f be       	out	0x3f, r0	; 63
    1356:	81 e0       	ldi	r24, 0x01	; 1
    1358:	4d c0       	rjmp	.+154    	; 0x13f4 <xQueueGenericSend+0x108>
    135a:	8c 81       	ldd	r24, Y+4	; 0x04
    135c:	9d 81       	ldd	r25, Y+5	; 0x05
    135e:	89 2b       	or	r24, r25
    1360:	21 f4       	brne	.+8      	; 0x136a <xQueueGenericSend+0x7e>
    1362:	0f 90       	pop	r0
    1364:	0f be       	out	0x3f, r0	; 63
    1366:	80 e0       	ldi	r24, 0x00	; 0
    1368:	45 c0       	rjmp	.+138    	; 0x13f4 <xQueueGenericSend+0x108>
    136a:	d1 10       	cpse	r13, r1
    136c:	06 c0       	rjmp	.+12     	; 0x137a <xQueueGenericSend+0x8e>
    136e:	ce 01       	movw	r24, r28
    1370:	01 96       	adiw	r24, 0x01	; 1
    1372:	0e 94 0e 0f 	call	0x1e1c	; 0x1e1c <vTaskInternalSetTimeOutState>
    1376:	dd 24       	eor	r13, r13
    1378:	d3 94       	inc	r13
    137a:	0f 90       	pop	r0
    137c:	0f be       	out	0x3f, r0	; 63
    137e:	0e 94 c6 0c 	call	0x198c	; 0x198c <vTaskSuspendAll>
    1382:	0f b6       	in	r0, 0x3f	; 63
    1384:	f8 94       	cli
    1386:	0f 92       	push	r0
    1388:	f8 01       	movw	r30, r16
    138a:	85 8d       	ldd	r24, Z+29	; 0x1d
    138c:	8f 3f       	cpi	r24, 0xFF	; 255
    138e:	09 f4       	brne	.+2      	; 0x1392 <xQueueGenericSend+0xa6>
    1390:	15 8e       	std	Z+29, r1	; 0x1d
    1392:	f8 01       	movw	r30, r16
    1394:	86 8d       	ldd	r24, Z+30	; 0x1e
    1396:	8f 3f       	cpi	r24, 0xFF	; 255
    1398:	09 f4       	brne	.+2      	; 0x139c <xQueueGenericSend+0xb0>
    139a:	16 8e       	std	Z+30, r1	; 0x1e
    139c:	0f 90       	pop	r0
    139e:	0f be       	out	0x3f, r0	; 63
    13a0:	be 01       	movw	r22, r28
    13a2:	6c 5f       	subi	r22, 0xFC	; 252
    13a4:	7f 4f       	sbci	r23, 0xFF	; 255
    13a6:	ce 01       	movw	r24, r28
    13a8:	01 96       	adiw	r24, 0x01	; 1
    13aa:	0e 94 19 0f 	call	0x1e32	; 0x1e32 <xTaskCheckForTimeOut>
    13ae:	81 11       	cpse	r24, r1
    13b0:	1b c0       	rjmp	.+54     	; 0x13e8 <xQueueGenericSend+0xfc>
    13b2:	c8 01       	movw	r24, r16
    13b4:	0e 94 4e 08 	call	0x109c	; 0x109c <prvIsQueueFull>
    13b8:	88 23       	and	r24, r24
    13ba:	81 f0       	breq	.+32     	; 0x13dc <xQueueGenericSend+0xf0>
    13bc:	6c 81       	ldd	r22, Y+4	; 0x04
    13be:	7d 81       	ldd	r23, Y+5	; 0x05
    13c0:	c8 01       	movw	r24, r16
    13c2:	08 96       	adiw	r24, 0x08	; 8
    13c4:	0e 94 b4 0e 	call	0x1d68	; 0x1d68 <vTaskPlaceOnEventList>
    13c8:	c8 01       	movw	r24, r16
    13ca:	0e 94 bf 08 	call	0x117e	; 0x117e <prvUnlockQueue>
    13ce:	0e 94 86 0d 	call	0x1b0c	; 0x1b0c <xTaskResumeAll>
    13d2:	81 11       	cpse	r24, r1
    13d4:	9e cf       	rjmp	.-196    	; 0x1312 <xQueueGenericSend+0x26>
    13d6:	0e 94 89 07 	call	0xf12	; 0xf12 <vPortYield>
    13da:	9b cf       	rjmp	.-202    	; 0x1312 <xQueueGenericSend+0x26>
    13dc:	c8 01       	movw	r24, r16
    13de:	0e 94 bf 08 	call	0x117e	; 0x117e <prvUnlockQueue>
    13e2:	0e 94 86 0d 	call	0x1b0c	; 0x1b0c <xTaskResumeAll>
    13e6:	95 cf       	rjmp	.-214    	; 0x1312 <xQueueGenericSend+0x26>
    13e8:	c8 01       	movw	r24, r16
    13ea:	0e 94 bf 08 	call	0x117e	; 0x117e <prvUnlockQueue>
    13ee:	0e 94 86 0d 	call	0x1b0c	; 0x1b0c <xTaskResumeAll>
    13f2:	80 e0       	ldi	r24, 0x00	; 0
    13f4:	0f 90       	pop	r0
    13f6:	0f 90       	pop	r0
    13f8:	0f 90       	pop	r0
    13fa:	0f 90       	pop	r0
    13fc:	0f 90       	pop	r0
    13fe:	df 91       	pop	r29
    1400:	cf 91       	pop	r28
    1402:	1f 91       	pop	r17
    1404:	0f 91       	pop	r16
    1406:	ff 90       	pop	r15
    1408:	ef 90       	pop	r14
    140a:	df 90       	pop	r13
    140c:	cf 90       	pop	r12
    140e:	08 95       	ret

00001410 <xQueueReceive>:
    1410:	cf 92       	push	r12
    1412:	df 92       	push	r13
    1414:	ef 92       	push	r14
    1416:	ff 92       	push	r15
    1418:	0f 93       	push	r16
    141a:	1f 93       	push	r17
    141c:	cf 93       	push	r28
    141e:	df 93       	push	r29
    1420:	00 d0       	rcall	.+0      	; 0x1422 <xQueueReceive+0x12>
    1422:	00 d0       	rcall	.+0      	; 0x1424 <xQueueReceive+0x14>
    1424:	1f 92       	push	r1
    1426:	cd b7       	in	r28, 0x3d	; 61
    1428:	de b7       	in	r29, 0x3e	; 62
    142a:	8c 01       	movw	r16, r24
    142c:	6b 01       	movw	r12, r22
    142e:	5d 83       	std	Y+5, r21	; 0x05
    1430:	4c 83       	std	Y+4, r20	; 0x04
    1432:	e1 2c       	mov	r14, r1
    1434:	0f b6       	in	r0, 0x3f	; 63
    1436:	f8 94       	cli
    1438:	0f 92       	push	r0
    143a:	f8 01       	movw	r30, r16
    143c:	f2 8c       	ldd	r15, Z+26	; 0x1a
    143e:	ff 20       	and	r15, r15
    1440:	a9 f0       	breq	.+42     	; 0x146c <xQueueReceive+0x5c>
    1442:	b6 01       	movw	r22, r12
    1444:	c8 01       	movw	r24, r16
    1446:	0e 94 a5 08 	call	0x114a	; 0x114a <prvCopyDataFromQueue>
    144a:	fa 94       	dec	r15
    144c:	f8 01       	movw	r30, r16
    144e:	f2 8e       	std	Z+26, r15	; 0x1a
    1450:	80 85       	ldd	r24, Z+8	; 0x08
    1452:	88 23       	and	r24, r24
    1454:	39 f0       	breq	.+14     	; 0x1464 <xQueueReceive+0x54>
    1456:	c8 01       	movw	r24, r16
    1458:	08 96       	adiw	r24, 0x08	; 8
    145a:	0e 94 c6 0e 	call	0x1d8c	; 0x1d8c <xTaskRemoveFromEventList>
    145e:	81 11       	cpse	r24, r1
    1460:	0e 94 89 07 	call	0xf12	; 0xf12 <vPortYield>
    1464:	0f 90       	pop	r0
    1466:	0f be       	out	0x3f, r0	; 63
    1468:	81 e0       	ldi	r24, 0x01	; 1
    146a:	53 c0       	rjmp	.+166    	; 0x1512 <xQueueReceive+0x102>
    146c:	8c 81       	ldd	r24, Y+4	; 0x04
    146e:	9d 81       	ldd	r25, Y+5	; 0x05
    1470:	89 2b       	or	r24, r25
    1472:	21 f4       	brne	.+8      	; 0x147c <xQueueReceive+0x6c>
    1474:	0f 90       	pop	r0
    1476:	0f be       	out	0x3f, r0	; 63
    1478:	80 e0       	ldi	r24, 0x00	; 0
    147a:	4b c0       	rjmp	.+150    	; 0x1512 <xQueueReceive+0x102>
    147c:	e1 10       	cpse	r14, r1
    147e:	06 c0       	rjmp	.+12     	; 0x148c <xQueueReceive+0x7c>
    1480:	ce 01       	movw	r24, r28
    1482:	01 96       	adiw	r24, 0x01	; 1
    1484:	0e 94 0e 0f 	call	0x1e1c	; 0x1e1c <vTaskInternalSetTimeOutState>
    1488:	ee 24       	eor	r14, r14
    148a:	e3 94       	inc	r14
    148c:	0f 90       	pop	r0
    148e:	0f be       	out	0x3f, r0	; 63
    1490:	0e 94 c6 0c 	call	0x198c	; 0x198c <vTaskSuspendAll>
    1494:	0f b6       	in	r0, 0x3f	; 63
    1496:	f8 94       	cli
    1498:	0f 92       	push	r0
    149a:	f8 01       	movw	r30, r16
    149c:	85 8d       	ldd	r24, Z+29	; 0x1d
    149e:	8f 3f       	cpi	r24, 0xFF	; 255
    14a0:	09 f4       	brne	.+2      	; 0x14a4 <xQueueReceive+0x94>
    14a2:	15 8e       	std	Z+29, r1	; 0x1d
    14a4:	f8 01       	movw	r30, r16
    14a6:	86 8d       	ldd	r24, Z+30	; 0x1e
    14a8:	8f 3f       	cpi	r24, 0xFF	; 255
    14aa:	09 f4       	brne	.+2      	; 0x14ae <xQueueReceive+0x9e>
    14ac:	16 8e       	std	Z+30, r1	; 0x1e
    14ae:	0f 90       	pop	r0
    14b0:	0f be       	out	0x3f, r0	; 63
    14b2:	be 01       	movw	r22, r28
    14b4:	6c 5f       	subi	r22, 0xFC	; 252
    14b6:	7f 4f       	sbci	r23, 0xFF	; 255
    14b8:	ce 01       	movw	r24, r28
    14ba:	01 96       	adiw	r24, 0x01	; 1
    14bc:	0e 94 19 0f 	call	0x1e32	; 0x1e32 <xTaskCheckForTimeOut>
    14c0:	81 11       	cpse	r24, r1
    14c2:	1b c0       	rjmp	.+54     	; 0x14fa <xQueueReceive+0xea>
    14c4:	c8 01       	movw	r24, r16
    14c6:	0e 94 41 08 	call	0x1082	; 0x1082 <prvIsQueueEmpty>
    14ca:	88 23       	and	r24, r24
    14cc:	81 f0       	breq	.+32     	; 0x14ee <xQueueReceive+0xde>
    14ce:	6c 81       	ldd	r22, Y+4	; 0x04
    14d0:	7d 81       	ldd	r23, Y+5	; 0x05
    14d2:	c8 01       	movw	r24, r16
    14d4:	41 96       	adiw	r24, 0x11	; 17
    14d6:	0e 94 b4 0e 	call	0x1d68	; 0x1d68 <vTaskPlaceOnEventList>
    14da:	c8 01       	movw	r24, r16
    14dc:	0e 94 bf 08 	call	0x117e	; 0x117e <prvUnlockQueue>
    14e0:	0e 94 86 0d 	call	0x1b0c	; 0x1b0c <xTaskResumeAll>
    14e4:	81 11       	cpse	r24, r1
    14e6:	a6 cf       	rjmp	.-180    	; 0x1434 <xQueueReceive+0x24>
    14e8:	0e 94 89 07 	call	0xf12	; 0xf12 <vPortYield>
    14ec:	a3 cf       	rjmp	.-186    	; 0x1434 <xQueueReceive+0x24>
    14ee:	c8 01       	movw	r24, r16
    14f0:	0e 94 bf 08 	call	0x117e	; 0x117e <prvUnlockQueue>
    14f4:	0e 94 86 0d 	call	0x1b0c	; 0x1b0c <xTaskResumeAll>
    14f8:	9d cf       	rjmp	.-198    	; 0x1434 <xQueueReceive+0x24>
    14fa:	c8 01       	movw	r24, r16
    14fc:	0e 94 bf 08 	call	0x117e	; 0x117e <prvUnlockQueue>
    1500:	0e 94 86 0d 	call	0x1b0c	; 0x1b0c <xTaskResumeAll>
    1504:	c8 01       	movw	r24, r16
    1506:	0e 94 41 08 	call	0x1082	; 0x1082 <prvIsQueueEmpty>
    150a:	88 23       	and	r24, r24
    150c:	09 f4       	brne	.+2      	; 0x1510 <xQueueReceive+0x100>
    150e:	92 cf       	rjmp	.-220    	; 0x1434 <xQueueReceive+0x24>
    1510:	80 e0       	ldi	r24, 0x00	; 0
    1512:	0f 90       	pop	r0
    1514:	0f 90       	pop	r0
    1516:	0f 90       	pop	r0
    1518:	0f 90       	pop	r0
    151a:	0f 90       	pop	r0
    151c:	df 91       	pop	r29
    151e:	cf 91       	pop	r28
    1520:	1f 91       	pop	r17
    1522:	0f 91       	pop	r16
    1524:	ff 90       	pop	r15
    1526:	ef 90       	pop	r14
    1528:	df 90       	pop	r13
    152a:	cf 90       	pop	r12
    152c:	08 95       	ret

0000152e <prvResetNextTaskUnblockTime>:
    152e:	e0 91 19 07 	lds	r30, 0x0719	; 0x800719 <pxDelayedTaskList>
    1532:	f0 91 1a 07 	lds	r31, 0x071A	; 0x80071a <pxDelayedTaskList+0x1>
    1536:	80 81       	ld	r24, Z
    1538:	81 11       	cpse	r24, r1
    153a:	07 c0       	rjmp	.+14     	; 0x154a <prvResetNextTaskUnblockTime+0x1c>
    153c:	8f ef       	ldi	r24, 0xFF	; 255
    153e:	9f ef       	ldi	r25, 0xFF	; 255
    1540:	90 93 f1 06 	sts	0x06F1, r25	; 0x8006f1 <xNextTaskUnblockTime+0x1>
    1544:	80 93 f0 06 	sts	0x06F0, r24	; 0x8006f0 <xNextTaskUnblockTime>
    1548:	08 95       	ret
    154a:	e0 91 19 07 	lds	r30, 0x0719	; 0x800719 <pxDelayedTaskList>
    154e:	f0 91 1a 07 	lds	r31, 0x071A	; 0x80071a <pxDelayedTaskList+0x1>
    1552:	05 80       	ldd	r0, Z+5	; 0x05
    1554:	f6 81       	ldd	r31, Z+6	; 0x06
    1556:	e0 2d       	mov	r30, r0
    1558:	06 80       	ldd	r0, Z+6	; 0x06
    155a:	f7 81       	ldd	r31, Z+7	; 0x07
    155c:	e0 2d       	mov	r30, r0
    155e:	82 81       	ldd	r24, Z+2	; 0x02
    1560:	93 81       	ldd	r25, Z+3	; 0x03
    1562:	90 93 f1 06 	sts	0x06F1, r25	; 0x8006f1 <xNextTaskUnblockTime+0x1>
    1566:	80 93 f0 06 	sts	0x06F0, r24	; 0x8006f0 <xNextTaskUnblockTime>
    156a:	08 95       	ret

0000156c <prvDeleteTCB>:
    156c:	cf 93       	push	r28
    156e:	df 93       	push	r29
    1570:	ec 01       	movw	r28, r24
    1572:	8f 89       	ldd	r24, Y+23	; 0x17
    1574:	98 8d       	ldd	r25, Y+24	; 0x18
    1576:	0e 94 59 06 	call	0xcb2	; 0xcb2 <vPortFree>
    157a:	ce 01       	movw	r24, r28
    157c:	0e 94 59 06 	call	0xcb2	; 0xcb2 <vPortFree>
    1580:	df 91       	pop	r29
    1582:	cf 91       	pop	r28
    1584:	08 95       	ret

00001586 <prvInitialiseNewTask>:
    1586:	6f 92       	push	r6
    1588:	7f 92       	push	r7
    158a:	8f 92       	push	r8
    158c:	9f 92       	push	r9
    158e:	af 92       	push	r10
    1590:	bf 92       	push	r11
    1592:	cf 92       	push	r12
    1594:	df 92       	push	r13
    1596:	ef 92       	push	r14
    1598:	0f 93       	push	r16
    159a:	1f 93       	push	r17
    159c:	cf 93       	push	r28
    159e:	df 93       	push	r29
    15a0:	cd b7       	in	r28, 0x3d	; 61
    15a2:	de b7       	in	r29, 0x3e	; 62
    15a4:	4c 01       	movw	r8, r24
    15a6:	f5 01       	movw	r30, r10
    15a8:	87 89       	ldd	r24, Z+23	; 0x17
    15aa:	90 8d       	ldd	r25, Z+24	; 0x18
    15ac:	21 50       	subi	r18, 0x01	; 1
    15ae:	31 09       	sbc	r19, r1
    15b0:	3c 01       	movw	r6, r24
    15b2:	62 0e       	add	r6, r18
    15b4:	73 1e       	adc	r7, r19
    15b6:	61 15       	cp	r22, r1
    15b8:	71 05       	cpc	r23, r1
    15ba:	89 f4       	brne	.+34     	; 0x15de <prvInitialiseNewTask+0x58>
    15bc:	16 c0       	rjmp	.+44     	; 0x15ea <prvInitialiseNewTask+0x64>
    15be:	82 2f       	mov	r24, r18
    15c0:	90 e0       	ldi	r25, 0x00	; 0
    15c2:	fb 01       	movw	r30, r22
    15c4:	e8 0f       	add	r30, r24
    15c6:	f9 1f       	adc	r31, r25
    15c8:	30 81       	ld	r19, Z
    15ca:	d5 01       	movw	r26, r10
    15cc:	a8 0f       	add	r26, r24
    15ce:	b9 1f       	adc	r27, r25
    15d0:	59 96       	adiw	r26, 0x19	; 25
    15d2:	3c 93       	st	X, r19
    15d4:	80 81       	ld	r24, Z
    15d6:	88 23       	and	r24, r24
    15d8:	29 f0       	breq	.+10     	; 0x15e4 <prvInitialiseNewTask+0x5e>
    15da:	2f 5f       	subi	r18, 0xFF	; 255
    15dc:	01 c0       	rjmp	.+2      	; 0x15e0 <prvInitialiseNewTask+0x5a>
    15de:	20 e0       	ldi	r18, 0x00	; 0
    15e0:	28 30       	cpi	r18, 0x08	; 8
    15e2:	68 f3       	brcs	.-38     	; 0x15be <prvInitialiseNewTask+0x38>
    15e4:	f5 01       	movw	r30, r10
    15e6:	10 a2       	std	Z+32, r1	; 0x20
    15e8:	02 c0       	rjmp	.+4      	; 0x15ee <prvInitialiseNewTask+0x68>
    15ea:	f5 01       	movw	r30, r10
    15ec:	11 8e       	std	Z+25, r1	; 0x19
    15ee:	f3 e0       	ldi	r31, 0x03	; 3
    15f0:	fe 15       	cp	r31, r14
    15f2:	20 f4       	brcc	.+8      	; 0x15fc <prvInitialiseNewTask+0x76>
    15f4:	0f 2e       	mov	r0, r31
    15f6:	f3 e0       	ldi	r31, 0x03	; 3
    15f8:	ef 2e       	mov	r14, r31
    15fa:	f0 2d       	mov	r31, r0
    15fc:	f5 01       	movw	r30, r10
    15fe:	e6 8a       	std	Z+22, r14	; 0x16
    1600:	c5 01       	movw	r24, r10
    1602:	02 96       	adiw	r24, 0x02	; 2
    1604:	0e 94 68 06 	call	0xcd0	; 0xcd0 <vListInitialiseItem>
    1608:	c5 01       	movw	r24, r10
    160a:	0c 96       	adiw	r24, 0x0c	; 12
    160c:	0e 94 68 06 	call	0xcd0	; 0xcd0 <vListInitialiseItem>
    1610:	f5 01       	movw	r30, r10
    1612:	b1 86       	std	Z+9, r11	; 0x09
    1614:	a0 86       	std	Z+8, r10	; 0x08
    1616:	84 e0       	ldi	r24, 0x04	; 4
    1618:	90 e0       	ldi	r25, 0x00	; 0
    161a:	8e 19       	sub	r24, r14
    161c:	91 09       	sbc	r25, r1
    161e:	95 87       	std	Z+13, r25	; 0x0d
    1620:	84 87       	std	Z+12, r24	; 0x0c
    1622:	b3 8a       	std	Z+19, r11	; 0x13
    1624:	a2 8a       	std	Z+18, r10	; 0x12
    1626:	11 a2       	std	Z+33, r1	; 0x21
    1628:	12 a2       	std	Z+34, r1	; 0x22
    162a:	13 a2       	std	Z+35, r1	; 0x23
    162c:	14 a2       	std	Z+36, r1	; 0x24
    162e:	15 a2       	std	Z+37, r1	; 0x25
    1630:	a8 01       	movw	r20, r16
    1632:	b4 01       	movw	r22, r8
    1634:	c3 01       	movw	r24, r6
    1636:	0e 94 ee 06 	call	0xddc	; 0xddc <pxPortInitialiseStack>
    163a:	f5 01       	movw	r30, r10
    163c:	91 83       	std	Z+1, r25	; 0x01
    163e:	80 83       	st	Z, r24
    1640:	c1 14       	cp	r12, r1
    1642:	d1 04       	cpc	r13, r1
    1644:	19 f0       	breq	.+6      	; 0x164c <prvInitialiseNewTask+0xc6>
    1646:	f6 01       	movw	r30, r12
    1648:	b1 82       	std	Z+1, r11	; 0x01
    164a:	a0 82       	st	Z, r10
    164c:	df 91       	pop	r29
    164e:	cf 91       	pop	r28
    1650:	1f 91       	pop	r17
    1652:	0f 91       	pop	r16
    1654:	ef 90       	pop	r14
    1656:	df 90       	pop	r13
    1658:	cf 90       	pop	r12
    165a:	bf 90       	pop	r11
    165c:	af 90       	pop	r10
    165e:	9f 90       	pop	r9
    1660:	8f 90       	pop	r8
    1662:	7f 90       	pop	r7
    1664:	6f 90       	pop	r6
    1666:	08 95       	ret

00001668 <prvInitialiseTaskLists>:
    1668:	cf 93       	push	r28
    166a:	c0 e0       	ldi	r28, 0x00	; 0
    166c:	10 c0       	rjmp	.+32     	; 0x168e <prvInitialiseTaskLists+0x26>
    166e:	8c 2f       	mov	r24, r28
    1670:	90 e0       	ldi	r25, 0x00	; 0
    1672:	9c 01       	movw	r18, r24
    1674:	22 0f       	add	r18, r18
    1676:	33 1f       	adc	r19, r19
    1678:	22 0f       	add	r18, r18
    167a:	33 1f       	adc	r19, r19
    167c:	22 0f       	add	r18, r18
    167e:	33 1f       	adc	r19, r19
    1680:	82 0f       	add	r24, r18
    1682:	93 1f       	adc	r25, r19
    1684:	83 5d       	subi	r24, 0xD3	; 211
    1686:	98 4f       	sbci	r25, 0xF8	; 248
    1688:	0e 94 5a 06 	call	0xcb4	; 0xcb4 <vListInitialise>
    168c:	cf 5f       	subi	r28, 0xFF	; 255
    168e:	c4 30       	cpi	r28, 0x04	; 4
    1690:	70 f3       	brcs	.-36     	; 0x166e <prvInitialiseTaskLists+0x6>
    1692:	84 e2       	ldi	r24, 0x24	; 36
    1694:	97 e0       	ldi	r25, 0x07	; 7
    1696:	0e 94 5a 06 	call	0xcb4	; 0xcb4 <vListInitialise>
    169a:	8b e1       	ldi	r24, 0x1B	; 27
    169c:	97 e0       	ldi	r25, 0x07	; 7
    169e:	0e 94 5a 06 	call	0xcb4	; 0xcb4 <vListInitialise>
    16a2:	8e e0       	ldi	r24, 0x0E	; 14
    16a4:	97 e0       	ldi	r25, 0x07	; 7
    16a6:	0e 94 5a 06 	call	0xcb4	; 0xcb4 <vListInitialise>
    16aa:	85 e0       	ldi	r24, 0x05	; 5
    16ac:	97 e0       	ldi	r25, 0x07	; 7
    16ae:	0e 94 5a 06 	call	0xcb4	; 0xcb4 <vListInitialise>
    16b2:	8b ef       	ldi	r24, 0xFB	; 251
    16b4:	96 e0       	ldi	r25, 0x06	; 6
    16b6:	0e 94 5a 06 	call	0xcb4	; 0xcb4 <vListInitialise>
    16ba:	84 e2       	ldi	r24, 0x24	; 36
    16bc:	97 e0       	ldi	r25, 0x07	; 7
    16be:	90 93 1a 07 	sts	0x071A, r25	; 0x80071a <pxDelayedTaskList+0x1>
    16c2:	80 93 19 07 	sts	0x0719, r24	; 0x800719 <pxDelayedTaskList>
    16c6:	8b e1       	ldi	r24, 0x1B	; 27
    16c8:	97 e0       	ldi	r25, 0x07	; 7
    16ca:	90 93 18 07 	sts	0x0718, r25	; 0x800718 <pxOverflowDelayedTaskList+0x1>
    16ce:	80 93 17 07 	sts	0x0717, r24	; 0x800717 <pxOverflowDelayedTaskList>
    16d2:	cf 91       	pop	r28
    16d4:	08 95       	ret

000016d6 <prvAddNewTaskToReadyList>:
    16d6:	cf 93       	push	r28
    16d8:	df 93       	push	r29
    16da:	ec 01       	movw	r28, r24
    16dc:	0f b6       	in	r0, 0x3f	; 63
    16de:	f8 94       	cli
    16e0:	0f 92       	push	r0
    16e2:	80 91 fa 06 	lds	r24, 0x06FA	; 0x8006fa <uxCurrentNumberOfTasks>
    16e6:	8f 5f       	subi	r24, 0xFF	; 255
    16e8:	80 93 fa 06 	sts	0x06FA, r24	; 0x8006fa <uxCurrentNumberOfTasks>
    16ec:	80 91 51 07 	lds	r24, 0x0751	; 0x800751 <pxCurrentTCB>
    16f0:	90 91 52 07 	lds	r25, 0x0752	; 0x800752 <pxCurrentTCB+0x1>
    16f4:	89 2b       	or	r24, r25
    16f6:	59 f4       	brne	.+22     	; 0x170e <prvAddNewTaskToReadyList+0x38>
    16f8:	d0 93 52 07 	sts	0x0752, r29	; 0x800752 <pxCurrentTCB+0x1>
    16fc:	c0 93 51 07 	sts	0x0751, r28	; 0x800751 <pxCurrentTCB>
    1700:	80 91 fa 06 	lds	r24, 0x06FA	; 0x8006fa <uxCurrentNumberOfTasks>
    1704:	81 30       	cpi	r24, 0x01	; 1
    1706:	99 f4       	brne	.+38     	; 0x172e <prvAddNewTaskToReadyList+0x58>
    1708:	0e 94 34 0b 	call	0x1668	; 0x1668 <prvInitialiseTaskLists>
    170c:	10 c0       	rjmp	.+32     	; 0x172e <prvAddNewTaskToReadyList+0x58>
    170e:	80 91 f6 06 	lds	r24, 0x06F6	; 0x8006f6 <xSchedulerRunning>
    1712:	81 11       	cpse	r24, r1
    1714:	0c c0       	rjmp	.+24     	; 0x172e <prvAddNewTaskToReadyList+0x58>
    1716:	e0 91 51 07 	lds	r30, 0x0751	; 0x800751 <pxCurrentTCB>
    171a:	f0 91 52 07 	lds	r31, 0x0752	; 0x800752 <pxCurrentTCB+0x1>
    171e:	96 89       	ldd	r25, Z+22	; 0x16
    1720:	8e 89       	ldd	r24, Y+22	; 0x16
    1722:	89 17       	cp	r24, r25
    1724:	20 f0       	brcs	.+8      	; 0x172e <prvAddNewTaskToReadyList+0x58>
    1726:	d0 93 52 07 	sts	0x0752, r29	; 0x800752 <pxCurrentTCB+0x1>
    172a:	c0 93 51 07 	sts	0x0751, r28	; 0x800751 <pxCurrentTCB>
    172e:	80 91 f2 06 	lds	r24, 0x06F2	; 0x8006f2 <uxTaskNumber>
    1732:	8f 5f       	subi	r24, 0xFF	; 255
    1734:	80 93 f2 06 	sts	0x06F2, r24	; 0x8006f2 <uxTaskNumber>
    1738:	8e 89       	ldd	r24, Y+22	; 0x16
    173a:	90 91 f7 06 	lds	r25, 0x06F7	; 0x8006f7 <uxTopReadyPriority>
    173e:	98 17       	cp	r25, r24
    1740:	10 f4       	brcc	.+4      	; 0x1746 <prvAddNewTaskToReadyList+0x70>
    1742:	80 93 f7 06 	sts	0x06F7, r24	; 0x8006f7 <uxTopReadyPriority>
    1746:	90 e0       	ldi	r25, 0x00	; 0
    1748:	9c 01       	movw	r18, r24
    174a:	22 0f       	add	r18, r18
    174c:	33 1f       	adc	r19, r19
    174e:	22 0f       	add	r18, r18
    1750:	33 1f       	adc	r19, r19
    1752:	22 0f       	add	r18, r18
    1754:	33 1f       	adc	r19, r19
    1756:	82 0f       	add	r24, r18
    1758:	93 1f       	adc	r25, r19
    175a:	be 01       	movw	r22, r28
    175c:	6e 5f       	subi	r22, 0xFE	; 254
    175e:	7f 4f       	sbci	r23, 0xFF	; 255
    1760:	83 5d       	subi	r24, 0xD3	; 211
    1762:	98 4f       	sbci	r25, 0xF8	; 248
    1764:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <vListInsertEnd>
    1768:	0f 90       	pop	r0
    176a:	0f be       	out	0x3f, r0	; 63
    176c:	80 91 f6 06 	lds	r24, 0x06F6	; 0x8006f6 <xSchedulerRunning>
    1770:	88 23       	and	r24, r24
    1772:	51 f0       	breq	.+20     	; 0x1788 <prvAddNewTaskToReadyList+0xb2>
    1774:	e0 91 51 07 	lds	r30, 0x0751	; 0x800751 <pxCurrentTCB>
    1778:	f0 91 52 07 	lds	r31, 0x0752	; 0x800752 <pxCurrentTCB+0x1>
    177c:	96 89       	ldd	r25, Z+22	; 0x16
    177e:	8e 89       	ldd	r24, Y+22	; 0x16
    1780:	98 17       	cp	r25, r24
    1782:	10 f4       	brcc	.+4      	; 0x1788 <prvAddNewTaskToReadyList+0xb2>
    1784:	0e 94 89 07 	call	0xf12	; 0xf12 <vPortYield>
    1788:	df 91       	pop	r29
    178a:	cf 91       	pop	r28
    178c:	08 95       	ret

0000178e <prvCheckTasksWaitingTermination>:
    178e:	cf 93       	push	r28
    1790:	df 93       	push	r29
    1792:	1c c0       	rjmp	.+56     	; 0x17cc <prvCheckTasksWaitingTermination+0x3e>
    1794:	0f b6       	in	r0, 0x3f	; 63
    1796:	f8 94       	cli
    1798:	0f 92       	push	r0
    179a:	e0 91 0a 07 	lds	r30, 0x070A	; 0x80070a <xTasksWaitingTermination+0x5>
    179e:	f0 91 0b 07 	lds	r31, 0x070B	; 0x80070b <xTasksWaitingTermination+0x6>
    17a2:	c6 81       	ldd	r28, Z+6	; 0x06
    17a4:	d7 81       	ldd	r29, Z+7	; 0x07
    17a6:	ce 01       	movw	r24, r28
    17a8:	02 96       	adiw	r24, 0x02	; 2
    17aa:	0e 94 be 06 	call	0xd7c	; 0xd7c <uxListRemove>
    17ae:	80 91 fa 06 	lds	r24, 0x06FA	; 0x8006fa <uxCurrentNumberOfTasks>
    17b2:	81 50       	subi	r24, 0x01	; 1
    17b4:	80 93 fa 06 	sts	0x06FA, r24	; 0x8006fa <uxCurrentNumberOfTasks>
    17b8:	80 91 04 07 	lds	r24, 0x0704	; 0x800704 <uxDeletedTasksWaitingCleanUp>
    17bc:	81 50       	subi	r24, 0x01	; 1
    17be:	80 93 04 07 	sts	0x0704, r24	; 0x800704 <uxDeletedTasksWaitingCleanUp>
    17c2:	0f 90       	pop	r0
    17c4:	0f be       	out	0x3f, r0	; 63
    17c6:	ce 01       	movw	r24, r28
    17c8:	0e 94 b6 0a 	call	0x156c	; 0x156c <prvDeleteTCB>
    17cc:	80 91 04 07 	lds	r24, 0x0704	; 0x800704 <uxDeletedTasksWaitingCleanUp>
    17d0:	81 11       	cpse	r24, r1
    17d2:	e0 cf       	rjmp	.-64     	; 0x1794 <prvCheckTasksWaitingTermination+0x6>
    17d4:	df 91       	pop	r29
    17d6:	cf 91       	pop	r28
    17d8:	08 95       	ret

000017da <prvIdleTask>:
    17da:	0e 94 c7 0b 	call	0x178e	; 0x178e <prvCheckTasksWaitingTermination>
    17de:	fd cf       	rjmp	.-6      	; 0x17da <prvIdleTask>

000017e0 <prvAddCurrentTaskToDelayedList>:
    17e0:	ff 92       	push	r15
    17e2:	0f 93       	push	r16
    17e4:	1f 93       	push	r17
    17e6:	cf 93       	push	r28
    17e8:	df 93       	push	r29
    17ea:	ec 01       	movw	r28, r24
    17ec:	f6 2e       	mov	r15, r22
    17ee:	00 91 f8 06 	lds	r16, 0x06F8	; 0x8006f8 <xTickCount>
    17f2:	10 91 f9 06 	lds	r17, 0x06F9	; 0x8006f9 <xTickCount+0x1>
    17f6:	80 91 51 07 	lds	r24, 0x0751	; 0x800751 <pxCurrentTCB>
    17fa:	90 91 52 07 	lds	r25, 0x0752	; 0x800752 <pxCurrentTCB+0x1>
    17fe:	02 96       	adiw	r24, 0x02	; 2
    1800:	0e 94 be 06 	call	0xd7c	; 0xd7c <uxListRemove>
    1804:	cf 3f       	cpi	r28, 0xFF	; 255
    1806:	8f ef       	ldi	r24, 0xFF	; 255
    1808:	d8 07       	cpc	r29, r24
    180a:	69 f4       	brne	.+26     	; 0x1826 <prvAddCurrentTaskToDelayedList+0x46>
    180c:	ff 20       	and	r15, r15
    180e:	59 f0       	breq	.+22     	; 0x1826 <prvAddCurrentTaskToDelayedList+0x46>
    1810:	60 91 51 07 	lds	r22, 0x0751	; 0x800751 <pxCurrentTCB>
    1814:	70 91 52 07 	lds	r23, 0x0752	; 0x800752 <pxCurrentTCB+0x1>
    1818:	6e 5f       	subi	r22, 0xFE	; 254
    181a:	7f 4f       	sbci	r23, 0xFF	; 255
    181c:	8b ef       	ldi	r24, 0xFB	; 251
    181e:	96 e0       	ldi	r25, 0x06	; 6
    1820:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <vListInsertEnd>
    1824:	2f c0       	rjmp	.+94     	; 0x1884 <prvAddCurrentTaskToDelayedList+0xa4>
    1826:	c0 0f       	add	r28, r16
    1828:	d1 1f       	adc	r29, r17
    182a:	e0 91 51 07 	lds	r30, 0x0751	; 0x800751 <pxCurrentTCB>
    182e:	f0 91 52 07 	lds	r31, 0x0752	; 0x800752 <pxCurrentTCB+0x1>
    1832:	d3 83       	std	Z+3, r29	; 0x03
    1834:	c2 83       	std	Z+2, r28	; 0x02
    1836:	c0 17       	cp	r28, r16
    1838:	d1 07       	cpc	r29, r17
    183a:	68 f4       	brcc	.+26     	; 0x1856 <prvAddCurrentTaskToDelayedList+0x76>
    183c:	60 91 51 07 	lds	r22, 0x0751	; 0x800751 <pxCurrentTCB>
    1840:	70 91 52 07 	lds	r23, 0x0752	; 0x800752 <pxCurrentTCB+0x1>
    1844:	80 91 17 07 	lds	r24, 0x0717	; 0x800717 <pxOverflowDelayedTaskList>
    1848:	90 91 18 07 	lds	r25, 0x0718	; 0x800718 <pxOverflowDelayedTaskList+0x1>
    184c:	6e 5f       	subi	r22, 0xFE	; 254
    184e:	7f 4f       	sbci	r23, 0xFF	; 255
    1850:	0e 94 8d 06 	call	0xd1a	; 0xd1a <vListInsert>
    1854:	17 c0       	rjmp	.+46     	; 0x1884 <prvAddCurrentTaskToDelayedList+0xa4>
    1856:	60 91 51 07 	lds	r22, 0x0751	; 0x800751 <pxCurrentTCB>
    185a:	70 91 52 07 	lds	r23, 0x0752	; 0x800752 <pxCurrentTCB+0x1>
    185e:	80 91 19 07 	lds	r24, 0x0719	; 0x800719 <pxDelayedTaskList>
    1862:	90 91 1a 07 	lds	r25, 0x071A	; 0x80071a <pxDelayedTaskList+0x1>
    1866:	6e 5f       	subi	r22, 0xFE	; 254
    1868:	7f 4f       	sbci	r23, 0xFF	; 255
    186a:	0e 94 8d 06 	call	0xd1a	; 0xd1a <vListInsert>
    186e:	80 91 f0 06 	lds	r24, 0x06F0	; 0x8006f0 <xNextTaskUnblockTime>
    1872:	90 91 f1 06 	lds	r25, 0x06F1	; 0x8006f1 <xNextTaskUnblockTime+0x1>
    1876:	c8 17       	cp	r28, r24
    1878:	d9 07       	cpc	r29, r25
    187a:	20 f4       	brcc	.+8      	; 0x1884 <prvAddCurrentTaskToDelayedList+0xa4>
    187c:	d0 93 f1 06 	sts	0x06F1, r29	; 0x8006f1 <xNextTaskUnblockTime+0x1>
    1880:	c0 93 f0 06 	sts	0x06F0, r28	; 0x8006f0 <xNextTaskUnblockTime>
    1884:	df 91       	pop	r29
    1886:	cf 91       	pop	r28
    1888:	1f 91       	pop	r17
    188a:	0f 91       	pop	r16
    188c:	ff 90       	pop	r15
    188e:	08 95       	ret

00001890 <xTaskCreate>:
    1890:	2f 92       	push	r2
    1892:	3f 92       	push	r3
    1894:	4f 92       	push	r4
    1896:	5f 92       	push	r5
    1898:	6f 92       	push	r6
    189a:	7f 92       	push	r7
    189c:	8f 92       	push	r8
    189e:	9f 92       	push	r9
    18a0:	af 92       	push	r10
    18a2:	bf 92       	push	r11
    18a4:	cf 92       	push	r12
    18a6:	df 92       	push	r13
    18a8:	ef 92       	push	r14
    18aa:	ff 92       	push	r15
    18ac:	0f 93       	push	r16
    18ae:	1f 93       	push	r17
    18b0:	cf 93       	push	r28
    18b2:	df 93       	push	r29
    18b4:	3c 01       	movw	r6, r24
    18b6:	1b 01       	movw	r2, r22
    18b8:	5a 01       	movw	r10, r20
    18ba:	29 01       	movw	r4, r18
    18bc:	ca 01       	movw	r24, r20
    18be:	0e 94 24 06 	call	0xc48	; 0xc48 <pvPortMalloc>
    18c2:	6c 01       	movw	r12, r24
    18c4:	89 2b       	or	r24, r25
    18c6:	71 f0       	breq	.+28     	; 0x18e4 <xTaskCreate+0x54>
    18c8:	86 e2       	ldi	r24, 0x26	; 38
    18ca:	90 e0       	ldi	r25, 0x00	; 0
    18cc:	0e 94 24 06 	call	0xc48	; 0xc48 <pvPortMalloc>
    18d0:	ec 01       	movw	r28, r24
    18d2:	89 2b       	or	r24, r25
    18d4:	19 f0       	breq	.+6      	; 0x18dc <xTaskCreate+0x4c>
    18d6:	d8 8e       	std	Y+24, r13	; 0x18
    18d8:	cf 8a       	std	Y+23, r12	; 0x17
    18da:	06 c0       	rjmp	.+12     	; 0x18e8 <xTaskCreate+0x58>
    18dc:	c6 01       	movw	r24, r12
    18de:	0e 94 59 06 	call	0xcb2	; 0xcb2 <vPortFree>
    18e2:	02 c0       	rjmp	.+4      	; 0x18e8 <xTaskCreate+0x58>
    18e4:	c0 e0       	ldi	r28, 0x00	; 0
    18e6:	d0 e0       	ldi	r29, 0x00	; 0
    18e8:	20 97       	sbiw	r28, 0x00	; 0
    18ea:	91 f0       	breq	.+36     	; 0x1910 <xTaskCreate+0x80>
    18ec:	95 01       	movw	r18, r10
    18ee:	40 e0       	ldi	r20, 0x00	; 0
    18f0:	50 e0       	ldi	r21, 0x00	; 0
    18f2:	81 2c       	mov	r8, r1
    18f4:	91 2c       	mov	r9, r1
    18f6:	5e 01       	movw	r10, r28
    18f8:	67 01       	movw	r12, r14
    18fa:	e0 2e       	mov	r14, r16
    18fc:	82 01       	movw	r16, r4
    18fe:	b1 01       	movw	r22, r2
    1900:	c3 01       	movw	r24, r6
    1902:	0e 94 c3 0a 	call	0x1586	; 0x1586 <prvInitialiseNewTask>
    1906:	ce 01       	movw	r24, r28
    1908:	0e 94 6b 0b 	call	0x16d6	; 0x16d6 <prvAddNewTaskToReadyList>
    190c:	81 e0       	ldi	r24, 0x01	; 1
    190e:	01 c0       	rjmp	.+2      	; 0x1912 <xTaskCreate+0x82>
    1910:	8f ef       	ldi	r24, 0xFF	; 255
    1912:	df 91       	pop	r29
    1914:	cf 91       	pop	r28
    1916:	1f 91       	pop	r17
    1918:	0f 91       	pop	r16
    191a:	ff 90       	pop	r15
    191c:	ef 90       	pop	r14
    191e:	df 90       	pop	r13
    1920:	cf 90       	pop	r12
    1922:	bf 90       	pop	r11
    1924:	af 90       	pop	r10
    1926:	9f 90       	pop	r9
    1928:	8f 90       	pop	r8
    192a:	7f 90       	pop	r7
    192c:	6f 90       	pop	r6
    192e:	5f 90       	pop	r5
    1930:	4f 90       	pop	r4
    1932:	3f 90       	pop	r3
    1934:	2f 90       	pop	r2
    1936:	08 95       	ret

00001938 <vTaskStartScheduler>:
    1938:	ef 92       	push	r14
    193a:	ff 92       	push	r15
    193c:	0f 93       	push	r16
    193e:	0f 2e       	mov	r0, r31
    1940:	fe ee       	ldi	r31, 0xEE	; 238
    1942:	ef 2e       	mov	r14, r31
    1944:	f6 e0       	ldi	r31, 0x06	; 6
    1946:	ff 2e       	mov	r15, r31
    1948:	f0 2d       	mov	r31, r0
    194a:	00 e0       	ldi	r16, 0x00	; 0
    194c:	20 e0       	ldi	r18, 0x00	; 0
    194e:	30 e0       	ldi	r19, 0x00	; 0
    1950:	45 e5       	ldi	r20, 0x55	; 85
    1952:	50 e0       	ldi	r21, 0x00	; 0
    1954:	65 eb       	ldi	r22, 0xB5	; 181
    1956:	70 e0       	ldi	r23, 0x00	; 0
    1958:	8d ee       	ldi	r24, 0xED	; 237
    195a:	9b e0       	ldi	r25, 0x0B	; 11
    195c:	0e 94 48 0c 	call	0x1890	; 0x1890 <xTaskCreate>
    1960:	81 30       	cpi	r24, 0x01	; 1
    1962:	81 f4       	brne	.+32     	; 0x1984 <vTaskStartScheduler+0x4c>
    1964:	f8 94       	cli
    1966:	8f ef       	ldi	r24, 0xFF	; 255
    1968:	9f ef       	ldi	r25, 0xFF	; 255
    196a:	90 93 f1 06 	sts	0x06F1, r25	; 0x8006f1 <xNextTaskUnblockTime+0x1>
    196e:	80 93 f0 06 	sts	0x06F0, r24	; 0x8006f0 <xNextTaskUnblockTime>
    1972:	81 e0       	ldi	r24, 0x01	; 1
    1974:	80 93 f6 06 	sts	0x06F6, r24	; 0x8006f6 <xSchedulerRunning>
    1978:	10 92 f9 06 	sts	0x06F9, r1	; 0x8006f9 <xTickCount+0x1>
    197c:	10 92 f8 06 	sts	0x06F8, r1	; 0x8006f8 <xTickCount>
    1980:	0e 94 5a 07 	call	0xeb4	; 0xeb4 <xPortStartScheduler>
    1984:	0f 91       	pop	r16
    1986:	ff 90       	pop	r15
    1988:	ef 90       	pop	r14
    198a:	08 95       	ret

0000198c <vTaskSuspendAll>:
    198c:	80 91 ed 06 	lds	r24, 0x06ED	; 0x8006ed <uxSchedulerSuspended>
    1990:	8f 5f       	subi	r24, 0xFF	; 255
    1992:	80 93 ed 06 	sts	0x06ED, r24	; 0x8006ed <uxSchedulerSuspended>
    1996:	08 95       	ret

00001998 <xTaskIncrementTick>:
    1998:	df 92       	push	r13
    199a:	ef 92       	push	r14
    199c:	ff 92       	push	r15
    199e:	0f 93       	push	r16
    19a0:	1f 93       	push	r17
    19a2:	cf 93       	push	r28
    19a4:	df 93       	push	r29
    19a6:	80 91 ed 06 	lds	r24, 0x06ED	; 0x8006ed <uxSchedulerSuspended>
    19aa:	81 11       	cpse	r24, r1
    19ac:	97 c0       	rjmp	.+302    	; 0x1adc <xTaskIncrementTick+0x144>
    19ae:	e0 90 f8 06 	lds	r14, 0x06F8	; 0x8006f8 <xTickCount>
    19b2:	f0 90 f9 06 	lds	r15, 0x06F9	; 0x8006f9 <xTickCount+0x1>
    19b6:	8f ef       	ldi	r24, 0xFF	; 255
    19b8:	e8 1a       	sub	r14, r24
    19ba:	f8 0a       	sbc	r15, r24
    19bc:	f0 92 f9 06 	sts	0x06F9, r15	; 0x8006f9 <xTickCount+0x1>
    19c0:	e0 92 f8 06 	sts	0x06F8, r14	; 0x8006f8 <xTickCount>
    19c4:	e1 14       	cp	r14, r1
    19c6:	f1 04       	cpc	r15, r1
    19c8:	b9 f4       	brne	.+46     	; 0x19f8 <xTaskIncrementTick+0x60>
    19ca:	80 91 19 07 	lds	r24, 0x0719	; 0x800719 <pxDelayedTaskList>
    19ce:	90 91 1a 07 	lds	r25, 0x071A	; 0x80071a <pxDelayedTaskList+0x1>
    19d2:	20 91 17 07 	lds	r18, 0x0717	; 0x800717 <pxOverflowDelayedTaskList>
    19d6:	30 91 18 07 	lds	r19, 0x0718	; 0x800718 <pxOverflowDelayedTaskList+0x1>
    19da:	30 93 1a 07 	sts	0x071A, r19	; 0x80071a <pxDelayedTaskList+0x1>
    19de:	20 93 19 07 	sts	0x0719, r18	; 0x800719 <pxDelayedTaskList>
    19e2:	90 93 18 07 	sts	0x0718, r25	; 0x800718 <pxOverflowDelayedTaskList+0x1>
    19e6:	80 93 17 07 	sts	0x0717, r24	; 0x800717 <pxOverflowDelayedTaskList>
    19ea:	80 91 f3 06 	lds	r24, 0x06F3	; 0x8006f3 <xNumOfOverflows>
    19ee:	8f 5f       	subi	r24, 0xFF	; 255
    19f0:	80 93 f3 06 	sts	0x06F3, r24	; 0x8006f3 <xNumOfOverflows>
    19f4:	0e 94 97 0a 	call	0x152e	; 0x152e <prvResetNextTaskUnblockTime>
    19f8:	80 91 f0 06 	lds	r24, 0x06F0	; 0x8006f0 <xNextTaskUnblockTime>
    19fc:	90 91 f1 06 	lds	r25, 0x06F1	; 0x8006f1 <xNextTaskUnblockTime+0x1>
    1a00:	e8 16       	cp	r14, r24
    1a02:	f9 06       	cpc	r15, r25
    1a04:	28 f4       	brcc	.+10     	; 0x1a10 <xTaskIncrementTick+0x78>
    1a06:	d1 2c       	mov	r13, r1
    1a08:	53 c0       	rjmp	.+166    	; 0x1ab0 <xTaskIncrementTick+0x118>
    1a0a:	dd 24       	eor	r13, r13
    1a0c:	d3 94       	inc	r13
    1a0e:	01 c0       	rjmp	.+2      	; 0x1a12 <xTaskIncrementTick+0x7a>
    1a10:	d1 2c       	mov	r13, r1
    1a12:	e0 91 19 07 	lds	r30, 0x0719	; 0x800719 <pxDelayedTaskList>
    1a16:	f0 91 1a 07 	lds	r31, 0x071A	; 0x80071a <pxDelayedTaskList+0x1>
    1a1a:	80 81       	ld	r24, Z
    1a1c:	81 11       	cpse	r24, r1
    1a1e:	07 c0       	rjmp	.+14     	; 0x1a2e <xTaskIncrementTick+0x96>
    1a20:	8f ef       	ldi	r24, 0xFF	; 255
    1a22:	9f ef       	ldi	r25, 0xFF	; 255
    1a24:	90 93 f1 06 	sts	0x06F1, r25	; 0x8006f1 <xNextTaskUnblockTime+0x1>
    1a28:	80 93 f0 06 	sts	0x06F0, r24	; 0x8006f0 <xNextTaskUnblockTime>
    1a2c:	41 c0       	rjmp	.+130    	; 0x1ab0 <xTaskIncrementTick+0x118>
    1a2e:	e0 91 19 07 	lds	r30, 0x0719	; 0x800719 <pxDelayedTaskList>
    1a32:	f0 91 1a 07 	lds	r31, 0x071A	; 0x80071a <pxDelayedTaskList+0x1>
    1a36:	05 80       	ldd	r0, Z+5	; 0x05
    1a38:	f6 81       	ldd	r31, Z+6	; 0x06
    1a3a:	e0 2d       	mov	r30, r0
    1a3c:	c6 81       	ldd	r28, Z+6	; 0x06
    1a3e:	d7 81       	ldd	r29, Z+7	; 0x07
    1a40:	8a 81       	ldd	r24, Y+2	; 0x02
    1a42:	9b 81       	ldd	r25, Y+3	; 0x03
    1a44:	e8 16       	cp	r14, r24
    1a46:	f9 06       	cpc	r15, r25
    1a48:	28 f4       	brcc	.+10     	; 0x1a54 <xTaskIncrementTick+0xbc>
    1a4a:	90 93 f1 06 	sts	0x06F1, r25	; 0x8006f1 <xNextTaskUnblockTime+0x1>
    1a4e:	80 93 f0 06 	sts	0x06F0, r24	; 0x8006f0 <xNextTaskUnblockTime>
    1a52:	2e c0       	rjmp	.+92     	; 0x1ab0 <xTaskIncrementTick+0x118>
    1a54:	8e 01       	movw	r16, r28
    1a56:	0e 5f       	subi	r16, 0xFE	; 254
    1a58:	1f 4f       	sbci	r17, 0xFF	; 255
    1a5a:	c8 01       	movw	r24, r16
    1a5c:	0e 94 be 06 	call	0xd7c	; 0xd7c <uxListRemove>
    1a60:	8c 89       	ldd	r24, Y+20	; 0x14
    1a62:	9d 89       	ldd	r25, Y+21	; 0x15
    1a64:	89 2b       	or	r24, r25
    1a66:	21 f0       	breq	.+8      	; 0x1a70 <xTaskIncrementTick+0xd8>
    1a68:	ce 01       	movw	r24, r28
    1a6a:	0c 96       	adiw	r24, 0x0c	; 12
    1a6c:	0e 94 be 06 	call	0xd7c	; 0xd7c <uxListRemove>
    1a70:	8e 89       	ldd	r24, Y+22	; 0x16
    1a72:	90 91 f7 06 	lds	r25, 0x06F7	; 0x8006f7 <uxTopReadyPriority>
    1a76:	98 17       	cp	r25, r24
    1a78:	10 f4       	brcc	.+4      	; 0x1a7e <xTaskIncrementTick+0xe6>
    1a7a:	80 93 f7 06 	sts	0x06F7, r24	; 0x8006f7 <uxTopReadyPriority>
    1a7e:	90 e0       	ldi	r25, 0x00	; 0
    1a80:	9c 01       	movw	r18, r24
    1a82:	22 0f       	add	r18, r18
    1a84:	33 1f       	adc	r19, r19
    1a86:	22 0f       	add	r18, r18
    1a88:	33 1f       	adc	r19, r19
    1a8a:	22 0f       	add	r18, r18
    1a8c:	33 1f       	adc	r19, r19
    1a8e:	82 0f       	add	r24, r18
    1a90:	93 1f       	adc	r25, r19
    1a92:	b8 01       	movw	r22, r16
    1a94:	83 5d       	subi	r24, 0xD3	; 211
    1a96:	98 4f       	sbci	r25, 0xF8	; 248
    1a98:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <vListInsertEnd>
    1a9c:	9e 89       	ldd	r25, Y+22	; 0x16
    1a9e:	e0 91 51 07 	lds	r30, 0x0751	; 0x800751 <pxCurrentTCB>
    1aa2:	f0 91 52 07 	lds	r31, 0x0752	; 0x800752 <pxCurrentTCB+0x1>
    1aa6:	86 89       	ldd	r24, Z+22	; 0x16
    1aa8:	98 17       	cp	r25, r24
    1aaa:	08 f0       	brcs	.+2      	; 0x1aae <xTaskIncrementTick+0x116>
    1aac:	ae cf       	rjmp	.-164    	; 0x1a0a <xTaskIncrementTick+0x72>
    1aae:	b1 cf       	rjmp	.-158    	; 0x1a12 <xTaskIncrementTick+0x7a>
    1ab0:	e0 91 51 07 	lds	r30, 0x0751	; 0x800751 <pxCurrentTCB>
    1ab4:	f0 91 52 07 	lds	r31, 0x0752	; 0x800752 <pxCurrentTCB+0x1>
    1ab8:	86 89       	ldd	r24, Z+22	; 0x16
    1aba:	90 e0       	ldi	r25, 0x00	; 0
    1abc:	fc 01       	movw	r30, r24
    1abe:	ee 0f       	add	r30, r30
    1ac0:	ff 1f       	adc	r31, r31
    1ac2:	ee 0f       	add	r30, r30
    1ac4:	ff 1f       	adc	r31, r31
    1ac6:	ee 0f       	add	r30, r30
    1ac8:	ff 1f       	adc	r31, r31
    1aca:	8e 0f       	add	r24, r30
    1acc:	9f 1f       	adc	r25, r31
    1ace:	fc 01       	movw	r30, r24
    1ad0:	e3 5d       	subi	r30, 0xD3	; 211
    1ad2:	f8 4f       	sbci	r31, 0xF8	; 248
    1ad4:	80 81       	ld	r24, Z
    1ad6:	82 30       	cpi	r24, 0x02	; 2
    1ad8:	40 f4       	brcc	.+16     	; 0x1aea <xTaskIncrementTick+0x152>
    1ada:	09 c0       	rjmp	.+18     	; 0x1aee <xTaskIncrementTick+0x156>
    1adc:	80 91 f5 06 	lds	r24, 0x06F5	; 0x8006f5 <uxPendedTicks>
    1ae0:	8f 5f       	subi	r24, 0xFF	; 255
    1ae2:	80 93 f5 06 	sts	0x06F5, r24	; 0x8006f5 <uxPendedTicks>
    1ae6:	d1 2c       	mov	r13, r1
    1ae8:	02 c0       	rjmp	.+4      	; 0x1aee <xTaskIncrementTick+0x156>
    1aea:	dd 24       	eor	r13, r13
    1aec:	d3 94       	inc	r13
    1aee:	80 91 f4 06 	lds	r24, 0x06F4	; 0x8006f4 <xYieldPending>
    1af2:	88 23       	and	r24, r24
    1af4:	11 f0       	breq	.+4      	; 0x1afa <xTaskIncrementTick+0x162>
    1af6:	dd 24       	eor	r13, r13
    1af8:	d3 94       	inc	r13
    1afa:	8d 2d       	mov	r24, r13
    1afc:	df 91       	pop	r29
    1afe:	cf 91       	pop	r28
    1b00:	1f 91       	pop	r17
    1b02:	0f 91       	pop	r16
    1b04:	ff 90       	pop	r15
    1b06:	ef 90       	pop	r14
    1b08:	df 90       	pop	r13
    1b0a:	08 95       	ret

00001b0c <xTaskResumeAll>:
    1b0c:	0f 93       	push	r16
    1b0e:	1f 93       	push	r17
    1b10:	cf 93       	push	r28
    1b12:	df 93       	push	r29
    1b14:	0f b6       	in	r0, 0x3f	; 63
    1b16:	f8 94       	cli
    1b18:	0f 92       	push	r0
    1b1a:	80 91 ed 06 	lds	r24, 0x06ED	; 0x8006ed <uxSchedulerSuspended>
    1b1e:	81 50       	subi	r24, 0x01	; 1
    1b20:	80 93 ed 06 	sts	0x06ED, r24	; 0x8006ed <uxSchedulerSuspended>
    1b24:	80 91 ed 06 	lds	r24, 0x06ED	; 0x8006ed <uxSchedulerSuspended>
    1b28:	81 11       	cpse	r24, r1
    1b2a:	58 c0       	rjmp	.+176    	; 0x1bdc <xTaskResumeAll+0xd0>
    1b2c:	80 91 fa 06 	lds	r24, 0x06FA	; 0x8006fa <uxCurrentNumberOfTasks>
    1b30:	81 11       	cpse	r24, r1
    1b32:	33 c0       	rjmp	.+102    	; 0x1b9a <xTaskResumeAll+0x8e>
    1b34:	56 c0       	rjmp	.+172    	; 0x1be2 <xTaskResumeAll+0xd6>
    1b36:	e0 91 13 07 	lds	r30, 0x0713	; 0x800713 <xPendingReadyList+0x5>
    1b3a:	f0 91 14 07 	lds	r31, 0x0714	; 0x800714 <xPendingReadyList+0x6>
    1b3e:	c6 81       	ldd	r28, Z+6	; 0x06
    1b40:	d7 81       	ldd	r29, Z+7	; 0x07
    1b42:	ce 01       	movw	r24, r28
    1b44:	0c 96       	adiw	r24, 0x0c	; 12
    1b46:	0e 94 be 06 	call	0xd7c	; 0xd7c <uxListRemove>
    1b4a:	8e 01       	movw	r16, r28
    1b4c:	0e 5f       	subi	r16, 0xFE	; 254
    1b4e:	1f 4f       	sbci	r17, 0xFF	; 255
    1b50:	c8 01       	movw	r24, r16
    1b52:	0e 94 be 06 	call	0xd7c	; 0xd7c <uxListRemove>
    1b56:	8e 89       	ldd	r24, Y+22	; 0x16
    1b58:	90 91 f7 06 	lds	r25, 0x06F7	; 0x8006f7 <uxTopReadyPriority>
    1b5c:	98 17       	cp	r25, r24
    1b5e:	10 f4       	brcc	.+4      	; 0x1b64 <xTaskResumeAll+0x58>
    1b60:	80 93 f7 06 	sts	0x06F7, r24	; 0x8006f7 <uxTopReadyPriority>
    1b64:	90 e0       	ldi	r25, 0x00	; 0
    1b66:	9c 01       	movw	r18, r24
    1b68:	22 0f       	add	r18, r18
    1b6a:	33 1f       	adc	r19, r19
    1b6c:	22 0f       	add	r18, r18
    1b6e:	33 1f       	adc	r19, r19
    1b70:	22 0f       	add	r18, r18
    1b72:	33 1f       	adc	r19, r19
    1b74:	82 0f       	add	r24, r18
    1b76:	93 1f       	adc	r25, r19
    1b78:	b8 01       	movw	r22, r16
    1b7a:	83 5d       	subi	r24, 0xD3	; 211
    1b7c:	98 4f       	sbci	r25, 0xF8	; 248
    1b7e:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <vListInsertEnd>
    1b82:	9e 89       	ldd	r25, Y+22	; 0x16
    1b84:	e0 91 51 07 	lds	r30, 0x0751	; 0x800751 <pxCurrentTCB>
    1b88:	f0 91 52 07 	lds	r31, 0x0752	; 0x800752 <pxCurrentTCB+0x1>
    1b8c:	86 89       	ldd	r24, Z+22	; 0x16
    1b8e:	98 17       	cp	r25, r24
    1b90:	30 f0       	brcs	.+12     	; 0x1b9e <xTaskResumeAll+0x92>
    1b92:	81 e0       	ldi	r24, 0x01	; 1
    1b94:	80 93 f4 06 	sts	0x06F4, r24	; 0x8006f4 <xYieldPending>
    1b98:	02 c0       	rjmp	.+4      	; 0x1b9e <xTaskResumeAll+0x92>
    1b9a:	c0 e0       	ldi	r28, 0x00	; 0
    1b9c:	d0 e0       	ldi	r29, 0x00	; 0
    1b9e:	80 91 0e 07 	lds	r24, 0x070E	; 0x80070e <xPendingReadyList>
    1ba2:	81 11       	cpse	r24, r1
    1ba4:	c8 cf       	rjmp	.-112    	; 0x1b36 <xTaskResumeAll+0x2a>
    1ba6:	cd 2b       	or	r28, r29
    1ba8:	11 f0       	breq	.+4      	; 0x1bae <xTaskResumeAll+0xa2>
    1baa:	0e 94 97 0a 	call	0x152e	; 0x152e <prvResetNextTaskUnblockTime>
    1bae:	c0 91 f5 06 	lds	r28, 0x06F5	; 0x8006f5 <uxPendedTicks>
    1bb2:	cc 23       	and	r28, r28
    1bb4:	59 f0       	breq	.+22     	; 0x1bcc <xTaskResumeAll+0xc0>
    1bb6:	0e 94 cc 0c 	call	0x1998	; 0x1998 <xTaskIncrementTick>
    1bba:	88 23       	and	r24, r24
    1bbc:	19 f0       	breq	.+6      	; 0x1bc4 <xTaskResumeAll+0xb8>
    1bbe:	81 e0       	ldi	r24, 0x01	; 1
    1bc0:	80 93 f4 06 	sts	0x06F4, r24	; 0x8006f4 <xYieldPending>
    1bc4:	c1 50       	subi	r28, 0x01	; 1
    1bc6:	b9 f7       	brne	.-18     	; 0x1bb6 <xTaskResumeAll+0xaa>
    1bc8:	10 92 f5 06 	sts	0x06F5, r1	; 0x8006f5 <uxPendedTicks>
    1bcc:	80 91 f4 06 	lds	r24, 0x06F4	; 0x8006f4 <xYieldPending>
    1bd0:	88 23       	and	r24, r24
    1bd2:	31 f0       	breq	.+12     	; 0x1be0 <xTaskResumeAll+0xd4>
    1bd4:	0e 94 89 07 	call	0xf12	; 0xf12 <vPortYield>
    1bd8:	81 e0       	ldi	r24, 0x01	; 1
    1bda:	03 c0       	rjmp	.+6      	; 0x1be2 <xTaskResumeAll+0xd6>
    1bdc:	80 e0       	ldi	r24, 0x00	; 0
    1bde:	01 c0       	rjmp	.+2      	; 0x1be2 <xTaskResumeAll+0xd6>
    1be0:	80 e0       	ldi	r24, 0x00	; 0
    1be2:	0f 90       	pop	r0
    1be4:	0f be       	out	0x3f, r0	; 63
    1be6:	df 91       	pop	r29
    1be8:	cf 91       	pop	r28
    1bea:	1f 91       	pop	r17
    1bec:	0f 91       	pop	r16
    1bee:	08 95       	ret

00001bf0 <vTaskDelay>:
    1bf0:	cf 93       	push	r28
    1bf2:	df 93       	push	r29
    1bf4:	ec 01       	movw	r28, r24
    1bf6:	89 2b       	or	r24, r25
    1bf8:	49 f0       	breq	.+18     	; 0x1c0c <vTaskDelay+0x1c>
    1bfa:	0e 94 c6 0c 	call	0x198c	; 0x198c <vTaskSuspendAll>
    1bfe:	60 e0       	ldi	r22, 0x00	; 0
    1c00:	ce 01       	movw	r24, r28
    1c02:	0e 94 f0 0b 	call	0x17e0	; 0x17e0 <prvAddCurrentTaskToDelayedList>
    1c06:	0e 94 86 0d 	call	0x1b0c	; 0x1b0c <xTaskResumeAll>
    1c0a:	01 c0       	rjmp	.+2      	; 0x1c0e <vTaskDelay+0x1e>
    1c0c:	80 e0       	ldi	r24, 0x00	; 0
    1c0e:	81 11       	cpse	r24, r1
    1c10:	02 c0       	rjmp	.+4      	; 0x1c16 <vTaskDelay+0x26>
    1c12:	0e 94 89 07 	call	0xf12	; 0xf12 <vPortYield>
    1c16:	df 91       	pop	r29
    1c18:	cf 91       	pop	r28
    1c1a:	08 95       	ret

00001c1c <vTaskSwitchContext>:
    1c1c:	80 91 ed 06 	lds	r24, 0x06ED	; 0x8006ed <uxSchedulerSuspended>
    1c20:	88 23       	and	r24, r24
    1c22:	21 f0       	breq	.+8      	; 0x1c2c <vTaskSwitchContext+0x10>
    1c24:	81 e0       	ldi	r24, 0x01	; 1
    1c26:	80 93 f4 06 	sts	0x06F4, r24	; 0x8006f4 <xYieldPending>
    1c2a:	08 95       	ret
    1c2c:	10 92 f4 06 	sts	0x06F4, r1	; 0x8006f4 <xYieldPending>
    1c30:	20 91 f7 06 	lds	r18, 0x06F7	; 0x8006f7 <uxTopReadyPriority>
    1c34:	01 c0       	rjmp	.+2      	; 0x1c38 <vTaskSwitchContext+0x1c>
    1c36:	21 50       	subi	r18, 0x01	; 1
    1c38:	82 2f       	mov	r24, r18
    1c3a:	90 e0       	ldi	r25, 0x00	; 0
    1c3c:	fc 01       	movw	r30, r24
    1c3e:	ee 0f       	add	r30, r30
    1c40:	ff 1f       	adc	r31, r31
    1c42:	ee 0f       	add	r30, r30
    1c44:	ff 1f       	adc	r31, r31
    1c46:	ee 0f       	add	r30, r30
    1c48:	ff 1f       	adc	r31, r31
    1c4a:	e8 0f       	add	r30, r24
    1c4c:	f9 1f       	adc	r31, r25
    1c4e:	e3 5d       	subi	r30, 0xD3	; 211
    1c50:	f8 4f       	sbci	r31, 0xF8	; 248
    1c52:	30 81       	ld	r19, Z
    1c54:	33 23       	and	r19, r19
    1c56:	79 f3       	breq	.-34     	; 0x1c36 <vTaskSwitchContext+0x1a>
    1c58:	ac 01       	movw	r20, r24
    1c5a:	44 0f       	add	r20, r20
    1c5c:	55 1f       	adc	r21, r21
    1c5e:	44 0f       	add	r20, r20
    1c60:	55 1f       	adc	r21, r21
    1c62:	44 0f       	add	r20, r20
    1c64:	55 1f       	adc	r21, r21
    1c66:	48 0f       	add	r20, r24
    1c68:	59 1f       	adc	r21, r25
    1c6a:	df 01       	movw	r26, r30
    1c6c:	01 80       	ldd	r0, Z+1	; 0x01
    1c6e:	f2 81       	ldd	r31, Z+2	; 0x02
    1c70:	e0 2d       	mov	r30, r0
    1c72:	02 80       	ldd	r0, Z+2	; 0x02
    1c74:	f3 81       	ldd	r31, Z+3	; 0x03
    1c76:	e0 2d       	mov	r30, r0
    1c78:	12 96       	adiw	r26, 0x02	; 2
    1c7a:	fc 93       	st	X, r31
    1c7c:	ee 93       	st	-X, r30
    1c7e:	11 97       	sbiw	r26, 0x01	; 1
    1c80:	40 5d       	subi	r20, 0xD0	; 208
    1c82:	58 4f       	sbci	r21, 0xF8	; 248
    1c84:	e4 17       	cp	r30, r20
    1c86:	f5 07       	cpc	r31, r21
    1c88:	29 f4       	brne	.+10     	; 0x1c94 <vTaskSwitchContext+0x78>
    1c8a:	42 81       	ldd	r20, Z+2	; 0x02
    1c8c:	53 81       	ldd	r21, Z+3	; 0x03
    1c8e:	fd 01       	movw	r30, r26
    1c90:	52 83       	std	Z+2, r21	; 0x02
    1c92:	41 83       	std	Z+1, r20	; 0x01
    1c94:	fc 01       	movw	r30, r24
    1c96:	ee 0f       	add	r30, r30
    1c98:	ff 1f       	adc	r31, r31
    1c9a:	ee 0f       	add	r30, r30
    1c9c:	ff 1f       	adc	r31, r31
    1c9e:	ee 0f       	add	r30, r30
    1ca0:	ff 1f       	adc	r31, r31
    1ca2:	8e 0f       	add	r24, r30
    1ca4:	9f 1f       	adc	r25, r31
    1ca6:	fc 01       	movw	r30, r24
    1ca8:	e3 5d       	subi	r30, 0xD3	; 211
    1caa:	f8 4f       	sbci	r31, 0xF8	; 248
    1cac:	01 80       	ldd	r0, Z+1	; 0x01
    1cae:	f2 81       	ldd	r31, Z+2	; 0x02
    1cb0:	e0 2d       	mov	r30, r0
    1cb2:	86 81       	ldd	r24, Z+6	; 0x06
    1cb4:	97 81       	ldd	r25, Z+7	; 0x07
    1cb6:	90 93 52 07 	sts	0x0752, r25	; 0x800752 <pxCurrentTCB+0x1>
    1cba:	80 93 51 07 	sts	0x0751, r24	; 0x800751 <pxCurrentTCB>
    1cbe:	20 93 f7 06 	sts	0x06F7, r18	; 0x8006f7 <uxTopReadyPriority>
    1cc2:	08 95       	ret

00001cc4 <vTaskSuspend>:
    1cc4:	0f 93       	push	r16
    1cc6:	1f 93       	push	r17
    1cc8:	cf 93       	push	r28
    1cca:	df 93       	push	r29
    1ccc:	ec 01       	movw	r28, r24
    1cce:	0f b6       	in	r0, 0x3f	; 63
    1cd0:	f8 94       	cli
    1cd2:	0f 92       	push	r0
    1cd4:	89 2b       	or	r24, r25
    1cd6:	21 f4       	brne	.+8      	; 0x1ce0 <vTaskSuspend+0x1c>
    1cd8:	c0 91 51 07 	lds	r28, 0x0751	; 0x800751 <pxCurrentTCB>
    1cdc:	d0 91 52 07 	lds	r29, 0x0752	; 0x800752 <pxCurrentTCB+0x1>
    1ce0:	8e 01       	movw	r16, r28
    1ce2:	0e 5f       	subi	r16, 0xFE	; 254
    1ce4:	1f 4f       	sbci	r17, 0xFF	; 255
    1ce6:	c8 01       	movw	r24, r16
    1ce8:	0e 94 be 06 	call	0xd7c	; 0xd7c <uxListRemove>
    1cec:	8c 89       	ldd	r24, Y+20	; 0x14
    1cee:	9d 89       	ldd	r25, Y+21	; 0x15
    1cf0:	89 2b       	or	r24, r25
    1cf2:	21 f0       	breq	.+8      	; 0x1cfc <vTaskSuspend+0x38>
    1cf4:	ce 01       	movw	r24, r28
    1cf6:	0c 96       	adiw	r24, 0x0c	; 12
    1cf8:	0e 94 be 06 	call	0xd7c	; 0xd7c <uxListRemove>
    1cfc:	b8 01       	movw	r22, r16
    1cfe:	8b ef       	ldi	r24, 0xFB	; 251
    1d00:	96 e0       	ldi	r25, 0x06	; 6
    1d02:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <vListInsertEnd>
    1d06:	8d a1       	ldd	r24, Y+37	; 0x25
    1d08:	81 30       	cpi	r24, 0x01	; 1
    1d0a:	09 f4       	brne	.+2      	; 0x1d0e <vTaskSuspend+0x4a>
    1d0c:	1d a2       	std	Y+37, r1	; 0x25
    1d0e:	0f 90       	pop	r0
    1d10:	0f be       	out	0x3f, r0	; 63
    1d12:	80 91 f6 06 	lds	r24, 0x06F6	; 0x8006f6 <xSchedulerRunning>
    1d16:	88 23       	and	r24, r24
    1d18:	39 f0       	breq	.+14     	; 0x1d28 <vTaskSuspend+0x64>
    1d1a:	0f b6       	in	r0, 0x3f	; 63
    1d1c:	f8 94       	cli
    1d1e:	0f 92       	push	r0
    1d20:	0e 94 97 0a 	call	0x152e	; 0x152e <prvResetNextTaskUnblockTime>
    1d24:	0f 90       	pop	r0
    1d26:	0f be       	out	0x3f, r0	; 63
    1d28:	80 91 51 07 	lds	r24, 0x0751	; 0x800751 <pxCurrentTCB>
    1d2c:	90 91 52 07 	lds	r25, 0x0752	; 0x800752 <pxCurrentTCB+0x1>
    1d30:	c8 17       	cp	r28, r24
    1d32:	d9 07       	cpc	r29, r25
    1d34:	a1 f4       	brne	.+40     	; 0x1d5e <vTaskSuspend+0x9a>
    1d36:	80 91 f6 06 	lds	r24, 0x06F6	; 0x8006f6 <xSchedulerRunning>
    1d3a:	88 23       	and	r24, r24
    1d3c:	19 f0       	breq	.+6      	; 0x1d44 <vTaskSuspend+0x80>
    1d3e:	0e 94 89 07 	call	0xf12	; 0xf12 <vPortYield>
    1d42:	0d c0       	rjmp	.+26     	; 0x1d5e <vTaskSuspend+0x9a>
    1d44:	90 91 fb 06 	lds	r25, 0x06FB	; 0x8006fb <xSuspendedTaskList>
    1d48:	80 91 fa 06 	lds	r24, 0x06FA	; 0x8006fa <uxCurrentNumberOfTasks>
    1d4c:	98 13       	cpse	r25, r24
    1d4e:	05 c0       	rjmp	.+10     	; 0x1d5a <vTaskSuspend+0x96>
    1d50:	10 92 52 07 	sts	0x0752, r1	; 0x800752 <pxCurrentTCB+0x1>
    1d54:	10 92 51 07 	sts	0x0751, r1	; 0x800751 <pxCurrentTCB>
    1d58:	02 c0       	rjmp	.+4      	; 0x1d5e <vTaskSuspend+0x9a>
    1d5a:	0e 94 0e 0e 	call	0x1c1c	; 0x1c1c <vTaskSwitchContext>
    1d5e:	df 91       	pop	r29
    1d60:	cf 91       	pop	r28
    1d62:	1f 91       	pop	r17
    1d64:	0f 91       	pop	r16
    1d66:	08 95       	ret

00001d68 <vTaskPlaceOnEventList>:
    1d68:	cf 93       	push	r28
    1d6a:	df 93       	push	r29
    1d6c:	eb 01       	movw	r28, r22
    1d6e:	60 91 51 07 	lds	r22, 0x0751	; 0x800751 <pxCurrentTCB>
    1d72:	70 91 52 07 	lds	r23, 0x0752	; 0x800752 <pxCurrentTCB+0x1>
    1d76:	64 5f       	subi	r22, 0xF4	; 244
    1d78:	7f 4f       	sbci	r23, 0xFF	; 255
    1d7a:	0e 94 8d 06 	call	0xd1a	; 0xd1a <vListInsert>
    1d7e:	61 e0       	ldi	r22, 0x01	; 1
    1d80:	ce 01       	movw	r24, r28
    1d82:	0e 94 f0 0b 	call	0x17e0	; 0x17e0 <prvAddCurrentTaskToDelayedList>
    1d86:	df 91       	pop	r29
    1d88:	cf 91       	pop	r28
    1d8a:	08 95       	ret

00001d8c <xTaskRemoveFromEventList>:
    1d8c:	0f 93       	push	r16
    1d8e:	1f 93       	push	r17
    1d90:	cf 93       	push	r28
    1d92:	df 93       	push	r29
    1d94:	dc 01       	movw	r26, r24
    1d96:	15 96       	adiw	r26, 0x05	; 5
    1d98:	ed 91       	ld	r30, X+
    1d9a:	fc 91       	ld	r31, X
    1d9c:	16 97       	sbiw	r26, 0x06	; 6
    1d9e:	c6 81       	ldd	r28, Z+6	; 0x06
    1da0:	d7 81       	ldd	r29, Z+7	; 0x07
    1da2:	8e 01       	movw	r16, r28
    1da4:	04 5f       	subi	r16, 0xF4	; 244
    1da6:	1f 4f       	sbci	r17, 0xFF	; 255
    1da8:	c8 01       	movw	r24, r16
    1daa:	0e 94 be 06 	call	0xd7c	; 0xd7c <uxListRemove>
    1dae:	80 91 ed 06 	lds	r24, 0x06ED	; 0x8006ed <uxSchedulerSuspended>
    1db2:	81 11       	cpse	r24, r1
    1db4:	1c c0       	rjmp	.+56     	; 0x1dee <xTaskRemoveFromEventList+0x62>
    1db6:	0a 50       	subi	r16, 0x0A	; 10
    1db8:	11 09       	sbc	r17, r1
    1dba:	c8 01       	movw	r24, r16
    1dbc:	0e 94 be 06 	call	0xd7c	; 0xd7c <uxListRemove>
    1dc0:	8e 89       	ldd	r24, Y+22	; 0x16
    1dc2:	90 91 f7 06 	lds	r25, 0x06F7	; 0x8006f7 <uxTopReadyPriority>
    1dc6:	98 17       	cp	r25, r24
    1dc8:	10 f4       	brcc	.+4      	; 0x1dce <xTaskRemoveFromEventList+0x42>
    1dca:	80 93 f7 06 	sts	0x06F7, r24	; 0x8006f7 <uxTopReadyPriority>
    1dce:	90 e0       	ldi	r25, 0x00	; 0
    1dd0:	9c 01       	movw	r18, r24
    1dd2:	22 0f       	add	r18, r18
    1dd4:	33 1f       	adc	r19, r19
    1dd6:	22 0f       	add	r18, r18
    1dd8:	33 1f       	adc	r19, r19
    1dda:	22 0f       	add	r18, r18
    1ddc:	33 1f       	adc	r19, r19
    1dde:	82 0f       	add	r24, r18
    1de0:	93 1f       	adc	r25, r19
    1de2:	b8 01       	movw	r22, r16
    1de4:	83 5d       	subi	r24, 0xD3	; 211
    1de6:	98 4f       	sbci	r25, 0xF8	; 248
    1de8:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <vListInsertEnd>
    1dec:	05 c0       	rjmp	.+10     	; 0x1df8 <xTaskRemoveFromEventList+0x6c>
    1dee:	b8 01       	movw	r22, r16
    1df0:	8e e0       	ldi	r24, 0x0E	; 14
    1df2:	97 e0       	ldi	r25, 0x07	; 7
    1df4:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <vListInsertEnd>
    1df8:	9e 89       	ldd	r25, Y+22	; 0x16
    1dfa:	e0 91 51 07 	lds	r30, 0x0751	; 0x800751 <pxCurrentTCB>
    1dfe:	f0 91 52 07 	lds	r31, 0x0752	; 0x800752 <pxCurrentTCB+0x1>
    1e02:	86 89       	ldd	r24, Z+22	; 0x16
    1e04:	89 17       	cp	r24, r25
    1e06:	20 f4       	brcc	.+8      	; 0x1e10 <xTaskRemoveFromEventList+0x84>
    1e08:	81 e0       	ldi	r24, 0x01	; 1
    1e0a:	80 93 f4 06 	sts	0x06F4, r24	; 0x8006f4 <xYieldPending>
    1e0e:	01 c0       	rjmp	.+2      	; 0x1e12 <xTaskRemoveFromEventList+0x86>
    1e10:	80 e0       	ldi	r24, 0x00	; 0
    1e12:	df 91       	pop	r29
    1e14:	cf 91       	pop	r28
    1e16:	1f 91       	pop	r17
    1e18:	0f 91       	pop	r16
    1e1a:	08 95       	ret

00001e1c <vTaskInternalSetTimeOutState>:
    1e1c:	20 91 f3 06 	lds	r18, 0x06F3	; 0x8006f3 <xNumOfOverflows>
    1e20:	fc 01       	movw	r30, r24
    1e22:	20 83       	st	Z, r18
    1e24:	20 91 f8 06 	lds	r18, 0x06F8	; 0x8006f8 <xTickCount>
    1e28:	30 91 f9 06 	lds	r19, 0x06F9	; 0x8006f9 <xTickCount+0x1>
    1e2c:	32 83       	std	Z+2, r19	; 0x02
    1e2e:	21 83       	std	Z+1, r18	; 0x01
    1e30:	08 95       	ret

00001e32 <xTaskCheckForTimeOut>:
    1e32:	1f 93       	push	r17
    1e34:	cf 93       	push	r28
    1e36:	df 93       	push	r29
    1e38:	0f b6       	in	r0, 0x3f	; 63
    1e3a:	f8 94       	cli
    1e3c:	0f 92       	push	r0
    1e3e:	e0 91 f8 06 	lds	r30, 0x06F8	; 0x8006f8 <xTickCount>
    1e42:	f0 91 f9 06 	lds	r31, 0x06F9	; 0x8006f9 <xTickCount+0x1>
    1e46:	dc 01       	movw	r26, r24
    1e48:	11 96       	adiw	r26, 0x01	; 1
    1e4a:	4d 91       	ld	r20, X+
    1e4c:	5c 91       	ld	r21, X
    1e4e:	12 97       	sbiw	r26, 0x02	; 2
    1e50:	df 01       	movw	r26, r30
    1e52:	a4 1b       	sub	r26, r20
    1e54:	b5 0b       	sbc	r27, r21
    1e56:	eb 01       	movw	r28, r22
    1e58:	28 81       	ld	r18, Y
    1e5a:	39 81       	ldd	r19, Y+1	; 0x01
    1e5c:	2f 3f       	cpi	r18, 0xFF	; 255
    1e5e:	df ef       	ldi	r29, 0xFF	; 255
    1e60:	3d 07       	cpc	r19, r29
    1e62:	d1 f0       	breq	.+52     	; 0x1e98 <xTaskCheckForTimeOut+0x66>
    1e64:	ec 01       	movw	r28, r24
    1e66:	18 81       	ld	r17, Y
    1e68:	c0 91 f3 06 	lds	r28, 0x06F3	; 0x8006f3 <xNumOfOverflows>
    1e6c:	1c 17       	cp	r17, r28
    1e6e:	19 f0       	breq	.+6      	; 0x1e76 <xTaskCheckForTimeOut+0x44>
    1e70:	e4 17       	cp	r30, r20
    1e72:	f5 07       	cpc	r31, r21
    1e74:	98 f4       	brcc	.+38     	; 0x1e9c <xTaskCheckForTimeOut+0x6a>
    1e76:	a2 17       	cp	r26, r18
    1e78:	b3 07       	cpc	r27, r19
    1e7a:	48 f4       	brcc	.+18     	; 0x1e8e <xTaskCheckForTimeOut+0x5c>
    1e7c:	fb 01       	movw	r30, r22
    1e7e:	2a 1b       	sub	r18, r26
    1e80:	3b 0b       	sbc	r19, r27
    1e82:	31 83       	std	Z+1, r19	; 0x01
    1e84:	20 83       	st	Z, r18
    1e86:	0e 94 0e 0f 	call	0x1e1c	; 0x1e1c <vTaskInternalSetTimeOutState>
    1e8a:	80 e0       	ldi	r24, 0x00	; 0
    1e8c:	08 c0       	rjmp	.+16     	; 0x1e9e <xTaskCheckForTimeOut+0x6c>
    1e8e:	fb 01       	movw	r30, r22
    1e90:	11 82       	std	Z+1, r1	; 0x01
    1e92:	10 82       	st	Z, r1
    1e94:	81 e0       	ldi	r24, 0x01	; 1
    1e96:	03 c0       	rjmp	.+6      	; 0x1e9e <xTaskCheckForTimeOut+0x6c>
    1e98:	80 e0       	ldi	r24, 0x00	; 0
    1e9a:	01 c0       	rjmp	.+2      	; 0x1e9e <xTaskCheckForTimeOut+0x6c>
    1e9c:	81 e0       	ldi	r24, 0x01	; 1
    1e9e:	0f 90       	pop	r0
    1ea0:	0f be       	out	0x3f, r0	; 63
    1ea2:	df 91       	pop	r29
    1ea4:	cf 91       	pop	r28
    1ea6:	1f 91       	pop	r17
    1ea8:	08 95       	ret

00001eaa <vTaskMissedYield>:
    1eaa:	81 e0       	ldi	r24, 0x01	; 1
    1eac:	80 93 f4 06 	sts	0x06F4, r24	; 0x8006f4 <xYieldPending>
    1eb0:	08 95       	ret

00001eb2 <__udivmodqi4>:
    1eb2:	99 1b       	sub	r25, r25
    1eb4:	79 e0       	ldi	r23, 0x09	; 9
    1eb6:	04 c0       	rjmp	.+8      	; 0x1ec0 <__udivmodqi4_ep>

00001eb8 <__udivmodqi4_loop>:
    1eb8:	99 1f       	adc	r25, r25
    1eba:	96 17       	cp	r25, r22
    1ebc:	08 f0       	brcs	.+2      	; 0x1ec0 <__udivmodqi4_ep>
    1ebe:	96 1b       	sub	r25, r22

00001ec0 <__udivmodqi4_ep>:
    1ec0:	88 1f       	adc	r24, r24
    1ec2:	7a 95       	dec	r23
    1ec4:	c9 f7       	brne	.-14     	; 0x1eb8 <__udivmodqi4_loop>
    1ec6:	80 95       	com	r24
    1ec8:	08 95       	ret

00001eca <__udivmodsi4>:
    1eca:	a1 e2       	ldi	r26, 0x21	; 33
    1ecc:	1a 2e       	mov	r1, r26
    1ece:	aa 1b       	sub	r26, r26
    1ed0:	bb 1b       	sub	r27, r27
    1ed2:	fd 01       	movw	r30, r26
    1ed4:	0d c0       	rjmp	.+26     	; 0x1ef0 <__udivmodsi4_ep>

00001ed6 <__udivmodsi4_loop>:
    1ed6:	aa 1f       	adc	r26, r26
    1ed8:	bb 1f       	adc	r27, r27
    1eda:	ee 1f       	adc	r30, r30
    1edc:	ff 1f       	adc	r31, r31
    1ede:	a2 17       	cp	r26, r18
    1ee0:	b3 07       	cpc	r27, r19
    1ee2:	e4 07       	cpc	r30, r20
    1ee4:	f5 07       	cpc	r31, r21
    1ee6:	20 f0       	brcs	.+8      	; 0x1ef0 <__udivmodsi4_ep>
    1ee8:	a2 1b       	sub	r26, r18
    1eea:	b3 0b       	sbc	r27, r19
    1eec:	e4 0b       	sbc	r30, r20
    1eee:	f5 0b       	sbc	r31, r21

00001ef0 <__udivmodsi4_ep>:
    1ef0:	66 1f       	adc	r22, r22
    1ef2:	77 1f       	adc	r23, r23
    1ef4:	88 1f       	adc	r24, r24
    1ef6:	99 1f       	adc	r25, r25
    1ef8:	1a 94       	dec	r1
    1efa:	69 f7       	brne	.-38     	; 0x1ed6 <__udivmodsi4_loop>
    1efc:	60 95       	com	r22
    1efe:	70 95       	com	r23
    1f00:	80 95       	com	r24
    1f02:	90 95       	com	r25
    1f04:	9b 01       	movw	r18, r22
    1f06:	ac 01       	movw	r20, r24
    1f08:	bd 01       	movw	r22, r26
    1f0a:	cf 01       	movw	r24, r30
    1f0c:	08 95       	ret

00001f0e <__divmodsi4>:
    1f0e:	05 2e       	mov	r0, r21
    1f10:	97 fb       	bst	r25, 7
    1f12:	1e f4       	brtc	.+6      	; 0x1f1a <__divmodsi4+0xc>
    1f14:	00 94       	com	r0
    1f16:	0e 94 9e 0f 	call	0x1f3c	; 0x1f3c <__negsi2>
    1f1a:	57 fd       	sbrc	r21, 7
    1f1c:	07 d0       	rcall	.+14     	; 0x1f2c <__divmodsi4_neg2>
    1f1e:	0e 94 65 0f 	call	0x1eca	; 0x1eca <__udivmodsi4>
    1f22:	07 fc       	sbrc	r0, 7
    1f24:	03 d0       	rcall	.+6      	; 0x1f2c <__divmodsi4_neg2>
    1f26:	4e f4       	brtc	.+18     	; 0x1f3a <__divmodsi4_exit>
    1f28:	0c 94 9e 0f 	jmp	0x1f3c	; 0x1f3c <__negsi2>

00001f2c <__divmodsi4_neg2>:
    1f2c:	50 95       	com	r21
    1f2e:	40 95       	com	r20
    1f30:	30 95       	com	r19
    1f32:	21 95       	neg	r18
    1f34:	3f 4f       	sbci	r19, 0xFF	; 255
    1f36:	4f 4f       	sbci	r20, 0xFF	; 255
    1f38:	5f 4f       	sbci	r21, 0xFF	; 255

00001f3a <__divmodsi4_exit>:
    1f3a:	08 95       	ret

00001f3c <__negsi2>:
    1f3c:	90 95       	com	r25
    1f3e:	80 95       	com	r24
    1f40:	70 95       	com	r23
    1f42:	61 95       	neg	r22
    1f44:	7f 4f       	sbci	r23, 0xFF	; 255
    1f46:	8f 4f       	sbci	r24, 0xFF	; 255
    1f48:	9f 4f       	sbci	r25, 0xFF	; 255
    1f4a:	08 95       	ret

00001f4c <__umulhisi3>:
    1f4c:	a2 9f       	mul	r26, r18
    1f4e:	b0 01       	movw	r22, r0
    1f50:	b3 9f       	mul	r27, r19
    1f52:	c0 01       	movw	r24, r0
    1f54:	a3 9f       	mul	r26, r19
    1f56:	70 0d       	add	r23, r0
    1f58:	81 1d       	adc	r24, r1
    1f5a:	11 24       	eor	r1, r1
    1f5c:	91 1d       	adc	r25, r1
    1f5e:	b2 9f       	mul	r27, r18
    1f60:	70 0d       	add	r23, r0
    1f62:	81 1d       	adc	r24, r1
    1f64:	11 24       	eor	r1, r1
    1f66:	91 1d       	adc	r25, r1
    1f68:	08 95       	ret

00001f6a <__muluhisi3>:
    1f6a:	0e 94 a6 0f 	call	0x1f4c	; 0x1f4c <__umulhisi3>
    1f6e:	a5 9f       	mul	r26, r21
    1f70:	90 0d       	add	r25, r0
    1f72:	b4 9f       	mul	r27, r20
    1f74:	90 0d       	add	r25, r0
    1f76:	a4 9f       	mul	r26, r20
    1f78:	80 0d       	add	r24, r0
    1f7a:	91 1d       	adc	r25, r1
    1f7c:	11 24       	eor	r1, r1
    1f7e:	08 95       	ret

00001f80 <memcpy>:
    1f80:	fb 01       	movw	r30, r22
    1f82:	dc 01       	movw	r26, r24
    1f84:	02 c0       	rjmp	.+4      	; 0x1f8a <memcpy+0xa>
    1f86:	01 90       	ld	r0, Z+
    1f88:	0d 92       	st	X+, r0
    1f8a:	41 50       	subi	r20, 0x01	; 1
    1f8c:	50 40       	sbci	r21, 0x00	; 0
    1f8e:	d8 f7       	brcc	.-10     	; 0x1f86 <memcpy+0x6>
    1f90:	08 95       	ret

00001f92 <_exit>:
    1f92:	f8 94       	cli

00001f94 <__stop_program>:
    1f94:	ff cf       	rjmp	.-2      	; 0x1f94 <__stop_program>
